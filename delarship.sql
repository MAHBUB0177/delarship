--
-- PostgreSQL database dump
--

-- Dumped from database version 10.9
-- Dumped by pg_dump version 10.9

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: center_days_of_month; Type: TYPE; Schema: public; Owner: delarship
--

CREATE TYPE public.center_days_of_month AS (
	center_week character varying(20),
	center_begin_date date,
	center_date date
);


ALTER TYPE public.center_days_of_month OWNER TO delarship;

--
-- Name: charge_type; Type: TYPE; Schema: public; Owner: delarship
--

CREATE TYPE public.charge_type AS (
	charges_id character varying(20),
	charges_code character varying(20),
	charges_name character varying(200),
	charge_amount numeric(22,2)
);


ALTER TYPE public.charge_type OWNER TO delarship;

--
-- Name: fn_delar_client_center_transfer(character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_delar_client_center_transfer(p_client_id character, p_new_center_code character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_errm              VARCHAR;
   w_status            VARCHAR;
   client_info         RECORD;
   account_info        RECORD;
   w_center_code       INTEGER;
   w_old_center_code   VARCHAR;
BEGIN
   BEGIN
      SELECT center_code
        INTO STRICT w_center_code
        FROM delar_center
       WHERE center_code = p_new_center_code;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         w_status := 'E';
         w_errm := 'Invalid Center Code!';
         RAISE EXCEPTION USING MESSAGE = w_errm;
   END;

   FOR client_info IN (SELECT client_id, center_code
                         FROM sales_clients
                        WHERE client_id = p_client_id)
   LOOP
      w_old_center_code := client_info.center_code;

      UPDATE sales_clients
         SET center_code = p_new_center_code
       WHERE client_id = client_info.client_id;

      UPDATE sales_sales_master
         SET center_code = p_new_center_code
       WHERE customer_id = p_client_id;

      UPDATE sales_sales_return_details
         SET center_code = p_new_center_code
       WHERE client_id = p_client_id;

      UPDATE sales_order_master
         SET center_code = p_new_center_code
       WHERE customer_id = p_client_id;

      UPDATE sales_sales_details
         SET center_code = p_new_center_code
       WHERE client_id = p_client_id;

      UPDATE sales_emi_setup
         SET center_code = p_new_center_code
       WHERE client_id = p_client_id;

      UPDATE sales_fees_history
         SET center_code = p_new_center_code
       WHERE client_id = p_client_id;

   END LOOP;

   FOR account_info IN (SELECT account_number, client_id
                          FROM finance_accounts_balance
                         WHERE client_id = p_client_id)
   LOOP
      UPDATE finance_accounts_balance
         SET center_code = p_new_center_code
       WHERE client_id = p_client_id;

      UPDATE finance_transaction_details
         SET center_code = p_new_center_code
       WHERE account_number = account_info.account_number;

      UPDATE finance_deposit_receive
         SET center_code = p_new_center_code
       WHERE account_number = account_info.account_number;

      UPDATE finance_deposit_payment
         SET center_code = p_new_center_code
       WHERE account_number = account_info.account_number;

      UPDATE sales_emi_receive
         SET center_code = p_new_center_code
       WHERE account_number = account_info.account_number;

      UPDATE sales_emi_history
         SET center_code = p_new_center_code
       WHERE account_number = account_info.account_number;
   END LOOP;

   BEGIN
      INSERT INTO delar_client_center_trf_hist (client_id,
                                                 old_center_code,
                                                 new_center_code,
                                                 app_data_time)
           VALUES (p_client_id,
                   w_old_center_code,
                   p_new_center_code,
                   current_timestamp);
   END;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_delar_client_center_transfer(p_client_id character, p_new_center_code character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_delar_srproducts_return(integer, character, date, character, integer, numeric, character, date, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_delar_srproducts_return(p_branch_code integer, p_app_user_id character, p_invoice_date date, p_product_id character, p_returned_quantity integer, p_returned_price numeric, p_return_reason character, p_return_date date, p_employee_id character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                     VARCHAR;
   w_errm                       VARCHAR;
   product_list                 RECORD;
   w_invoice_date               DATE;
   w_tran_batch_number          INTEGER;
   w_invoice_status             VARCHAR;
   w_customer_phone             VARCHAR;
   w_tran_gl_code               VARCHAR := '0';
   w_cash_gl_code               VARCHAR := '0';
   w_customer_id                VARCHAR := '0';
   w_contra_gl_code             VARCHAR := '0';
   w_account_ledger_code        VARCHAR := '0';
   w_invoice_discount_gl        VARCHAR := '0';
   w_serial_no                  INTEGER := 0;
   w_tran_amount                NUMERIC (22, 2) := 0;
   w_profitloss_amount          NUMERIC (22, 2) := 0;
   w_tran_naration              VARCHAR;
   w_debit_credit               VARCHAR;
   w_center_code                VARCHAR;
   w_total_return_amount        NUMERIC (22, 2) := 0;
   w_total_pay_amount           NUMERIC (22, 2) := 0;
   w_total_due_amount           NUMERIC (22, 2) := 0;
   w_total_discount_amount      NUMERIC (22, 2) := 0;
   w_account_number             VARCHAR := '0';
   w_client_account             VARCHAR := '0';
   w_return_voucher             VARCHAR;
   w_invoice_number             VARCHAR;
   w_batch_number               INTEGER;
   w_sql_statements             VARCHAR;
   w_counter                    INTEGER;
   w_loss_adjustment_ledger     VARCHAR;
   w_profit_adjustment_ledger   VARCHAR;
   w_last_balance_update        DATE;
   w_last_transaction_date      DATE;
BEGIN
   w_return_voucher :=
      fn_get_inventory_number (106,
                               6,
                               'SRT',
                               'Invoice Return Number');

   /*
      --FOR product_list in (select *from sales_sales_return_details ) loop
      INSERT INTO sales_sales_return_details (sales_invoice,
                                              client_id,
                                              sales_date,
                                              product_id,
                                              return_invoice,
                                              return_date,
                                              status,
                                              tran_type_code,
                                              tran_batch_number,
                                              returned_quantity,
                                              return_amount,
                                              purchase_value,
                                              return_reason,
                                              branch_code,
                                              center_code,
                                              app_user_id,
                                              app_data_time)
           VALUES (w_return_voucher,
                   '9999999999',
                   p_invoice_date,
                   p_product_id,
                   w_return_voucher,
                   p_invoice_date,
                   'R',
                   NULL,
                   NULL,
                   p_returned_quantity,
                   p_returned_price,
                   p_returned_quantity * p_returned_price,
                   p_return_reason,
                   p_branch_code,
                   0,
                   p_app_user_id,
                   current_timestamp);*/

   SELECT inv_balance_upto_date,
          COALESCE (last_sales_return_date, p_return_date) last_sales_return_date
     INTO STRICT w_last_balance_update, w_last_transaction_date
     FROM sales_products_inventory_status
    WHERE product_id = p_product_id AND branch_code = p_branch_code;

   w_last_balance_update := LEAST (w_last_balance_update, p_return_date);
   w_last_transaction_date :=
      GREATEST (w_last_transaction_date, p_return_date);

   /*
      UPDATE sales_products_inventory_status
         SET product_available_stock =
                product_available_stock + p_returned_quantity,
             last_sales_return_date = w_last_transaction_date,
             inv_balance_upto_date = w_last_balance_update,
             is_balance_updated = FALSE
       WHERE product_id = p_product_id AND branch_code = p_branch_code;

      UPDATE sales_products
         SET product_available_stock =
                product_available_stock + p_returned_quantity
       WHERE product_id = p_product_id; */

   UPDATE delar_srstage_inventory_status
      SET total_stock_return = total_stock_return + p_returned_quantity,
          last_stock_return_date = p_return_date,
          product_available_stock =
             product_available_stock - p_returned_quantity
    WHERE product_id = p_product_id AND employee_id = p_employee_id;


   UPDATE delar_srstage_details
      SET return_quantity =
             COALESCE (return_quantity, 0) + p_returned_quantity
    WHERE     employee_id = p_employee_id
          AND product_id = p_product_id
          AND invoice_date = p_invoice_date;


   --  END LOOP;



   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_delar_srproducts_return(p_branch_code integer, p_app_user_id character, p_invoice_date date, p_product_id character, p_returned_quantity integer, p_returned_price numeric, p_return_reason character, p_return_date date, p_employee_id character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_delar_srstage_post(integer, date, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_delar_srstage_post(p_branch_code integer, p_invoice_date date, p_employee_id character, p_app_user_id character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_error_message              VARCHAR;
   w_batch_number               INTEGER;
   w_check                      BOOLEAN;
   w_account_number             VARCHAR := '0';
   w_transaction_date           DATE;
   product_list                 RECORD;
   w_tran_gl_code               VARCHAR := '0';
   w_cash_transaction           BOOLEAN;
   w_total_leg                  INTEGER;
   w_total_debit_amount         NUMERIC (22, 2) := 0;
   w_total_credit_amount        NUMERIC (22, 2) := 0;
   w_account_banalce            NUMERIC (22, 2) := 0;
   w_credit_limit               NUMERIC (22, 2) := 0;
   w_serial_no                  INTEGER := 0;
   w_product_total_stock        INTEGER := 0;
   w_product_total_sales        INTEGER := 0;
   w_product_available_stock    INTEGER := 0;
   w_product_last_stock_date    DATE;
   w_product_last_sale_date     DATE;
   w_product_last_return_date   DATE;
   w_product_total_returned     INTEGER := 0;
   w_total_purchase_amount      NUMERIC (22, 2) := 0.00;
   w_total_return_amount        NUMERIC (22, 2) := 0.00;
   w_total_sales_amount         NUMERIC (22, 2) := 0.00;
   w_product_total_damage       INTEGER := 0;
   w_total_return_damage        NUMERIC (22, 2) := 0.00;
   w_last_order_date            DATE;
   w_total_order_quantity       INTEGER := 0;
   w_total_bill_amount          NUMERIC (22, 2) := 0.00;
   w_bill_amount                NUMERIC (22, 2) := 0.00;
   w_due_amount                 NUMERIC (22, 2) := 0.00;
   w_advance_pay                NUMERIC (22, 2) := 0.00;
   w_status                     VARCHAR;
   w_errm                       VARCHAR;
   w_product_name               VARCHAR;
   w_tran_debit_account_type    VARCHAR;
   w_invoice_number             VARCHAR;
   w_last_balance_update        DATE;
   w_last_transaction_date      DATE;
BEGIN
   w_last_order_date := p_invoice_date;

   BEGIN
      SELECT invoice_number
       INTO STRICT w_invoice_number
       FROM delar_srstage_master
      WHERE     branch_code = p_branch_code
            AND invoice_date = p_invoice_date
            AND employee_id = p_employee_id;
   EXCEPTION
      WHEN no_data_found
      THEN
         w_invoice_number :=
            fn_get_inventory_number (40004,
                                     100,
                                     'SR',
                                     'Sales Representative Number Generate',
                                     8);
   END;

   FOR product_list
      IN (  SELECT s.invoice_number,
                   s.product_id,
                   s.product_bar_code,
                   s.product_model,
                   s.product_name,
                   s.product_price,
                   s.quantity,
                   s.total_price,
                   s.profit_amount,
                   s.discount_rate,
                   s.discount_amount,
                   s.status,
                   s.comments,
                   s.app_user_id,
                   s.app_data_time
              FROM delar_srstage_details_temp s, sales_products p
             WHERE     p.product_id = s.product_id
                   AND s.app_user_id = p_app_user_id
          ORDER BY s.id)
   LOOP
      BEGIN
         w_total_order_quantity :=
            w_total_order_quantity + product_list.quantity;
         w_serial_no := w_serial_no + 1;
         w_total_bill_amount :=
            w_total_bill_amount + product_list.total_price;
         w_bill_amount :=
              w_bill_amount
            + product_list.total_price
            - product_list.discount_amount;

         BEGIN
            SELECT invoice_number
             INTO STRICT w_invoice_number
             FROM delar_srstage_details
            WHERE     branch_code = p_branch_code
                  AND invoice_date = p_invoice_date
                  AND product_id = product_list.product_id
                  AND employee_id = p_employee_id;

            UPDATE delar_srstage_details
               SET product_price = product_price + product_list.product_price,
                   quantity = quantity + product_list.quantity,
                   total_price = total_price + product_list.total_price,
                   profit_amount = profit_amount + product_list.profit_amount,
                   discount_amount =
                      discount_amount + product_list.discount_amount
             WHERE     branch_code = p_branch_code
                   AND invoice_date = p_invoice_date
                   AND product_id = product_list.product_id
                   AND employee_id = p_employee_id;
         EXCEPTION
            WHEN no_data_found
            THEN
               INSERT INTO delar_srstage_details (branch_code,
                                                  invoice_number,
                                                  invoice_date,
                                                  employee_id,
                                                  product_id,
                                                  product_price,
                                                  quantity,
                                                  total_price,
                                                  profit_amount,
                                                  discount_rate,
                                                  discount_amount,
                                                  status,
                                                  comments,
                                                  sales_amount,
                                                  sales_discount_amount,
                                                  sales_quantity,
                                                  app_user_id,
                                                  app_data_time)
                    VALUES (p_branch_code,
                            w_invoice_number,
                            p_invoice_date,
                            p_employee_id,
                            product_list.product_id,
                            product_list.product_price,
                            product_list.quantity,
                            product_list.total_price,
                            product_list.profit_amount,
                            product_list.discount_rate,
                            product_list.discount_amount,
                            'I',
                            product_list.comments,
                            0.00,
                            0.00,
                            0,
                            product_list.app_user_id,
                            current_timestamp);
         END;
      END;

      BEGIN
         SELECT product_available_stock,
                inv_balance_upto_date,
                COALESCE (last_sale_date, p_invoice_date) last_sale_date
           INTO w_product_available_stock,
                w_last_balance_update,
                w_last_transaction_date
           FROM sales_products_inventory_status
          WHERE     product_id = product_list.product_id
                AND branch_code = p_branch_code;

         /*
                  UPDATE sales_products_inventory_status
                     SET product_quantity_in_sr =
                            product_quantity_in_sr + product_list.quantity,
                         last_sale_date = w_last_transaction_date,
                         inv_balance_upto_date = w_last_balance_update
                   WHERE     product_id = product_list.product_id
                         AND branch_code = p_branch_code;
         */
         SELECT product_name
           INTO w_product_name
           FROM sales_products
          WHERE product_id = product_list.product_id;
      END;

      IF w_product_available_stock - product_list.quantity < 0
      THEN
         w_status := 'E';
         w_errm := 'Product ' || w_product_name || ' Out of Stock!';
         RAISE EXCEPTION USING MESSAGE = w_errm;
      END IF;

      BEGIN
         SELECT product_available_stock,
                inv_balance_upto_date,
                COALESCE (last_sale_date, p_invoice_date) last_sale_date
           INTO STRICT w_product_available_stock,
                       w_last_balance_update,
                       w_last_transaction_date
           FROM delar_srstage_inventory_status
          WHERE     product_id = product_list.product_id
                AND employee_id = p_employee_id;

         w_last_balance_update :=
            LEAST (p_invoice_date, w_last_balance_update);
         w_last_transaction_date :=
            GREATEST (p_invoice_date, w_last_balance_update);

         UPDATE delar_srstage_inventory_status
            SET product_total_stock =
                   product_total_stock + product_list.quantity,
                product_available_stock =
                   product_available_stock + product_list.quantity,
                total_purchase_amount =
                   total_purchase_amount + product_list.total_price,
                last_stock_date = w_last_transaction_date,
                inv_balance_upto_date = w_last_balance_update
          WHERE     product_id = product_list.product_id
                AND employee_id = p_employee_id;
      EXCEPTION
         WHEN NO_DATA_FOUND
         THEN
            INSERT INTO delar_srstage_inventory_status (
                           branch_code,
                           employee_id,
                           product_id,
                           product_total_stock,
                           total_order_quantity,
                           product_total_sales,
                           total_stock_return,
                           total_sales_return,
                           product_total_damage,
                           product_available_stock,
                           product_purchase_rate,
                           last_stock_date,
                           last_order_date,
                           last_sale_date,
                           last_stock_return_date,
                           last_sales_return_date,
                           last_damage_date,
                           inv_balance_upto_date,
                           total_purchase_amount,
                           total_sales_amount,
                           stock_return_amount,
                           sales_return_amount,
                           total_damage_amount,
                           damage_receive_amount,
                           cost_of_good_sold,
                           total_discount_receive,
                           total_discount_pay,
                           packet_payment_value,
                           packet_receive_value,
                           total_packet_payment,
                           total_packet_receive,
                           app_user_id,
                           app_data_time)
                 VALUES (p_branch_code,
                         p_employee_id,
                         product_list.product_id,
                         product_list.quantity,
                         0,
                         0,
                         0,
                         0,
                         0,
                         product_list.quantity,
                         0.00,
                         p_invoice_date,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         p_invoice_date - 1,
                         product_list.total_price,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0,
                         0,
                         p_app_user_id,
                         current_timestamp);
      END;

      BEGIN
         UPDATE delar_srstage_inventory_sum
            SET product_total_stock =
                   product_total_stock + product_list.quantity,
                product_available_stock =
                   product_available_stock + product_list.quantity,
                total_purchase_amount =
                   total_purchase_amount + product_list.total_price
          WHERE employee_id = p_employee_id;
      EXCEPTION
         WHEN NO_DATA_FOUND
         THEN
            INSERT INTO delar_srstage_inventory_sum (employee_id,
                                                     product_total_stock,
                                                     total_order_quantity,
                                                     product_total_sales,
                                                     total_stock_return,
                                                     total_sales_return,
                                                     product_total_damage,
                                                     product_available_stock,
                                                     total_purchase_amount,
                                                     total_sales_amount,
                                                     stock_return_amount,
                                                     sales_return_amount,
                                                     total_damage_amount,
                                                     damage_receive_amount,
                                                     cost_of_good_sold,
                                                     total_discount_receive,
                                                     total_discount_pay,
                                                     packet_payment_value,
                                                     packet_receive_value,
                                                     total_packet_payment,
                                                     total_packet_receive,
                                                     app_user_id,
                                                     app_data_time)
                 VALUES (p_employee_id,
                         product_list.quantity,
                         0,
                         0,
                         0,
                         0,
                         0,
                         product_list.quantity,
                         product_list.total_price,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0.00,
                         0,
                         0,
                         p_app_user_id,
                         current_timestamp);
      END;
   END LOOP;

   BEGIN
      SELECT invoice_number
       INTO STRICT w_invoice_number
       FROM delar_srstage_master
      WHERE     branch_code = p_branch_code
            AND invoice_date = p_invoice_date
            AND employee_id = p_employee_id;

      UPDATE delar_srstage_master
         SET total_bill_amount = total_bill_amount + w_total_bill_amount,
             total_quantity = total_quantity + w_total_order_quantity,
             bill_amount = bill_amount + w_bill_amount,
             due_amount = due_amount + w_due_amount,
             advance_pay = advance_pay + w_advance_pay
       WHERE     branch_code = p_branch_code
             AND invoice_date = p_invoice_date
             AND employee_id = p_employee_id;
   EXCEPTION
      WHEN no_data_found
      THEN
         INSERT INTO delar_srstage_master (branch_code,
                                           invoice_number,
                                           invoice_date,
                                           employee_id,
                                           total_quantity,
                                           returned_quantity,
                                           total_bill_amount,
                                           bill_amount,
                                           pay_amount,
                                           due_amount,
                                           advance_pay,
                                           status,
                                           invoice_comments,
                                           total_sales_amount,
                                           total_sales_discount_amount,
                                           total_sales_quantity,
                                           app_user_id,
                                           app_data_time)
              VALUES (p_branch_code,
                      w_invoice_number,
                      p_invoice_date,
                      p_employee_id,
                      w_total_order_quantity,
                      0,
                      w_total_bill_amount,
                      w_bill_amount,
                      0,
                      w_due_amount,
                      w_advance_pay,
                      'S',
                      'NA',
                      0.00,
                      0.00,
                      0,
                      p_app_user_id,
                      current_timestamp);
   END;

   DELETE FROM delar_srstage_details_temp s
         WHERE s.app_user_id = p_app_user_id;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_delar_srstage_post(p_branch_code integer, p_invoice_date date, p_employee_id character, p_app_user_id character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_fin_check_day_month_year(character, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_fin_check_day_month_year(p_frequenct character, p_date date) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_month_end         DATE;
   w_quarter_end       DATE;
   w_half_year_end     DATE;
   w_year_end          DATE;
   w_month_start       DATE;
   w_quarter_start     DATE;
   w_half_year_start   DATE;
   w_year_start        DATE;
BEGIN
   SELECT CAST (
               date_trunc ('month', p_date)
             + INTERVAL '1 months'
             - INTERVAL '1 day' AS DATE)
             month_end,
          CAST (
               date_trunc ('quarter', p_date)
             + INTERVAL '3 months'
             - INTERVAL '1 day' AS DATE)
             quarter_end,
          CAST (
               date_trunc ('year', p_date)
             + INTERVAL '6 months'
             - INTERVAL '1 day' AS DATE)
             half_year_end,
          CAST (
               date_trunc ('year', p_date)
             + INTERVAL '12 months'
             - INTERVAL '1 day' AS DATE)
             year_end,
          CAST (date_trunc ('month', p_date) AS DATE)
             month_start,
          CAST (date_trunc ('quarter', p_date) AS DATE)
             quarter_start,
          CAST (
             CAST (EXTRACT (YEAR FROM p_date) AS INTEGER) || '-07-01' AS DATE)
             half_year_start,
          CAST (date_trunc ('year', p_date) AS DATE)
             year_start
     INTO w_month_end,
          w_quarter_end,
          w_half_year_end,
          w_year_end,
          w_month_start,
          w_quarter_start,
          w_half_year_start,
          w_year_start;

   IF p_frequenct = 'D'
   THEN
      RETURN TRUE;
   END IF;

   IF p_frequenct = 'M'
   THEN
      IF w_month_end = p_date
      THEN
         RETURN TRUE;
      END IF;
   END IF;

   IF p_frequenct = 'Q'
   THEN
      IF w_quarter_end = p_date
      THEN
         RETURN TRUE;
      END IF;
   END IF;

   IF p_frequenct = 'H'
   THEN
      IF w_half_year_end = p_date
      THEN
         RETURN TRUE;
      END IF;
   END IF;

   IF p_frequenct = 'Y'
   THEN
      IF w_year_end = p_date
      THEN
         RETURN TRUE;
      END IF;
   END IF;

   RETURN FALSE;
EXCEPTION
   WHEN OTHERS
   THEN
      RETURN FALSE;
END;
$$;


ALTER FUNCTION public.fn_fin_check_day_month_year(p_frequenct character, p_date date) OWNER TO delarship;

--
-- Name: fn_finance_acbal_hist(character, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_acbal_hist(p_account_number character, p_ason_date date, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   rec_account_list         RECORD;
   rec_date_list            RECORD;
   w_calculate_date         DATE;
   w_current_business_day   DATE;
   w_total_debit_sum        NUMERIC (22, 2) := 0;
   w_total_credit_sum       NUMERIC (22, 2) := 0;
   w_account_balance        NUMERIC (22, 2) := 0;
   w_account_balance_prev   NUMERIC (22, 2) := 0;
   w_cum_debit_sum          NUMERIC (22, 2) := 0;
   w_cum_credit_sum         NUMERIC (22, 2) := 0;
   w_charge_banalce         NUMERIC (22, 2) := 0;
   w_status                 VARCHAR;
   w_errm                   VARCHAR;
BEGIN
   FOR rec_account_list
      IN (SELECT branch_code,
                 account_number,
                 account_balance,
                 last_transaction_date,
                 last_balance_update
            FROM finance_accounts_balance
           WHERE account_number = p_account_number AND NOT is_balance_updated)
   LOOP
      w_calculate_date := rec_account_list.last_balance_update;

      BEGIN
         SELECT o_account_balance, o_total_credit, o_total_debit
           INTO w_account_balance, w_cum_credit_sum, w_cum_debit_sum
           FROM fn_finance_get_ason_acbal (rec_account_list.account_number,
                                           w_calculate_date - 1);
      END;

      FOR rec_date_list
         IN (  SELECT transaction_date,
                      COALESCE (SUM (debit_amount), 0.00) total_debit_amount,
                      COALESCE (sum (credit_amount), 0.00) total_credit_amount
                 FROM (SELECT transaction_date,
                              (CASE
                                  WHEN tran_debit_credit = 'D' THEN tran_amount
                                  ELSE 0
                               END) debit_amount,
                              (CASE
                                  WHEN tran_debit_credit = 'C' THEN tran_amount
                                  ELSE 0
                               END) credit_amount
                         FROM finance_transaction_details S
                        WHERE     account_number = p_account_number
                              AND s.cancel_by IS NULL
                              AND transaction_date >
                                  rec_account_list.last_balance_update - 1) T
             GROUP BY transaction_date
             ORDER BY transaction_date)
      LOOP
         w_calculate_date := rec_date_list.transaction_date;
         w_total_credit_sum := rec_date_list.total_credit_amount;
         w_total_debit_sum := rec_date_list.total_debit_amount;
         w_cum_credit_sum :=
            w_cum_credit_sum + rec_date_list.total_credit_amount;
         w_cum_debit_sum :=
            w_cum_debit_sum + rec_date_list.total_debit_amount;
         w_account_balance :=
            w_account_balance + (w_total_credit_sum - w_total_debit_sum);

         DELETE FROM finance_accounts_balance_hist
               WHERE     account_number = rec_account_list.account_number
                     AND transaction_date = w_calculate_date;

         INSERT INTO finance_accounts_balance_hist (branch_code,
                                                    account_number,
                                                    transaction_date,
                                                    total_debit_sum,
                                                    total_credit_sum,
                                                    account_balance,
                                                    cum_debit_sum,
                                                    cum_credit_sum,
                                                    app_user_id,
                                                    app_data_time)
              VALUES (rec_account_list.branch_code,
                      rec_account_list.account_number,
                      w_calculate_date,
                      COALESCE (w_total_debit_sum, 0, 00),
                      COALESCE (w_total_credit_sum, 0.00),
                      COALESCE (w_account_balance, 0.00),
                      COALESCE (w_cum_debit_sum, 0.00),
                      COALESCE (w_cum_credit_sum, 0.00),
                      'SYSTEM',
                      current_timestamp);
      END LOOP;

      UPDATE finance_accounts_balance
         SET last_balance_update = w_calculate_date,
             is_balance_updated = TRUE
       WHERE account_number = p_account_number;
   END LOOP;


   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_finance_acbal_hist(p_account_number character, p_ason_date date, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_finance_balance_history(integer); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_balance_history(p_branch_code integer, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                 VARCHAR;
   w_errm                   VARCHAR;
   w_current_business_day   DATE;
   rec_gl_list              RECORD;
   rec_account_list         RECORD;
   w_account_number         VARCHAR;
BEGIN
   FOR rec_account_list
      IN (SELECT branch_code,
                 account_number,
                 account_balance,
                 last_transaction_date,
                 last_balance_update
            FROM finance_accounts_balance
           WHERE branch_code = p_branch_code AND NOT is_balance_updated)
   LOOP
      w_account_number := rec_account_list.account_number;

      BEGIN
         SELECT *
         INTO w_status, w_errm
         FROM fn_finance_acbal_hist (rec_account_list.account_number,
                                     rec_account_list.last_transaction_date);

         IF w_status = 'E'
         THEN
            RAISE EXCEPTION
            USING MESSAGE =
                        'Error From Account Balance History for Account'
                     || rec_account_list.account_number
                     || ' '
                     || w_errm;
         END IF;
      END;
   END LOOP;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_finance_balance_history(p_branch_code integer, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_finance_get_ason_acbal(character, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_get_ason_acbal(p_account_number character, p_ason_date date, OUT o_account_balance numeric, OUT o_block_amount numeric, OUT o_total_credit numeric, OUT o_total_debit numeric) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_current_business_day       DATE;
   w_account_balance            NUMERIC (22, 2) := 0;
   W_minimum_balance_required   NUMERIC (22, 2) := 0;
   w_total_credit               NUMERIC (22, 2) := 0;
   w_total_debit                NUMERIC (22, 2) := 0;
   w_products_type              CHARACTER (10);
   w_phone_number               CHARACTER (20);
   w_total_block_amount         NUMERIC (22, 2) := 0;
   w_status                     VARCHAR;
   w_errm                       VARCHAR;
   w_last_balance_update        DATE;
   w_last_transaction_date      DATE;
BEGIN
   SELECT account_balance,
          total_debit_amount,
          total_credit_amount,
          account_type,
          phone_number,
          last_balance_update,
          last_transaction_date
     INTO w_account_balance,
          w_total_debit,
          w_total_credit,
          w_products_type,
          w_phone_number,
          w_last_balance_update,
          w_last_transaction_date
     FROM finance_accounts_balance
    WHERE account_number = p_account_number;

   IF     w_last_balance_update = w_last_transaction_date
      AND p_ason_date = w_last_transaction_date
   THEN
      w_account_balance := w_account_balance;
   ELSE
      SELECT account_balance, cum_debit_sum, cum_credit_sum
        INTO w_account_balance, w_total_debit, w_total_credit
        FROM finance_accounts_balance_hist h
       WHERE     h.account_number = p_account_number
             AND h.transaction_date =
                 (SELECT max (transaction_date)
                   FROM finance_accounts_balance_hist
                  WHERE     account_number = p_account_number
                        AND transaction_date <= p_ason_date);
   END IF;

   o_account_balance := COALESCE (w_account_balance, 0.00);
   o_block_amount := COALESCE (w_total_block_amount, 0.00);
   o_total_credit := COALESCE (w_total_credit, 0.00);
   o_total_debit := COALESCE (w_total_debit, 0.00);
END;
$$;


ALTER FUNCTION public.fn_finance_get_ason_acbal(p_account_number character, p_ason_date date, OUT o_account_balance numeric, OUT o_block_amount numeric, OUT o_total_credit numeric, OUT o_total_debit numeric) OWNER TO delarship;

--
-- Name: fn_finance_get_ason_glbal(integer, character, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_get_ason_glbal(p_branch_code integer, p_gl_code character, p_ason_date date, OUT o_gl_balance numeric, OUT o_gl_credit numeric, OUT o_gl_debit numeric, OUT o_block_amount numeric, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_ledger_banalce          NUMERIC (22, 2) := 0;
   w_credit_banalce          NUMERIC (22, 2) := 0;
   w_debit_banalce           NUMERIC (22, 2) := 0;
   w_last_balance_update     DATE;
   w_last_transaction_date   DATE;
   w_status                  VARCHAR;
   w_errm                    VARCHAR;
BEGIN
   o_gl_balance := w_ledger_banalce;
   o_gl_credit := COALESCE (w_credit_banalce, 0.00);
   o_gl_debit := COALESCE (w_debit_banalce, 0.00);
   o_block_amount := 0.00;

   IF p_branch_code = 0
   THEN
      SELECT sum (gl_balance),
             sum (total_credit_sum),
             sum (total_debit_sum),
             min (last_balance_update),
             max (last_transaction_date)
        INTO w_ledger_banalce,
             w_credit_banalce,
             w_debit_banalce,
             w_last_balance_update,
             w_last_transaction_date
        FROM finance_ledger_balance
       WHERE gl_code = p_gl_code;

      IF     w_last_balance_update = w_last_transaction_date
         AND p_ason_date = w_last_transaction_date
      THEN
         w_ledger_banalce := w_ledger_banalce;
      ELSE
         SELECT sum (gl_balance) gl_balance,
                sum (cum_credit_sum),
                sum (cum_debit_sum)
           INTO w_ledger_banalce, w_credit_banalce, w_debit_banalce
           FROM finance_ledger_balance_hist h,
                (  SELECT branch_code,
                          max (transaction_date) last_transaction_date
                     FROM finance_ledger_balance_hist g
                    WHERE     g.gl_code = p_gl_code
                          AND transaction_date <= p_ason_date
                 GROUP BY branch_code) b
          WHERE     h.gl_code = p_gl_code
                AND h.transaction_date = b.last_transaction_date
                AND h.branch_code = b.branch_code;
      END IF;
   ELSIF p_branch_code > 0
   THEN
      SELECT sum (gl_balance),
             sum (total_credit_sum),
             sum (total_debit_sum),
             min (last_balance_update),
             max (last_transaction_date)
        INTO w_ledger_banalce,
             w_credit_banalce,
             w_debit_banalce,
             w_last_balance_update,
             w_last_transaction_date
        FROM finance_ledger_balance
       WHERE gl_code = p_gl_code AND branch_code = p_branch_code;


      IF     w_last_balance_update = w_last_transaction_date
         AND p_ason_date = w_last_transaction_date
      THEN
         w_ledger_banalce := w_ledger_banalce;
      ELSE
         SELECT sum (gl_balance) gl_balance,
                sum (cum_credit_sum),
                sum (cum_debit_sum)
           INTO w_ledger_banalce, w_credit_banalce, w_debit_banalce
           FROM finance_ledger_balance_hist h,
                (  SELECT branch_code,
                          max (transaction_date) last_transaction_date
                     FROM finance_ledger_balance_hist g
                    WHERE     g.gl_code = p_gl_code
                          AND g.branch_code = p_branch_code
                          AND g.transaction_date <= p_ason_date
                 GROUP BY branch_code) b
          WHERE     h.gl_code = p_gl_code
                AND h.branch_code = p_branch_code
                AND h.transaction_date = b.last_transaction_date
                AND h.branch_code = b.branch_code;
      END IF;
   END IF;

   w_ledger_banalce := COALESCE (w_ledger_banalce, 0.00);

   o_gl_balance := w_ledger_banalce;
   o_gl_credit := COALESCE (w_credit_banalce, 0.00);
   o_gl_debit := COALESCE (w_debit_banalce, 0.00);
   o_block_amount := 0.00;
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_finance_get_ason_glbal(p_branch_code integer, p_gl_code character, p_ason_date date, OUT o_gl_balance numeric, OUT o_gl_credit numeric, OUT o_gl_debit numeric, OUT o_block_amount numeric, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_finance_get_charges(numeric, character, character, boolean, boolean); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_get_charges(p_amount numeric DEFAULT 0, p_actype_code character DEFAULT ''::bpchar, p_charge_code character DEFAULT ''::bpchar, p_account_opening boolean DEFAULT false, p_account_closing boolean DEFAULT false) RETURNS SETOF public.charge_type
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                 VARCHAR;
   w_errm                   VARCHAR;
   w_current_business_day   DATE;
   result_record            charge_type;
   rec_open_list            RECORD;
BEGIN
   /*
   CREATE TYPE charge_type AS (charges_code varchar(20), charge_amount NUMERIC (22, 2));

   result_record.charges_code := '1';
   result_record.charge_amount := '1';
   RETURN NEXT
      result_record;

   result_record.charges_code := '2';
   result_record.charge_amount := '2';
   RETURN NEXT
      result_record;
   */

   IF CHAR_LENGTH (p_charge_code) > 1
   THEN
      FOR rec_open_list
         IN (SELECT charges_id,
                    charges_code,
                    charges_name,
                    charge_amount,
                    charge_type,
                    charge_percentage
               FROM finance_charges
              WHERE     charges_code = p_charge_code
                    AND p_amount BETWEEN charge_from_amount
                                     AND charge_upto_amount)
      LOOP
         IF rec_open_list.charge_type = 'F'
         THEN
            result_record.charges_id := rec_open_list.charges_id;
            result_record.charges_code := rec_open_list.charges_code;
            result_record.charges_name := rec_open_list.charges_name;
            result_record.charge_amount := rec_open_list.charge_amount;
            RETURN NEXT
               result_record;
         ELSE
            result_record.charges_id := rec_open_list.charges_id;
            result_record.charges_code := rec_open_list.charges_code;
            result_record.charges_name := rec_open_list.charges_name;
            result_record.charge_amount :=
               (p_amount * (rec_open_list.charge_percentage / 100));
            RETURN NEXT
               result_record;
         END IF;
      END LOOP;
   ELSE
      IF p_account_opening
      THEN
         FOR rec_open_list
            IN (SELECT charges_id,
                       charges_code,
                       charges_name,
                       charge_amount,
                       charge_type,
                       charge_percentage
                  FROM finance_charges
                 WHERE     actype_code = p_actype_code
                       AND account_opening_charge = p_account_opening
                       AND p_amount BETWEEN charge_from_amount
                                        AND charge_upto_amount)
         LOOP
            IF rec_open_list.charge_type = 'F'
            THEN
               result_record.charges_id := rec_open_list.charges_id;
               result_record.charges_code := rec_open_list.charges_code;
               result_record.charges_name := rec_open_list.charges_name;
               result_record.charge_amount := rec_open_list.charge_amount;
               RETURN NEXT
                  result_record;
            ELSE
               result_record.charges_id := rec_open_list.charges_id;
               result_record.charges_code := rec_open_list.charges_code;
               result_record.charges_name := rec_open_list.charges_name;
               result_record.charge_amount :=
                  (p_amount * (rec_open_list.charge_percentage / 100));
               RETURN NEXT
                  result_record;
            END IF;
         END LOOP;
      END IF;

      IF p_account_closing
      THEN
         FOR rec_open_list
            IN (SELECT charges_id,
                       charges_code,
                       charges_name,
                       charge_amount,
                       charge_type,
                       charge_percentage
                  FROM finance_charges
                 WHERE     actype_code = p_actype_code
                       AND account_closing_charge = p_account_closing
                       AND p_amount BETWEEN charge_from_amount
                                        AND charge_upto_amount)
         LOOP
            IF rec_open_list.charge_type = 'F'
            THEN
               result_record.charges_id := rec_open_list.charges_id;
               result_record.charges_code := rec_open_list.charges_code;
               result_record.charges_name := rec_open_list.charges_name;
               result_record.charge_amount := rec_open_list.charge_amount;
               RETURN NEXT
                  result_record;
            ELSE
               result_record.charges_id := rec_open_list.charges_id;
               result_record.charges_code := rec_open_list.charges_code;
               result_record.charges_name := rec_open_list.charges_name;
               result_record.charge_amount :=
                  (p_amount * (rec_open_list.charge_percentage / 100));
               RETURN NEXT
                  result_record;
            END IF;
         END LOOP;
      END IF;
   END IF;

   RETURN;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
$$;


ALTER FUNCTION public.fn_finance_get_charges(p_amount numeric, p_actype_code character, p_charge_code character, p_account_opening boolean, p_account_closing boolean) OWNER TO delarship;

--
-- Name: fn_finance_post_cash_tran(integer, character, character, character, character, date, character, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_post_cash_tran(p_branch_code integer, p_center_code character, p_app_user_id character, p_transaction_type character, p_transaction_ledger character, p_tran_date date, p_tran_narration character, p_receive_payment character, p_tran_source character, OUT o_status character, OUT o_errm character, OUT o_batch_number character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_error_message         VARCHAR;
   w_batch_number          INTEGER;
   w_check                 BOOLEAN;
   w_account_number        VARCHAR := '0';
   w_transaction_date      DATE;
   TRAN_DATA               RECORD;
   w_tran_gl_code          VARCHAR := '0';
   w_contra_gl_code        VARCHAR := '0';
   w_cash_transaction      BOOLEAN;
   w_total_leg             INTEGER;
   w_total_debit_amount    NUMERIC (22, 2) := 0;
   w_total_credit_amount   NUMERIC (22, 2) := 0;
   w_available_balance     NUMERIC (22, 2) := 0;
   w_tran_amount           NUMERIC (22, 2) := 0;
   w_batch_serial          INTEGER := 0;
   w_day_serial_no         INTEGER := 0;
   w_tran_debit_credit     VARCHAR;
   w_status                VARCHAR;
   w_errm                  VARCHAR;
BEGIN
     SELECT count (batch_serial) + 1
               batch_serial,
            SUM (
               (CASE WHEN tran_debit_credit = 'D' THEN tran_amount ELSE 0 END))
               debit_amount,
            SUM (
               (CASE WHEN tran_debit_credit = 'C' THEN tran_amount ELSE 0 END))
               credit_amount
       INTO w_batch_serial, w_total_debit_amount, w_total_credit_amount
       FROM finance_transaction_table S
      WHERE S.branch_code = p_branch_code AND S.app_user_id = p_app_user_id
   ORDER BY batch_serial;

   BEGIN
      SELECT cash_gl_code
        INTO w_tran_gl_code
        FROM appauth_user_settings
       WHERE app_user_id = p_app_user_id;
   END;

   IF w_batch_serial > 0
   THEN
      FOR TRAN_DATA
         IN (  SELECT tran_gl_code,
                      account_number,
                      count (batch_serial) batch_serial,
                      SUM (
                         (CASE
                             WHEN tran_debit_credit = 'D' THEN tran_amount
                             ELSE 0
                          END)) debit_amount,
                      SUM (
                         (CASE
                             WHEN tran_debit_credit = 'C' THEN tran_amount
                             ELSE 0
                          END)) credit_amount
                 FROM finance_transaction_table S
                WHERE S.app_user_id = p_app_user_id
             GROUP BY S.tran_gl_code, s.account_number
             ORDER BY batch_serial)
      LOOP
         w_batch_serial := TRAN_DATA.batch_serial + 1;
         w_account_number := TRAN_DATA.account_number;

         IF TRAN_DATA.debit_amount > 0.00
         THEN
            w_tran_debit_credit := 'C';
            w_tran_amount := TRAN_DATA.debit_amount;
         ELSE
            w_tran_debit_credit := 'D';
            w_tran_amount := TRAN_DATA.credit_amount;
         END IF;

         IF w_account_number != '0'
         THEN
            BEGIN
               SELECT account_ledger_code
                 INTO STRICT w_contra_gl_code
                 FROM finance_accounts_balance
                WHERE account_number = w_account_number;
            EXCEPTION
               WHEN NO_DATA_FOUND
               THEN
                  RAISE EXCEPTION USING MESSAGE = 'Invalid Account Number!';
            END;

            w_account_number := '0';
         ---RAISE EXCEPTION USING MESSAGE = w_contra_gl_code;
         ELSE
            w_contra_gl_code := TRAN_DATA.tran_gl_code;
         END IF;

         IF w_tran_amount > 0
         THEN
            INSERT INTO finance_transaction_table (branch_code,
                                                   center_code,
                                                   transaction_date,
                                                   batch_serial,
                                                   account_number,
                                                   tran_gl_code,
                                                   contra_gl_code,
                                                   tran_debit_credit,
                                                   tran_type,
                                                   tran_amount,
                                                   available_balance,
                                                   tran_person_phone,
                                                   tran_person_name,
                                                   tran_document_prefix,
                                                   tran_document_number,
                                                   tran_sign_verified,
                                                   system_posted_tran,
                                                   transaction_narration,
                                                   app_user_id,
                                                   app_data_time)
                 VALUES (p_branch_code,
                         p_center_code,
                         p_tran_date,
                         w_batch_serial,
                         w_account_number,
                         p_transaction_ledger,
                         w_contra_gl_code,
                         w_tran_debit_credit,
                         p_transaction_type,
                         w_tran_amount,
                         0.00,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         FALSE,
                         FALSE,
                         p_tran_narration,
                         p_app_user_id,
                         current_timestamp);
         END IF;
      END LOOP;

      SELECT *
        INTO w_status, w_errm, w_batch_number
        FROM fn_finance_post_tran (p_branch_code,
                                   p_center_code,
                                   p_app_user_id,
                                   p_transaction_type,
                                   p_tran_date,
                                   p_tran_narration,
                                   p_tran_source);

      IF w_tran_gl_code = p_transaction_ledger
      THEN
         BEGIN
            SELECT COALESCE (max (batch_number) + 1, 1)
             INTO w_day_serial_no
             FROM finance_cash_transaction
            WHERE     branch_code = p_branch_code
                  AND app_user_id = p_app_user_id
                  AND transaction_date = p_tran_date;

            INSERT INTO finance_cash_transaction (branch_code,
                                                  center_code,
                                                  transaction_date,
                                                  batch_number,
                                                  day_serial_no,
                                                  receive_payment,
                                                  transaction_amount,
                                                  transaction_narration,
                                                  auth_by,
                                                  auth_on,
                                                  cancel_by,
                                                  cancel_on,
                                                  app_user_id,
                                                  app_data_time)
                 VALUES (p_branch_code,
                         p_center_code,
                         p_tran_date,
                         w_batch_number,
                         w_day_serial_no,
                         p_receive_payment,
                         w_tran_amount,
                         p_tran_narration,
                         p_app_user_id,
                         current_timestamp,
                         NULL,
                         NULL,
                         p_app_user_id,
                         current_timestamp);
         END;
      END IF;

      o_batch_number := w_batch_number;
      o_status := w_status;
      o_errm := w_errm;
   END IF;
END;
$$;


ALTER FUNCTION public.fn_finance_post_cash_tran(p_branch_code integer, p_center_code character, p_app_user_id character, p_transaction_type character, p_transaction_ledger character, p_tran_date date, p_tran_narration character, p_receive_payment character, p_tran_source character, OUT o_status character, OUT o_errm character, OUT o_batch_number character) OWNER TO delarship;

--
-- Name: fn_finance_post_tran(integer, character, character, character, date, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_post_tran(p_branch_code integer, p_center_code character, p_app_user_id character, p_transaction_type character, p_tran_date date, p_tran_narration character, p_tran_source character, OUT o_status character, OUT o_errm character, OUT o_batch_number character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_error_message           VARCHAR;
   w_batch_number            INTEGER;
   w_check                   BOOLEAN;
   w_account_number          VARCHAR := '0';
   w_transaction_date        DATE;
   w_last_balance_update     DATE;
   w_last_transaction_date   DATE;
   w_last_monbal_update      DATE;
   TRAN_DATA                 RECORD;
   w_tran_gl_code            VARCHAR := '0';
   w_cash_transaction        BOOLEAN;
   w_total_leg               INTEGER;
   w_total_debit_amount      NUMERIC (22, 2) := 0;
   w_total_credit_amount     NUMERIC (22, 2) := 0;
   w_available_balance       NUMERIC (22, 2) := 0;
   w_new_credit_balance      NUMERIC (22, 2) := 0;
   w_new_debit_balance       NUMERIC (22, 2) := 0;
   w_new_available_balance   NUMERIC (22, 2) := 0;
   w_daily_credit_limit      NUMERIC (22, 2) := 0;
   w_daily_debit_limit       NUMERIC (22, 2) := 0;
   w_batch_serial            INTEGER := 0;
   w_status                  VARCHAR;
   w_errm                    VARCHAR;
   w_credit_limit            NUMERIC (22, 2) := 0;
   w_system_posted_tran      BOOL := FALSE;
   w_counter                 INTEGER := 0;
   w_branch_code             INTEGER := 0;
   w_cash_gl_code            VARCHAR;
   w_cash_user_id            VARCHAR;
BEGIN
   BEGIN
      SELECT COUNT (*)
        INTO w_total_leg
        FROM finance_transaction_table S
       WHERE S.app_user_id = p_app_user_id;
   END;

   IF w_total_leg = 0
   THEN
      w_status := 'E';
      w_errm := 'Nothing to Post.';
      RAISE EXCEPTION USING MESSAGE = w_errm;
   END IF;

   BEGIN
      SELECT COALESCE (max (batch_number) + 1, 1)
        INTO w_batch_number
        FROM finance_transaction_master
       WHERE branch_code = p_branch_code AND transaction_date = p_tran_date;
   END;

   BEGIN
      SELECT daily_credit_limit,
             daily_debit_limit,
             branch_code,
             cash_gl_code
        INTO w_daily_credit_limit,
             w_daily_debit_limit,
             w_branch_code,
             w_cash_gl_code
        FROM appauth_user_settings
       WHERE app_user_id = p_app_user_id;
   END;

   FOR TRAN_DATA
      IN (  SELECT branch_code,
                   center_code,
                   transaction_date,
                   batch_serial,
                   account_number,
                   tran_gl_code,
                   contra_gl_code,
                   tran_debit_credit,
                   tran_type,
                   tran_amount,
                   (CASE
                       WHEN tran_debit_credit = 'D' THEN -tran_amount
                       ELSE tran_amount
                    END) balance_amount,
                   (CASE
                       WHEN tran_debit_credit = 'D' THEN tran_amount
                       ELSE 0
                    END) debit_amount,
                   (CASE
                       WHEN tran_debit_credit = 'C' THEN tran_amount
                       ELSE 0
                    END) credit_amount,
                   available_balance,
                   tran_document_prefix,
                   tran_document_number,
                   tran_person_phone,
                   tran_person_name,
                   tran_sign_verified,
                   system_posted_tran,
                   transaction_narration,
                   app_user_id,
                   app_data_time
              FROM finance_transaction_table S
             WHERE S.app_user_id = p_app_user_id
          ORDER BY batch_serial)
   LOOP
      w_account_number := TRAN_DATA.account_number;
      w_transaction_date := TRAN_DATA.transaction_date;
      w_tran_gl_code := TRAN_DATA.tran_gl_code;
      w_total_debit_amount := w_total_debit_amount + TRAN_DATA.debit_amount;
      w_total_credit_amount :=
         w_total_credit_amount + TRAN_DATA.credit_amount;
      w_batch_serial := w_batch_serial + 1;

      w_last_balance_update := NULL;
      w_last_transaction_date := NULL;

      IF w_account_number != '0'
      THEN
         BEGIN
            SELECT account_ledger_code
              INTO STRICT w_tran_gl_code
              FROM finance_accounts_balance
             WHERE account_number = w_account_number;
         EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
               RAISE EXCEPTION USING MESSAGE = 'Invalid Account Number!';
         END;
      END IF;

      IF     COALESCE (TRAN_DATA.account_number, '0') = '0'
         AND COALESCE (TRAN_DATA.tran_gl_code, '0') = '0'
      THEN
         RAISE EXCEPTION
         USING MESSAGE =
                  'Posting Error Both ledger code and phone number can not be Zero!';
      END IF;

      IF     TRAN_DATA.tran_debit_credit = 'D'
         AND TRAN_DATA.debit_amount > w_daily_debit_limit
      THEN
         RAISE EXCEPTION
         USING MESSAGE =
                     'Your Transaction Limit '
                  || w_daily_debit_limit
                  || ' Will be Exceeded for This Transaction!';
      END IF;

      IF     TRAN_DATA.tran_debit_credit = 'C'
         AND TRAN_DATA.credit_amount > w_daily_credit_limit
      THEN
         RAISE EXCEPTION
         USING MESSAGE =
                     'Your Transaction Limit '
                  || w_daily_credit_limit
                  || ' Will be Exceeded for This Transaction!';
      END IF;

      IF w_tran_gl_code != '0'
      THEN
         BEGIN
            SELECT gl_code
              INTO STRICT w_tran_gl_code
              FROM finance_general_ledger
             WHERE gl_code = w_tran_gl_code;
         EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
               RAISE EXCEPTION
               USING MESSAGE =
                           'Posting Error Invalid Ledger Code! '
                        || w_tran_gl_code;
         END;

         BEGIN
            SELECT gl_balance,
                   COALESCE (last_balance_update, w_transaction_date)
                      last_balance_update,
                   COALESCE (last_transaction_date, w_transaction_date)
                      last_transaction_date,
                   COALESCE (last_monbal_update, w_transaction_date)
                      last_monbal_update
              INTO STRICT w_available_balance,
                          w_last_balance_update,
                          w_last_transaction_date,
                          w_last_monbal_update
              FROM finance_ledger_balance
             WHERE     branch_code = TRAN_DATA.branch_code
                   AND gl_code = w_tran_gl_code;

            w_last_balance_update :=
               LEAST (w_last_balance_update, w_transaction_date);
            w_last_transaction_date :=
               GREATEST (w_last_transaction_date, w_transaction_date);
            w_last_monbal_update :=
               LEAST (w_last_monbal_update, w_transaction_date);


            UPDATE finance_ledger_balance
               SET gl_balance = gl_balance + TRAN_DATA.balance_amount,
                   total_debit_sum = total_debit_sum + TRAN_DATA.debit_amount,
                   total_credit_sum =
                      total_credit_sum + TRAN_DATA.credit_amount,
                   last_balance_update = w_last_balance_update,
                   last_transaction_date = w_last_transaction_date,
                   last_monbal_update = w_last_monbal_update,
                   is_balance_updated = FALSE,
                   is_monbal_updated = FALSE,
                   is_monbal_recpay_updated = FALSE
             WHERE     branch_code = TRAN_DATA.branch_code
                   AND gl_code = w_tran_gl_code;

            UPDATE finance_cash_and_bank_ledger
               SET last_balance_update = w_last_balance_update,
                   last_transaction_date = w_last_transaction_date,
                   is_balance_updated = FALSE
             WHERE     branch_code = TRAN_DATA.branch_code
                   AND gl_code = w_tran_gl_code;

            w_available_balance :=
               w_available_balance + TRAN_DATA.balance_amount;
         EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
               INSERT INTO finance_ledger_balance (branch_code,
                                                   gl_code,
                                                   last_transaction_date,
                                                   last_balance_update,
                                                   is_balance_updated,
                                                   is_monbal_updated,
                                                   is_monbal_recpay_updated,
                                                   total_debit_sum,
                                                   total_credit_sum,
                                                   gl_balance,
                                                   unauth_debit_sum,
                                                   unauth_credit_sum,
                                                   transfer_debit_sum,
                                                   transfer_credit_sum,
                                                   auth_by,
                                                   auth_on,
                                                   cancel_by,
                                                   cancel_on,
                                                   app_user_id,
                                                   app_data_time)
                    VALUES (TRAN_DATA.branch_code,
                            w_tran_gl_code,
                            w_transaction_date,
                            w_transaction_date,
                            FALSE,
                            FALSE,
                            FALSE,
                            TRAN_DATA.debit_amount,
                            TRAN_DATA.credit_amount,
                            TRAN_DATA.balance_amount,
                            0.00,
                            0.00,
                            0.00,
                            0.00,
                            NULL,
                            NULL,
                            NULL,
                            NULL,
                            p_app_user_id,
                            current_timestamp);

               w_available_balance := TRAN_DATA.balance_amount;
         END;
      END IF;

      IF TRAN_DATA.system_posted_tran
      THEN
         w_system_posted_tran := TRUE;
      END IF;

      IF w_account_number != '0'
      THEN
         BEGIN
            SELECT COALESCE (account_balance, 0),
                   COALESCE (credit_limit, 0),
                   COALESCE (last_balance_update, w_transaction_date)
                      last_balance_update,
                   COALESCE (last_transaction_date, w_transaction_date)
                      last_transaction_date,
                   COALESCE (last_monbal_update, w_transaction_date)
                      last_monbal_update
              INTO STRICT w_available_balance,
                          w_credit_limit,
                          w_last_balance_update,
                          w_last_transaction_date,
                          w_last_monbal_update
              FROM finance_accounts_balance
             WHERE account_number = w_account_number;
         EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
               RAISE EXCEPTION
               USING MESSAGE = 'Invalid Account Number !' || w_account_number;
         END;

         w_last_transaction_date :=
            GREATEST (w_last_transaction_date, w_transaction_date);
         w_last_balance_update :=
            least (w_last_balance_update, w_transaction_date);
         w_last_monbal_update :=
            LEAST (w_last_monbal_update, w_transaction_date);

         UPDATE finance_accounts_balance
            SET account_balance = account_balance + TRAN_DATA.balance_amount,
                total_debit_amount =
                   total_debit_amount + TRAN_DATA.debit_amount,
                total_credit_amount =
                   total_credit_amount + TRAN_DATA.credit_amount,
                last_balance_update = w_last_balance_update,
                last_transaction_date = w_last_transaction_date,
                last_monbal_update = w_last_monbal_update,
                is_balance_updated = FALSE
          WHERE account_number = w_account_number;

         BEGIN
            SELECT sum (tran_amount)
             INTO w_new_credit_balance
             FROM finance_transaction_table S
            WHERE     S.branch_code = p_branch_code
                  AND S.app_user_id = p_app_user_id
                  AND s.account_number = w_account_number
                  AND s.tran_debit_credit = 'C';
         END;

         BEGIN
            SELECT sum (tran_amount)
             INTO w_new_debit_balance
             FROM finance_transaction_table S
            WHERE     S.branch_code = p_branch_code
                  AND S.app_user_id = p_app_user_id
                  AND s.account_number = w_account_number
                  AND s.tran_debit_credit = 'D';
         END;

         w_new_available_balance :=
            w_new_credit_balance - w_new_debit_balance;

         -- w_errm:= w_available_balance||' . '||TRAN_DATA.tran_amount||TRAN_DATA.tran_debit_credit||' . '||w_credit_limit;
         -- w_status := 'E';
         -- RAISE EXCEPTION USING MESSAGE = w_errm;

         IF     TRAN_DATA.tran_debit_credit = 'D'
            AND (w_available_balance) < TRAN_DATA.tran_amount
         THEN
            IF    w_credit_limit < abs (w_available_balance)
               OR w_credit_limit = 0
            THEN
               w_status := 'E';
               w_errm :=
                     'Credit Limit ('
                  || w_available_balance
                  || ') Exceed For This Transaction!';
               RAISE EXCEPTION USING MESSAGE = w_errm;
            END IF;
         END IF;
      END IF;


      IF w_cash_gl_code = w_tran_gl_code
      THEN
         BEGIN
            SELECT teller_id
              INTO STRICT w_cash_user_id
              FROM finance_transaction_telbal
             WHERE teller_id = p_app_user_id;

            UPDATE finance_transaction_telbal
               SET total_credit_amount =
                      total_credit_amount + TRAN_DATA.credit_amount,
                   total_debit_amount =
                      total_debit_amount + TRAN_DATA.debit_amount,
                   cash_balance = cash_balance + TRAN_DATA.balance_amount
             WHERE teller_id = p_app_user_id;
         EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
               INSERT INTO finance_transaction_telbal (branch_code,
                                                       teller_id,
                                                       cash_od_allowed,
                                                       credit_limit_amount,
                                                       debit_limit_amount,
                                                       total_credit_amount,
                                                       total_debit_amount,
                                                       cash_balance,
                                                       app_user_id,
                                                       app_data_time)
                    VALUES (p_branch_code,
                            p_app_user_id,
                            FALSE,
                            999999999999999.00,
                            999999999999999.00,
                            TRAN_DATA.credit_amount,
                            TRAN_DATA.debit_amount,
                            TRAN_DATA.balance_amount,
                            p_app_user_id,
                            current_timestamp);
         END;
      END IF;

      INSERT INTO finance_transaction_details (branch_code,
                                               center_code,
                                               transaction_date,
                                               batch_number,
                                               batch_serial,
                                               account_number,
                                               tran_gl_code,
                                               contra_gl_code,
                                               tran_debit_credit,
                                               tran_type,
                                               tran_amount,
                                               cancel_amount,
                                               available_balance,
                                               tran_document_prefix,
                                               tran_document_number,
                                               tran_person_phone,
                                               tran_person_name,
                                               tran_sign_verified,
                                               system_posted_tran,
                                               transaction_narration,
                                               auth_by,
                                               auth_on,
                                               cancel_by,
                                               cancel_on,
                                               app_user_id,
                                               app_data_time)
           VALUES (p_branch_code,
                   TRAN_DATA.center_code,
                   p_tran_date,
                   w_batch_number,
                   w_batch_serial,
                   w_account_number,
                   w_tran_gl_code,
                   TRAN_DATA.contra_gl_code,
                   TRAN_DATA.tran_debit_credit,
                   TRAN_DATA.tran_type,
                   TRAN_DATA.tran_amount,
                   0,
                   w_available_balance,
                   TRAN_DATA.tran_document_prefix,
                   TRAN_DATA.tran_document_number,
                   TRAN_DATA.tran_person_phone,
                   TRAN_DATA.tran_person_name,
                   TRAN_DATA.tran_sign_verified,
                   TRAN_DATA.system_posted_tran,
                   TRAN_DATA.transaction_narration,
                   p_app_user_id,
                   current_timestamp,
                   NULL,
                   NULL,
                   p_app_user_id,
                   current_timestamp);
   /*
         IF w_account_number != '0'
         THEN
            SELECT w_status, w_errm
              INTO w_status, w_errm
              FROM fn_finance_acbal_hist (w_account_number,
                                          w_last_transaction_date);

            IF w_status = 'E'
            THEN
               RAISE EXCEPTION USING MESSAGE = w_errm;
            END IF;
         END IF;

         IF w_tran_gl_code != '0'
         THEN
            SELECT w_status, w_errm
              INTO w_status, w_errm
              FROM fn_finance_glbal_hist (w_tran_gl_code,
                                          p_branch_code,
                                          w_last_transaction_date);

            IF w_status = 'E'
            THEN
               RAISE EXCEPTION USING MESSAGE = w_errm;
            END IF;

            SELECT w_status, w_errm
              INTO w_status, w_errm
              FROM fn_finance_glmonbal_hist (w_tran_gl_code,
                                             p_branch_code,
                                             w_last_transaction_date);

            IF w_status = 'E'
            THEN
               RAISE EXCEPTION USING MESSAGE = w_errm;
            END IF;
         END IF;
         */
   END LOOP;

   IF w_total_debit_amount != w_total_credit_amount
   THEN
      w_status := 'E';
      w_errm :=
            'Total Debit ('
         || w_total_debit_amount
         || ') and Credit Amount ('
         || w_total_credit_amount
         || ') Must Be Same';
      RAISE EXCEPTION USING MESSAGE = w_errm;
   END IF;

   BEGIN
      INSERT INTO finance_transaction_master (branch_code,
                                              center_code,
                                              transaction_date,
                                              batch_number,
                                              tran_type,
                                              total_debit_amount,
                                              total_credit_amount,
                                              tran_source_table,
                                              tran_source_key,
                                              transaction_narration,
                                              system_posted_tran,
                                              auth_by,
                                              auth_on,
                                              cancel_by,
                                              cancel_on,
                                              app_user_id,
                                              app_data_time)
           VALUES (p_branch_code,
                   p_center_code,
                   p_tran_date,
                   w_batch_number,
                   p_transaction_type,
                   w_total_debit_amount,
                   w_total_credit_amount,
                   p_tran_source,
                   'NA',
                   p_tran_narration,
                   w_system_posted_tran,
                   p_app_user_id,
                   current_timestamp,
                   NULL,
                   NULL,
                   p_app_user_id,
                   current_timestamp);
   END;

   BEGIN
      DELETE FROM finance_transaction_table S
            WHERE S.app_user_id = p_app_user_id;
   END;

   o_batch_number := w_batch_number;
   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
         o_batch_number := 0;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
         o_batch_number := 0;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_finance_post_tran(p_branch_code integer, p_center_code character, p_app_user_id character, p_transaction_type character, p_tran_date date, p_tran_narration character, p_tran_source character, OUT o_status character, OUT o_errm character, OUT o_batch_number character) OWNER TO delarship;

--
-- Name: fn_finance_post_tran_cancel(integer, character, date, integer, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_post_tran_cancel(p_branch_code integer, p_app_user_id character, p_tran_date date, p_batch_number integer, p_cancel_reason character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_error_message           VARCHAR;
   w_status                  VARCHAR;
   w_batch_number            INTEGER;
   w_check                   BOOLEAN;
   w_account_number          VARCHAR := '0';
   w_transaction_date        DATE;
   w_last_balance_update     DATE;
   w_last_transaction_date   DATE;
   w_last_monbal_update      DATE;
   TRAN_DATA                 RECORD;
   w_tran_gl_code            VARCHAR := '0';
   w_cash_transaction        BOOLEAN;
   w_total_leg               INTEGER;
   w_total_debit_amount      NUMERIC (22, 2) := 0;
   w_total_credit_amount     NUMERIC (22, 2) := 0;
   w_available_balance       NUMERIC (22, 2) := 0;
   w_batch_serial            INTEGER := 0;
   w_counter                 INTEGER := 0;
BEGIN
   BEGIN
      SELECT count (1)
       INTO w_counter
       FROM finance_transaction_details S
      WHERE     S.branch_code = p_branch_code
            AND s.transaction_date = p_tran_date
            AND s.batch_number = p_batch_number;
   END;

   IF w_counter = 0
   THEN
      RAISE EXCEPTION USING MESSAGE = 'Invalid Batch Information';
   END IF;

   w_counter := 0;

   FOR TRAN_DATA
      IN (  SELECT branch_code,
                   transaction_date,
                   batch_serial,
                   account_number,
                   tran_gl_code,
                   contra_gl_code,
                   tran_debit_credit,
                   tran_type,
                   tran_amount,
                   (CASE
                       WHEN tran_debit_credit = 'C' THEN -tran_amount
                       ELSE tran_amount
                    END) balance_amount,
                   (CASE
                       WHEN tran_debit_credit = 'D' THEN -tran_amount
                       ELSE 0
                    END) debit_amount,
                   (CASE
                       WHEN tran_debit_credit = 'C' THEN -tran_amount
                       ELSE 0
                    END) credit_amount,
                   available_balance,
                   tran_document_prefix,
                   tran_document_number,
                   tran_person_phone,
                   tran_person_name,
                   tran_sign_verified,
                   system_posted_tran,
                   transaction_narration,
                   app_user_id,
                   app_data_time
              FROM finance_transaction_details S
             WHERE     S.branch_code = p_branch_code
                   AND s.transaction_date = p_tran_date
                   AND s.batch_number = p_batch_number
                   AND s.cancel_by IS NULL
          ORDER BY batch_serial)
   LOOP
      w_account_number := TRAN_DATA.account_number;
      w_transaction_date := TRAN_DATA.transaction_date;
      w_tran_gl_code := TRAN_DATA.tran_gl_code;
      w_total_debit_amount := w_total_debit_amount + TRAN_DATA.debit_amount;
      w_total_credit_amount :=
         w_total_credit_amount + TRAN_DATA.credit_amount;
      w_batch_serial := w_batch_serial + 1;
      w_counter := w_counter + 1;

      IF w_tran_gl_code != '0'
      THEN
         BEGIN
            SELECT gl_balance,
                   COALESCE (last_balance_update, w_transaction_date)
                      last_balance_update,
                   COALESCE (last_transaction_date, w_transaction_date)
                      last_transaction_date,
                   COALESCE (last_monbal_update, w_transaction_date)
                      last_monbal_update
              INTO STRICT w_available_balance,
                          w_last_balance_update,
                          w_last_transaction_date,
                          w_last_monbal_update
              FROM finance_ledger_balance
             WHERE     branch_code = TRAN_DATA.branch_code
                   AND gl_code = w_tran_gl_code;

            w_last_balance_update :=
               LEAST (w_last_balance_update, w_transaction_date);
            w_last_transaction_date :=
               GREATEST (w_last_transaction_date, w_transaction_date);
            w_last_monbal_update :=
               LEAST (w_last_monbal_update, w_transaction_date);

            UPDATE finance_ledger_balance
               SET gl_balance = gl_balance + TRAN_DATA.balance_amount,
                   total_debit_sum = total_debit_sum + TRAN_DATA.debit_amount,
                   total_credit_sum =
                      total_credit_sum + TRAN_DATA.credit_amount,
                   last_balance_update = w_last_balance_update,
                   last_transaction_date = w_last_transaction_date,
                   last_monbal_update = w_last_monbal_update,
                   is_balance_updated = FALSE,
                   is_monbal_updated = FALSE,
                   is_monbal_recpay_updated = FALSE
             WHERE     branch_code = TRAN_DATA.branch_code
                   AND gl_code = w_tran_gl_code;

            UPDATE finance_cash_and_bank_ledger
               SET last_balance_update = w_last_balance_update,
                   last_transaction_date = w_last_transaction_date,
                   is_balance_updated = FALSE
             WHERE     branch_code = TRAN_DATA.branch_code
                   AND gl_code = w_tran_gl_code;

            DELETE FROM finance_ledger_balance_hist
                  WHERE     gl_code = w_tran_gl_code
                        AND transaction_date = w_transaction_date
                        AND branch_code = TRAN_DATA.branch_code;

            DELETE FROM finance_led_rec_pay_bal_hist
                  WHERE     gl_code = TRAN_DATA.contra_gl_code
                        AND transaction_date = w_transaction_date
                        AND branch_code = TRAN_DATA.branch_code;
         END;
      END IF;

      IF w_account_number != '0'
      THEN
         BEGIN
            SELECT COALESCE (account_balance, 0),
                   COALESCE (last_balance_update, w_transaction_date)
                      last_balance_update,
                   COALESCE (last_transaction_date, w_transaction_date)
                      last_transaction_date,
                   COALESCE (last_monbal_update, w_transaction_date)
                      last_monbal_update
              INTO STRICT w_available_balance,
                          w_last_balance_update,
                          w_last_transaction_date,
                          w_last_monbal_update
              FROM finance_accounts_balance
             WHERE account_number = w_account_number;
         EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
               RAISE EXCEPTION
               USING MESSAGE = 'Invalid Account Number !' || w_account_number;
         END;

         w_last_transaction_date :=
            GREATEST (w_last_transaction_date, w_transaction_date);
         w_last_balance_update :=
            least (w_last_balance_update, w_transaction_date);
         w_last_monbal_update :=
            LEAST (w_last_monbal_update, w_transaction_date);

         UPDATE finance_accounts_balance
            SET account_balance = account_balance + TRAN_DATA.balance_amount,
                total_debit_amount =
                   total_debit_amount + TRAN_DATA.debit_amount,
                total_credit_amount =
                   total_credit_amount + TRAN_DATA.credit_amount,
                last_balance_update = w_last_balance_update,
                last_transaction_date = w_last_transaction_date,
                last_monbal_update = w_last_monbal_update,
                is_balance_updated = FALSE
          WHERE account_number = w_account_number;

         DELETE FROM finance_accounts_balance_hist
               WHERE     account_number = w_account_number
                     AND transaction_date = w_transaction_date;
      END IF;

      BEGIN
         UPDATE finance_transaction_details S
            SET cancel_amount = tran_amount,
                cancel_by = p_app_user_id,
                cancel_on = current_timestamp,
                cancel_remarks = p_cancel_reason
          WHERE     S.branch_code = p_branch_code
                AND s.transaction_date = p_tran_date
                AND s.batch_number = p_batch_number;

         UPDATE finance_transaction_master M
            SET cancel_by = p_app_user_id,
                cancel_on = current_timestamp,
                cancel_remarks = p_cancel_reason
          WHERE     M.branch_code = p_branch_code
                AND M.transaction_date = p_tran_date
                AND M.batch_number = p_batch_number;

         UPDATE finance_cash_transaction M
            SET cancel_by = p_app_user_id,
                cancel_on = current_timestamp,
                cancel_remarks = p_cancel_reason
          WHERE     M.branch_code = p_branch_code
                AND M.transaction_date = p_tran_date
                AND M.batch_number = p_batch_number;
      END;
   END LOOP;

   IF w_counter = 0
   THEN
      RAISE EXCEPTION USING MESSAGE = 'Batch Already Canceled!';
   END IF;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_error_message;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_finance_post_tran_cancel(p_branch_code integer, p_app_user_id character, p_tran_date date, p_batch_number integer, p_cancel_reason character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_finance_query_account_statement(character, date, date, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_query_account_statement(p_account_number character, p_from_date date, p_upto_date date, p_app_user_id character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                  VARCHAR;
   w_counter                 INTEGER;
   w_errm                    VARCHAR;
   w_last_transaction_date   DATE;
   w_account_number          VARCHAR;
   w_account_title           VARCHAR;
   w_account_balance         NUMERIC (22, 2) := 0;
BEGIN
   SELECT count (account_number)
     INTO w_counter
     FROM finance_accounts_balance
    WHERE account_number = p_account_number;

   IF w_counter = 0
   THEN
      RAISE EXCEPTION USING MESSAGE = 'Invalid Account Number!';
   END IF;

   SELECT account_number,
          account_title,
          account_balance,
          last_transaction_date
     INTO w_account_number,
          w_account_title,
          w_account_balance,
          w_last_transaction_date
     FROM finance_accounts_balance
    WHERE account_number = p_account_number;

   SELECT w_status, w_errm
     INTO w_status, w_errm
     FROM fn_finance_acbal_hist (p_account_number, w_last_transaction_date);

   DELETE FROM appauth_query_table
         WHERE app_user_id = p_app_user_id;

   INSERT INTO appauth_query_table (chr_column1,
                                    chr_column3,
                                    chr_column4,
                                    dec_column4,
                                    dat_column1,
                                    chr_column2,
                                    dec_column1,
                                    dec_column2,
                                    dec_column3,
                                    app_user_id)
      SELECT serial_number,
             w_account_number,
             w_account_title,
             w_account_balance,
             transaction_date,
             transaction_narration,
             credit_balance,
             debit_balance,
             SUM (credit_balance - debit_balance)
                OVER (ORDER BY serial_number) account_balance,
             p_app_user_id
        FROM (SELECT 1  serial_number,
                     p_from_date - 1 transaction_date,
                     'Opening Balance' transaction_narration,
                     (CASE
                         WHEN o_account_balance > 0 THEN o_account_balance
                         ELSE 0
                      END) credit_balance,
                     (CASE
                         WHEN o_account_balance < 0
                         THEN
                            abs (o_account_balance)
                         ELSE
                            0
                      END) debit_balance
                FROM fn_finance_get_ason_acbal (p_account_number,
                                                p_from_date - 1)
              UNION ALL
              SELECT   (ROW_NUMBER ()
                        OVER (
                           ORDER BY
                              transaction_date, batch_number, batch_serial))
                     + 1 serial_number,
                     transaction_date,
                     transaction_narration,
                     (CASE
                         WHEN tran_debit_credit = 'C' THEN tran_amount
                         ELSE 0
                      END) credit_balance,
                     (CASE
                         WHEN tran_debit_credit = 'D' THEN tran_amount
                         ELSE 0
                      END) debit_balance
                FROM finance_transaction_details
               WHERE     account_number = p_account_number
                     AND cancel_by IS NULL
                     AND transaction_date BETWEEN p_from_date AND p_upto_date)
             a;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_finance_query_account_statement(p_account_number character, p_from_date date, p_upto_date date, p_app_user_id character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_finance_query_daily_transaction(integer, date, date, character, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_query_daily_transaction(p_branch_code integer, p_from_date date, p_upto_date date, p_account_number character, p_tran_gl_code character, p_app_user_id character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_errm        VARCHAR;
   w_status      VARCHAR;
   w_sql_stat    TEXT := '';
   w_ason_date   DATE;
   w_from_date   DATE;
   w_upto_date   DATE;
BEGIN
   IF p_from_date = p_upto_date
   THEN
      w_ason_date := p_from_date;
   ELSE
      w_from_date := p_from_date;
      w_upto_date := p_upto_date;
   END IF;

   DELETE FROM appauth_query_table
         WHERE app_user_id = p_app_user_id;

   IF p_account_number <> '0'
   THEN
      w_sql_stat :=
            'INSERT INTO appauth_query_table (int_column1,
                                  dat_column1,
                                  int_column2,
                                  chr_column1,
                                  chr_column2,
                                  chr_column3,
                                  chr_column4,
                                  chr_column5,
                                  dec_column1,
                                  dec_column2,
                                  chr_column6,
                                  chr_column7,
                                  chr_column8,
                                  dat_column2,
                                  chr_column9,
                                  dat_column3,
                                  app_user_id)
      SELECT t.branch_code,
             t.transaction_date,
             t.batch_number,
             t.tran_gl_code,
             l.gl_name,
             t.account_number,
             a.account_title account_name,
             (case when t.tran_debit_credit=''C'' then ''Payment'' else ''Receipt'' end) tran_debit_credit,
             t.tran_amount,
             t.cancel_amount,
             t.tran_document_number,
             t.transaction_narration,
             t.cancel_by,
             t.cancel_on,
             t.app_user_id,
             t.app_data_time,
             '''
         || p_app_user_id
         || '''
        FROM finance_transaction_details t, finance_general_ledger l, finance_accounts_balance a
       WHERE t.tran_gl_code = l.gl_code 
       and a.account_number=t.account_number
       and a.account_number= '''
         || p_account_number
         || '''';
   ELSIF p_tran_gl_code <> '0'
   THEN
      w_sql_stat :=
            'INSERT INTO appauth_query_table (int_column1,
                                  dat_column1,
                                  int_column2,
                                  chr_column1,
                                  chr_column2,
                                  chr_column3,
                                  chr_column4,
                                  chr_column5,
                                  dec_column1,
                                  dec_column2,
                                  chr_column6,
                                  chr_column7,
                                  chr_column8,
                                  dat_column2,
                                  chr_column9,
                                  dat_column3,
                                  app_user_id)
      SELECT t.branch_code,
             t.transaction_date,
             t.batch_number,
             t.tran_gl_code,
             l.gl_name,
             t.account_number,
             '' '' account_name,
             (case when t.tran_debit_credit=''C'' then ''Payment'' else ''Receipt'' end) tran_debit_credit,
             t.tran_amount,
             t.cancel_amount,
             t.tran_document_number,
             t.transaction_narration,
             t.cancel_by,
             t.cancel_on,
             t.app_user_id,
             t.app_data_time,
             '''
         || p_app_user_id
         || '''
        FROM finance_transaction_details t, finance_general_ledger l
       WHERE t.tran_gl_code = l.gl_code ';
   END IF;



   IF p_account_number <> '0' OR p_tran_gl_code <> '0'
   THEN
      IF p_tran_gl_code <> '0'
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and t.tran_gl_code = '''
            || p_tran_gl_code
            || '''';
      END IF;

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and t.transaction_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and t.transaction_date = '''
            || w_ason_date
            || '''';
      END IF;

      IF p_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and t.branch_code = ' || p_branch_code;
      END IF;


      --RAISE EXCEPTION USING MESSAGE = w_sql_stat;

      EXECUTE w_sql_stat;
   END IF;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_finance_query_daily_transaction(p_branch_code integer, p_from_date date, p_upto_date date, p_account_number character, p_tran_gl_code character, p_app_user_id character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_finance_query_document_number(character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_query_document_number(p_memo_number character, p_app_user_id character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_errm     VARCHAR;
   w_status   VARCHAR;
BEGIN
   DELETE FROM sales_query_table
         WHERE app_user_id = p_app_user_id;

   INSERT INTO sales_query_table (chr_column1,
                                  chr_column2,
                                  dat_column1,
                                  dec_column1,
                                  chr_column3,
                                  chr_column4,
                                  app_user_id)
      SELECT center_code,
             client_id,
             tran_date,
             tran_amount,
             memo_num,
             tran_narration,
             p_app_user_id
        FROM (SELECT center_code,
                     client_id,
                     dpsrcv_date tran_date,
                     dpsrcv_amount tran_amount,
                     dpsrcv_memo_num memo_num,
                     dpsrcv_narration tran_narration
                FROM sales_dps_receive
               WHERE dpsrcv_memo_num = p_memo_number
              UNION ALL
              SELECT center_code,
                     client_id,
                     deposit_date tran_date,
                     deposit_amount tran_amount,
                     deposit_memo_num memo_num,
                     narration tran_narration
                FROM sales_deprcv_model
               WHERE deposit_memo_num = p_memo_number
              UNION ALL
              SELECT center_code,
                     client_id,
                     fee_collection_date tran_date,
                     fee_amount tran_amount,
                     fee_memo_number memo_num,
                     transaction_naration tran_narration
                FROM sales_fees_history
               WHERE fee_memo_number = p_memo_number
              UNION ALL
              SELECT center_code,
                     client_id,
                     instrcv_entry_date tran_date,
                     instrcv_instlmnt tran_amount,
                     instrcv_ref_num memo_num,
                     transaction_naration tran_narration
                FROM sales_emircv_model
               WHERE instrcv_ref_num = p_memo_number) t;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_finance_query_document_number(p_memo_number character, p_app_user_id character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_finance_query_ledger_statement(character, integer, date, date, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_finance_query_ledger_statement(p_gl_code character, p_branch_code integer, p_from_date date, p_upto_date date, p_app_user_id character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                 VARCHAR;
   w_counter                INTEGER;
   w_errm                   VARCHAR;
   w_gl_name                VARCHAR;
   w_current_business_day   DATE;
   w_gl_balance             NUMERIC (20, 2);
BEGIN
   SELECT count (gl_code)
     INTO w_counter
     FROM finance_general_ledger
    WHERE gl_code = p_gl_code;

   DELETE FROM appauth_query_table
         WHERE app_user_id = p_app_user_id;

   IF w_counter = 0
   THEN
      RAISE EXCEPTION USING MESSAGE = 'Invalid Ledger Code!';
   END IF;

   --    RAISE EXCEPTION USING MESSAGE = p_branch_code;

   SELECT gl_name
     INTO w_gl_name
     FROM finance_general_ledger
    WHERE gl_code = p_gl_code;

   IF p_branch_code = 0
   THEN
      INSERT INTO appauth_query_table (chr_column1,
                                       dat_column1,
                                       chr_column2,
                                       dec_column1,
                                       dec_column2,
                                       dec_column3,
                                       app_user_id)
           SELECT serial_number,
                  transaction_date,
                  transaction_narration,
                  credit_balance,
                  debit_balance,
                  SUM (credit_balance - debit_balance)
                     OVER (ORDER BY serial_number) ledger_balance,
                  p_app_user_id
             FROM (SELECT 1  serial_number,
                          p_from_date - 1 transaction_date,
                          'Opening Balance' transaction_narration,
                          (CASE
                              WHEN o_gl_balance > 0 THEN o_gl_balance
                              ELSE 0
                           END) credit_balance,
                          (CASE
                              WHEN o_gl_balance < 0 THEN abs (o_gl_balance)
                              ELSE 0
                           END) debit_balance
                     FROM fn_finance_get_ason_glbal (p_branch_code,
                                                     p_gl_code,
                                                     p_from_date - 1)
                   UNION ALL
                   SELECT   (ROW_NUMBER ()
                             OVER (
                                ORDER BY
                                   transaction_date, batch_number, batch_serial))
                          + 1 serial_number,
                          transaction_date,
                          transaction_narration,
                          (CASE
                              WHEN tran_debit_credit = 'C' THEN tran_amount
                              ELSE 0
                           END) credit_balance,
                          (CASE
                              WHEN tran_debit_credit = 'D' THEN tran_amount
                              ELSE 0
                           END) debit_balance
                     FROM finance_transaction_details
                    WHERE     tran_gl_code = p_gl_code
                          AND transaction_date BETWEEN p_from_date
                                                   AND p_upto_date) a
         ORDER BY serial_number;

      SELECT sum (gl_balance)
        INTO w_gl_balance
        FROM finance_ledger_balance
       WHERE gl_code = p_gl_code;

      UPDATE appauth_query_table
         SET chr_column3 = w_gl_name, dec_column4 = w_gl_balance
       WHERE app_user_id = p_app_user_id;
   ELSIF p_branch_code > 0
   THEN
      INSERT INTO appauth_query_table (chr_column1,
                                       dat_column1,
                                       chr_column2,
                                       dec_column1,
                                       dec_column2,
                                       dec_column3,
                                       app_user_id)
           SELECT serial_number,
                  transaction_date,
                  transaction_narration,
                  credit_balance,
                  debit_balance,
                  SUM (credit_balance - debit_balance)
                     OVER (ORDER BY serial_number) ledger_balance,
                  p_app_user_id
             FROM (SELECT 1  serial_number,
                          p_from_date - 1 transaction_date,
                          'Opening Balance' transaction_narration,
                          (CASE
                              WHEN o_gl_balance > 0 THEN o_gl_balance
                              ELSE 0
                           END) credit_balance,
                          (CASE
                              WHEN o_gl_balance < 0 THEN abs (o_gl_balance)
                              ELSE 0
                           END) debit_balance
                     FROM fn_finance_get_ason_glbal (p_branch_code,
                                                     p_gl_code,
                                                     p_from_date - 1)
                   UNION ALL
                   SELECT   (ROW_NUMBER ()
                             OVER (
                                ORDER BY
                                   transaction_date, batch_number, batch_serial))
                          + 1 serial_number,
                          transaction_date,
                          transaction_narration,
                          (CASE
                              WHEN tran_debit_credit = 'C' THEN tran_amount
                              ELSE 0
                           END) credit_balance,
                          (CASE
                              WHEN tran_debit_credit = 'D' THEN tran_amount
                              ELSE 0
                           END) debit_balance
                     FROM finance_transaction_details
                    WHERE     tran_gl_code = p_gl_code
                          AND branch_code = p_branch_code
                          AND cancel_by IS NULL
                          AND transaction_date BETWEEN p_from_date
                                                   AND p_upto_date) a
         ORDER BY serial_number;

      SELECT sum (gl_balance)
        INTO w_gl_balance
        FROM finance_ledger_balance
       WHERE branch_code = p_branch_code AND gl_code = p_gl_code;

      UPDATE appauth_query_table
         SET chr_column3 = w_gl_name, dec_column4 = w_gl_balance
       WHERE app_user_id = p_app_user_id;
   END IF;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_finance_query_ledger_statement(p_gl_code character, p_branch_code integer, p_from_date date, p_upto_date date, p_app_user_id character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_get_inventory_number(integer, integer, character, character, integer); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_get_inventory_number(p_inv_code integer, p_branch_code integer, p_inv_prefix character, p_inv_naration character, p_length integer DEFAULT 1) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_message              VARCHAR;
   w_last_used_number     INTEGER;
   w_return               VARCHAR;
   w_inv_prefix           VARCHAR;
   w_number_with_prefix   VARCHAR;
   w_inv_length           INTEGER;
BEGIN
   BEGIN
      SELECT last_used_number, inv_prefix, inv_length
        INTO w_last_used_number, w_inv_prefix, w_inv_length
        FROM appauth_inventory_number s
       WHERE s.inv_code = p_inv_code AND s.branch_code = p_branch_code;

      IF NOT FOUND
      THEN
         INSERT INTO appauth_inventory_number (inv_code,
                                               branch_code,
                                               app_user_id,
                                               inv_prefix,
                                               last_used_number,
                                               inv_naration,
                                               inv_length)
              VALUES (p_inv_code,
                      p_branch_code,
                      NULL,
                      P_inv_prefix,
                      1,
                      p_inv_naration,
                      p_length);

         w_last_used_number := 1;
         w_inv_prefix := P_inv_prefix;
         w_inv_length := p_length;
      END IF;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         INSERT INTO appauth_inventory_number (inv_code,
                                               branch_code,
                                               app_user_id,
                                               inv_prefix,
                                               last_used_number,
                                               inv_naration,
                                               inv_length)
              VALUES (p_inv_code,
                      p_branch_code,
                      NULL,
                      P_inv_prefix,
                      0,
                      p_inv_naration,
                      p_length);

         w_last_used_number := 1;
         w_inv_prefix := P_inv_prefix;
         w_inv_length := p_length;
   END;

   -- limit 100 for update;

   UPDATE appauth_inventory_number s
      SET last_used_number = last_used_number + 1
    WHERE s.inv_code = p_inv_code AND s.branch_code = p_branch_code;

   IF w_inv_length > 1
   THEN
      w_number_with_prefix :=
            w_inv_prefix
         || lpad (cast (w_last_used_number AS VARCHAR), w_inv_length, '0');
      w_return := w_number_with_prefix;
   ELSE
      w_return := w_inv_prefix || w_last_used_number;
   END IF;

   RETURN w_return;
END;
$$;


ALTER FUNCTION public.fn_get_inventory_number(p_inv_code integer, p_branch_code integer, p_inv_prefix character, p_inv_naration character, p_length integer) OWNER TO delarship;

--
-- Name: fn_get_next_installment_date(character, date, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_get_next_installment_date(p_inst_freq character, p_inst_from_date date, p_ason_date date) RETURNS date
    LANGUAGE plpgsql
    AS $$
DECLARE
   W_MESSAGE          CHARACTER (20);
   w_next_inst_date   DATE;
   O_ERRM             CHARACTER (100);
   W_STATUS           CHARACTER (20);
   W_NOI              INTEGER;
   W_NOD              INTEGER;
BEGIN
   IF p_inst_freq = 'W'
   THEN
      W_NOD := FLOOR ((p_ason_date - p_inst_from_date) / 7) * 7 + 7;
      w_next_inst_date := p_inst_from_date + W_NOD;
      W_NOI := W_NOD / 7;
   ELSIF p_inst_freq = 'M'
   THEN
      W_NOI := DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) + 1;
      w_next_inst_date :=
         (p_inst_from_date + (W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'Q'
   THEN
      W_NOI :=
           FLOOR (
              DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 3)
         + 1;
      w_next_inst_date :=
         (p_inst_from_date + (3 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'H'
   THEN
      W_NOI :=
           FLOOR (
              DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 6)
         + 1;
      w_next_inst_date :=
         (p_inst_from_date + (6 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'Y'
   THEN
      W_NOI :=
           FLOOR (
              DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 12)
         + 1;
      w_next_inst_date :=
         (p_inst_from_date + (12 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'D'
   THEN
      w_next_inst_date := p_ason_date + 1;
      W_NOI := p_inst_from_date - p_ason_date;
   END IF;

   RETURN w_next_inst_date;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
$$;


ALTER FUNCTION public.fn_get_next_installment_date(p_inst_freq character, p_inst_from_date date, p_ason_date date) OWNER TO delarship;

--
-- Name: fn_get_noof_installment_due(character, date, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_get_noof_installment_due(p_inst_freq character, p_inst_from_date date, p_ason_date date) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
   W_MESSAGE          CHARACTER (20);
   w_next_inst_date   DATE;
   O_ERRM             CHARACTER (100);
   W_STATUS           CHARACTER (20);
   W_NOI              INTEGER;
   W_NOD              INTEGER;
BEGIN
   IF p_inst_freq = 'W'
   THEN
      W_NOD := FLOOR ((p_ason_date - p_inst_from_date) / 7) * 7;
      w_next_inst_date := p_inst_from_date + W_NOD;
      W_NOI := FLOOR (W_NOD / 7) + 1;
   ELSIF p_inst_freq = 'M'
   THEN
      W_NOI := DATE_PART ('month', AGE (p_ason_date, p_inst_from_date));
      w_next_inst_date :=
         (p_inst_from_date + (W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'Q'
   THEN
      W_NOI :=
         FLOOR (DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 3);
      w_next_inst_date :=
         (p_inst_from_date + (3 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'H'
   THEN
      W_NOI :=
         FLOOR (DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 6);
      w_next_inst_date :=
         (p_inst_from_date + (6 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'Y'
   THEN
      W_NOI :=
         FLOOR (
            DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 12);
      w_next_inst_date :=
         (p_inst_from_date + (12 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'D'
   THEN
      w_next_inst_date := p_ason_date;
      W_NOI := (p_inst_from_date - p_ason_date) + 1;
   END IF;

   IF W_NOI < 0
   THEN
      W_NOI := 0;
   END IF;

   RETURN W_NOI;
EXCEPTION
   WHEN OTHERS
   THEN
      RETURN 0;
END;
$$;


ALTER FUNCTION public.fn_get_noof_installment_due(p_inst_freq character, p_inst_from_date date, p_ason_date date) OWNER TO delarship;

--
-- Name: fn_get_todays_due(character, date, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_get_todays_due(p_inst_freq character, p_inst_from_date date, p_ason_date date) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
   W_MESSAGE          CHARACTER (20);
   w_next_inst_date   DATE;
   O_ERRM             CHARACTER (100);
   W_STATUS           CHARACTER (20);
   W_NOI              INTEGER;
   W_NOD              INTEGER;
BEGIN
   IF p_inst_freq = 'W'
   THEN
      W_NOD := FLOOR ((p_ason_date - p_inst_from_date) / 7) * 7;
      w_next_inst_date := p_inst_from_date + W_NOD;
      W_NOI := W_NOI / 7;
   ELSIF p_inst_freq = 'M'
   THEN
      W_NOI := DATE_PART ('month', AGE (p_ason_date, p_inst_from_date));
      w_next_inst_date :=
         (p_inst_from_date + (W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'Q'
   THEN
      W_NOI :=
         FLOOR (DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 3);
      w_next_inst_date :=
         (p_inst_from_date + (3 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'H'
   THEN
      W_NOI :=
         FLOOR (DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 6);
      w_next_inst_date :=
         (p_inst_from_date + (6 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'Y'
   THEN
      W_NOI :=
         FLOOR (
            DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 12);
      w_next_inst_date :=
         (p_inst_from_date + (12 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'D'
   THEN
      W_NOD := p_ason_date - p_inst_from_date;
      w_next_inst_date := p_ason_date;
   END IF;

   IF w_next_inst_date = p_ason_date AND W_NOD >= 0
   THEN
      RETURN 1;
   ELSE
      RETURN 0;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      RETURN 0;
END;
$$;


ALTER FUNCTION public.fn_get_todays_due(p_inst_freq character, p_inst_from_date date, p_ason_date date) OWNER TO delarship;

--
-- Name: fn_get_todays_due_date(character, date, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_get_todays_due_date(p_inst_freq character, p_inst_from_date date, p_ason_date date) RETURNS date
    LANGUAGE plpgsql
    AS $$
DECLARE
   W_MESSAGE          CHARACTER (20);
   w_next_inst_date   DATE;
   O_ERRM             CHARACTER (100);
   W_STATUS           CHARACTER (20);
   W_NOI              INTEGER;
   W_NOD              INTEGER;
BEGIN
   IF p_inst_freq = 'W'
   THEN
      W_NOD := FLOOR ((p_ason_date - p_inst_from_date) / 7) * 7;
      w_next_inst_date := p_inst_from_date + W_NOD;
      W_NOI := W_NOI / 7;
   ELSIF p_inst_freq = 'M'
   THEN
      W_NOI := DATE_PART ('month', AGE (p_ason_date, p_inst_from_date));
      w_next_inst_date :=
         (p_inst_from_date + (W_NOI || ' months')::INTERVAL)::DATE;
   --w_return := W_NOI;
   ELSIF p_inst_freq = 'Q'
   THEN
      W_NOI :=
         FLOOR (DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 3);
      w_next_inst_date :=
         (p_inst_from_date + (3 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'H'
   THEN
      W_NOI :=
         FLOOR (DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 6);
      w_next_inst_date :=
         (p_inst_from_date + (6 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'Y'
   THEN
      W_NOI :=
         FLOOR (
            DATE_PART ('month', AGE (p_ason_date, p_inst_from_date)) / 12);
      w_next_inst_date :=
         (p_inst_from_date + (12 * W_NOI || ' months')::INTERVAL)::DATE;
   ELSIF p_inst_freq = 'D'
   THEN
      w_next_inst_date := p_ason_date;
   END IF;

   RETURN w_next_inst_date;
EXCEPTION
   WHEN OTHERS
   THEN
      RETURN 0;
END;
$$;


ALTER FUNCTION public.fn_get_todays_due_date(p_inst_freq character, p_inst_from_date date, p_ason_date date) OWNER TO delarship;

--
-- Name: fn_hrm_salary_processing(integer, character, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_hrm_salary_processing(p_branch_code integer, p_dept_id character, p_month_year character, p_app_user_id character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
 w_message VARCHAR;
 w_status VARCHAR;
 w_errm VARCHAR;
 w_sql_stat TEXT := '';
BEGIN
DELETE FROM HRM_SALARY_SHEET
     WHERE MONTH_YEAR = P_MONTH_YEAR;

DELETE FROM EMP_SALES_COMISSION
  WHERE  SALES_MONTH=P_MONTH_YEAR;
INSERT INTO  EMP_SALES_COMISSION (  EMPLOYEE_ID  ,
 SALES_MONTH  ,
 SALES_QUANTITY  ,
 TOTAL_PRICE  )
   SELECT EMPLOYEE_ID,
        SALES_MONTH,
        SUM (SALES_QUANTITY) SALES_QUANTITY,
        SUM (SALES_QUANTITY * TOTAL_PRICE) TOTAL_PRICE
   FROM (SELECT E.EMPLOYEE_ID,
                TO_CHAR (INVOICE_DATE, 'MON-YYYY') SALES_MONTH,
                COALESCE (QUANTITY) - COALESCE (D.RETURNED_QUANTITY)
                   SALES_QUANTITY,
                COALESCE (TOTAL_PRICE) TOTAL_PRICE
           FROM SALES_SALES_DETAILS D,
                SALES_SALES_MASTER M,
                APPAUTH_EMPLOYEES E
          WHERE TO_CHAR (INVOICE_DATE, 'MON-YYYY') = P_MONTH_YEAR
                AND M.EMPLOYEE_ID = E.EMPLOYEE_ID) E
GROUP BY EMPLOYEE_ID, SALES_MONTH;
w_sql_stat := 'INSERT INTO hrm_salary_sheet ( branch_code  ,
 dept_id  ,
 desig_name  ,EMPLOYEE_ID,
 employee_name ,
 total_atten ,
 salary_gross ,
 ot_hour ,
 ot_hour_rate ,
 ot_amount ,
 SALES_COMISSION,
 total_advance ,
 others_allowance ,
 others_deduction ,
 stamp_ded_amount ,
 total_salary ,
 netpay ,
 month_year,
 app_user_id)
SELECT  branch_code,
dept_id,
DESIG_NAME,EMPLOYEE_ID,
      EMPLOYEE_NAME,
      TOTAL_ATTEN,
      SALARY_GROSS,
      OT_HOUR,
      OT_HOUR_RATE,
      ROUND( ( OT_HOUR)*OT_HOUR_RATE ) OT_AMOUNT,
      SALES_COMISSION,
      TOTAL_ADVANCE,
      OTHERS_ALLOWANCE,
      OTHERS_DEDUCTION,
      STAMP_DED_AMOUNT,
       ROUND( COALESCE(SALARY_GROSS,0) + COALESCE (SALES_COMISSION,0)+( COALESCE(OT_HOUR,0))*COALESCE(OT_HOUR_RATE,0)  + COALESCE (OTHERS_ALLOWANCE,0)) TOTAL_SALARY,
       ROUND( COALESCE(SALARY_GROSS,0) + COALESCE (SALES_COMISSION,0)+( COALESCE(OT_HOUR,0))*COALESCE(OT_HOUR_RATE,0)  + COALESCE (OTHERS_ALLOWANCE,0))
      - ROUND((COALESCE(TOTAL_ADVANCE,0) + COALESCE(OTHERS_DEDUCTION,0) + COALESCE(STAMP_DED_AMOUNT,0)))
         NETPAY,''' || p_month_year || ''', ''' || p_app_user_id || '''
FROM (SELECT 100 branch_code,
department_id_id dept_id, D.DESIG_NAME,EMPLOYEE_ID,
              E.EMPLOYEE_NAME,
              TO_CHAR(CAST (
              date_trunc (''month'', CAST(''01''||''-''||''' || p_month_year || ''' AS DATE) )
            + INTERVAL ''1 months''
            - INTERVAL ''1 day'' AS DATE),''DD'') TOTAL_ATTEN,
             COALESCE( E.SALARY_GROSS,0) SALARY_GROSS,
              (SELECT   SUM (CASE WHEN total_ot <= duty_gap_time THEN 0 ELSE total_ot END)
       / 3600
  FROM (SELECT (duty_gap_time * 60) duty_gap_time,
               (  EXTRACT (EPOCH FROM (out_time - in_time))
                - s.work_start_time_sec)
                  total_ot
          FROM hrm_attendance_log a, hrm_shift_info s
         WHERE     E.employee_id = employee_id
               AND a.shift_id = current_shift
               AND TO_CHAR (attendance_date, ''MON-YYYY'') = ''' || p_month_year || ''') f) OT_HOUR,
              OT_HOUR_RATE,
              COALESCE (
                 (SELECT SUM(AMOUNT)
                    FROM HRM_ADVANCE_SALARY
                   WHERE     EMPLOYEE_ID_ID =EMPLOYEE_ID
                         AND TO_CHAR(MONTH_YEAR,''MON-YYYY'')= ''' || p_month_year || '''),
                 0)
TOTAL_ADVANCE,
              D.STAMP_DED_AMOUNT,
              COALESCE (
                 (SELECT SUM(AMOUNT)
                    FROM HRM_ALLOWANCE_PAYMENT
                   WHERE     EMPLOYEE_ID_ID = EMPLOYEE_ID
                         AND TO_CHAR(MONTH_YEAR,''MON-YYYY'') = ''' || p_month_year || '''),
                 0)
                 OTHERS_ALLOWANCE,
              COALESCE (
                 (SELECT SUM(AMOUNT)
                    FROM HRM_OTHERS_DEDUCTION
                   WHERE     EMPLOYEE_ID_ID = EMPLOYEE_ID
                         AND TO_CHAR(MONTH_YEAR,''MON-YYYY'') = ''' || p_month_year || '''),
                 0)
                 OTHERS_DEDUCTION,COALESCE (
                 (SELECT total_price*sales_comission/100
                    FROM emp_sales_comission
                   WHERE     EMPLOYEE_ID = EMPLOYEE_ID
                         AND sales_month = ''' || p_month_year || '''),
                 0)
                 SALES_COMISSION
         FROM  HRM_EMPLOYEE_DETAILS E, HRM_EMPLOYEE_DESIGNATION D
        WHERE E.DESIGNATION_ID = D.DESIG_ID) F where 1=1 ';
 IF p_branch_code IS NOT NULL
THEN
     w_sql_stat :=
     w_sql_stat || '  AND branch_code= ''' || p_branch_code || '''';
 END IF;
 /*IF p_dept_id IS NOT NULL
   THEN
     w_sql_stat :=
     w_sql_stat || '  AND dept_id= ''' || p_dept_id || '''';
   END IF; */
--- RAISE EXCEPTION USING MESSAGE = w_sql_stat;
 EXECUTE w_sql_stat;
 o_status := 'S';
 o_errm := '';
 EXCEPTION WHEN OTHERS THEN
       IF w_status = 'E'
         THEN
           o_status := w_status;
           o_errm := w_errm;
         ELSE
           o_status := 'E';
           o_errm := SQLERRM;
       END IF;
END;
$$;


ALTER FUNCTION public.fn_hrm_salary_processing(p_branch_code integer, p_dept_id character, p_month_year character, p_app_user_id character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_micfin_get_center_days(character, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_micfin_get_center_days(p_center_code character, p_ason_date date) RETURNS SETOF public.center_days_of_month
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status             VARCHAR;
   w_errm               VARCHAR;
   w_month_start_date   DATE;
   w_first_week_day     DATE;
   w_next_week_day      DATE;
   result_record        center_days_of_month;
   w_center_day         INTEGER;
   w_current_month      INTEGER;
   w_next_month         INTEGER;
BEGIN
   SELECT cast (center_day AS INTEGER)
     INTO w_center_day
     FROM delar_center
    WHERE center_code = p_center_code;

   SELECT CAST (date_trunc ('month', p_ason_date) AS DATE)
     INTO w_month_start_date;

   SELECT date_part ('month', p_ason_date)
     INTO w_current_month;

   SELECT   w_month_start_date::DATE
          + (w_center_day + 7 - extract (DOW FROM w_month_start_date::DATE))::INT %
            7
   INTO w_next_week_day;

   result_record.center_week := '1st Week';
   result_record.center_date := w_next_week_day;
   result_record.center_begin_date = w_next_week_day - 7;
   RETURN NEXT
      result_record;

   FOR ind IN 2 .. 7
   LOOP
      SELECT date_part ('month', w_next_week_day)
        INTO w_next_month;

      IF w_current_month = w_next_month
      THEN
         result_record.center_begin_date = w_next_week_day;
         w_next_week_day := w_next_week_day + 7;

         SELECT date_part ('month', w_next_week_day)
           INTO w_next_month;

         IF w_current_month <> w_next_month
         THEN
            SELECT CAST (
                        date_trunc ('month', w_next_week_day)
                      + INTERVAL '1 months'
                      - INTERVAL '1 day' AS DATE) month_end
              INTO w_next_week_day;
         END IF;

         IF date_part ('month', w_next_week_day) <> w_current_month
         THEN
            EXIT;
         END IF;

         IF ind = 2
         THEN
            result_record.center_week := '2nd Week';
         END IF;

         IF ind = 3
         THEN
            result_record.center_week := '3rd Week';
         END IF;

         IF ind = 4
         THEN
            result_record.center_week := '4th Week';
         END IF;

         IF ind = 5
         THEN
            result_record.center_week := '5th Week';
         END IF;

         IF ind = 6
         THEN
            result_record.center_week := '6th Week';
         END IF;

         result_record.center_date := w_next_week_day;
         RETURN NEXT
            result_record;
      END IF;
   END LOOP;

   RETURN;
EXCEPTION
   WHEN OTHERS
   THEN
      w_errm := SQLERRM;

      INSERT INTO error_details
           VALUES (w_errm);
END;
$$;


ALTER FUNCTION public.fn_micfin_get_center_days(p_center_code character, p_ason_date date) OWNER TO delarship;

--
-- Name: fn_micfin_get_emi_detail_amount(character, date, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_micfin_get_emi_detail_amount(p_center_code character, p_ason_date date, p_client_id character, OUT o_total_emi_amount numeric, OUT o_total_emi_due numeric, OUT o_total_emi_recover numeric, OUT o_total_installment_amount numeric, OUT o_asonday_total_recover numeric, OUT o_asonday_due_recover numeric, OUT o_asonday_recover numeric, OUT o_asonday_advance_recover numeric, OUT o_asonday_profit_recover numeric) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   W_MESSAGE                    CHARACTER (20);
   W_RETURN                     NUMERIC (22, 2) := 0;
   w_emi_inst_amount            NUMERIC (22, 2) := 0;
   w_installment_due_amount     NUMERIC (22, 2) := 0;
   w_total_emi_due              NUMERIC (22, 2) := 0;
   w_total_emi_amount           NUMERIC (22, 2) := 0;
   w_total_emi_recover          NUMERIC (22, 2) := 0;
   w_total_emi_profit_payment   NUMERIC (22, 2) := 0;

   w_asonday_total_recover      NUMERIC (22, 2) := 0;
   w_asonday_due_recover        NUMERIC (22, 2) := 0;
   w_asonday_recover            NUMERIC (22, 2) := 0;
   w_asonday_advance_recover    NUMERIC (22, 2) := 0;
   O_STATUS                     CHARACTER (20);
   O_ERRM                       CHARACTER (100);
   W_STATUS                     CHARACTER (20);
BEGIN
   BEGIN
      SELECT sum (emi_inst_amount) emi_inst_amount,
             sum (
                (  (total_installment_due - total_installment_paid)
                 * emi_inst_amount)) installment_due_amount,
             sum (total_emi_due) total_emi_due,
             sum (total_emi_amount) total_emi_amount,
             sum (installment_tot_repay_amt) total_emi_recover
        INTO w_emi_inst_amount,
             w_installment_due_amount,
             w_total_emi_due,
             w_total_emi_amount,
             w_total_emi_recover
        FROM (SELECT emi_inst_amount,
                     total_emi_due,
                     total_emi_amount,
                     installment_tot_repay_amt,
                     total_installment_due,
                     total_installment_paid
                FROM (SELECT   fn_get_todays_due (emi_inst_frequency,
                                                  emi_inst_repay_from_date,
                                                  p_ason_date)
                             * emi_inst_amount emi_inst_amount,
                             total_emi_due,
                             total_emi_amount,
                             installment_tot_repay_amt,
                             fn_get_noof_installment_due (
                                emi_inst_frequency,
                                emi_inst_repay_from_date,
                                p_ason_date) total_installment_due,
                             CAST (
                                FLOOR (
                                     installment_tot_repay_amt
                                   / emi_inst_amount) AS INTEGER) total_installment_paid
                        FROM sales_emi_setup e
                       WHERE     e.center_code = p_center_code
                             AND e.total_emi_due > 0
                             AND e.emi_reference_date <= p_ason_date
                             AND (   e.emi_closer_date IS NULL
                                  OR emi_closer_date >= p_ason_date)) e) t;

      W_RETURN := COALESCE (w_installment_due_amount, 0.00);
   END;

   WITH
      emi_receive_amount
      AS
         (SELECT emi_inst_amount,
                 emi_rate,
                 inst_receive_amount,
                 total_due_recover,
                 principal_due_recover,
                 profit_due_recover,
                 emi_total_payment,
                 emi_principal_payment,
                 emi_profit_payment,
                 total_emi_outstanding,
                 emi_principal_outstanding,
                 emi_profit_outstanding,
                 emi_total_overdue,
                 emi_principal_overdue,
                 emi_profit_overdue,
                 total_advance_recover,
                 principal_advance_recover,
                 profit_advance_recover,
                 (CASE
                     WHEN (  inst_receive_amount
                           - total_advance_recover
                           - total_due_recover) >
                          0
                     THEN
                        (  inst_receive_amount
                         - total_advance_recover
                         - total_due_recover)
                     ELSE
                        0
                  END) ason_day_recover
            FROM sales_emi_history
           WHERE     center_code = p_center_code
                 AND inst_receive_date = p_ason_date),
      emi_recovery_summary
      AS
         (SELECT emi_inst_amount,
                 emi_rate,
                 inst_receive_amount,
                 total_due_recover,
                 total_advance_recover,
                 ason_day_recover,
                 emi_total_payment,
                 emi_principal_payment,
                 emi_profit_payment,
                 total_emi_outstanding,
                 emi_principal_outstanding,
                 emi_profit_outstanding,
                 emi_total_overdue,
                 emi_principal_overdue,
                 emi_profit_overdue,
                 principal_advance_recover,
                 profit_advance_recover
            FROM emi_receive_amount)
   SELECT sum (inst_receive_amount) total_recover_amount,
          sum (total_due_recover) total_due_recover,
          sum (ason_day_recover) total_ason_day_recover,
          sum (total_advance_recover) total_advance_recover,
          sum (emi_profit_payment) total_emi_profit_payment
     INTO w_asonday_total_recover,
          w_asonday_due_recover,
          w_asonday_recover,
          w_asonday_advance_recover,
          w_total_emi_profit_payment
     FROM emi_recovery_summary;

   o_total_emi_amount := COALESCE (w_total_emi_amount, 0.00);
   o_total_emi_due := COALESCE (w_total_emi_due, 0.00);
   o_total_installment_amount := COALESCE (w_emi_inst_amount, 0.00);
   o_total_emi_recover := COALESCE (w_total_emi_recover, 0.00);
   o_asonday_total_recover := COALESCE (w_asonday_total_recover, 0.00);
   o_asonday_due_recover := COALESCE (w_asonday_due_recover, 0.00);
   o_asonday_recover := COALESCE (w_asonday_recover, 0.00);
   o_asonday_advance_recover := COALESCE (w_asonday_advance_recover, 0.00);
   o_asonday_profit_recover := COALESCE (w_total_emi_profit_payment, 0.00);
END;
$$;


ALTER FUNCTION public.fn_micfin_get_emi_detail_amount(p_center_code character, p_ason_date date, p_client_id character, OUT o_total_emi_amount numeric, OUT o_total_emi_due numeric, OUT o_total_emi_recover numeric, OUT o_total_installment_amount numeric, OUT o_asonday_total_recover numeric, OUT o_asonday_due_recover numeric, OUT o_asonday_recover numeric, OUT o_asonday_advance_recover numeric, OUT o_asonday_profit_recover numeric) OWNER TO delarship;

--
-- Name: fn_run_micfin_collection_sheet(integer, character, date, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_run_micfin_collection_sheet(p_branch_code integer, p_center_code character, p_ason_date date, p_is_empty character, p_app_user_id character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_errm                          VARCHAR;
   w_status                        VARCHAR;
   w_branch_name                   VARCHAR;
   w_center_name                   VARCHAR;
   w_center_day                    VARCHAR;
   w_center_region_id              VARCHAR;
   w_center_admin_code             VARCHAR;
   w_center_admin_name             VARCHAR;
   w_center_admin_phone            VARCHAR;
   w_center_employee_id            VARCHAR;
   w_center_start_time             VARCHAR;
   w_center_opening_date           DATE;
   w_report_month                  VARCHAR;
   w_field_officer_name            VARCHAR;
   rec_client_info                 RECORD;
   rec_center_date                 RECORD;
   w_month_start_date              DATE;
   w_month_end_date                DATE;
   w_monthly_sb_withdraw_date      VARCHAR;
   w_center_day_serial             INTEGER := 0;
   w_monthly_sb_opening_balance    NUMERIC (22, 2);
   w_sb_installment_amount         NUMERIC (22, 2);
   w_monthly_sb_withdraw           NUMERIC (22, 2);
   w_monthly_sb_closing_balance    NUMERIC (22, 2);
   w_monthly_emi_opening_balance   NUMERIC (22, 2);
   w_emi_installment_amount        NUMERIC (22, 2);
   w_monthly_emi_withdraw_date     DATE;
   w_monthly_emi_withdraw          NUMERIC (22, 2);
   w_monthly_emi_closing_balance   NUMERIC (22, 2);
   w_monthly_emi_payment           NUMERIC (22, 2);
   w_account_number                VARCHAR;
   w_sb_first_week_collect         NUMERIC (22, 2);
   w_sb_second_week_collect        NUMERIC (22, 2);
   w_sb_third_week_collect         NUMERIC (22, 2);
   w_sb_forth_week_collect         NUMERIC (22, 2);
   w_sb_fifth_week_collect         NUMERIC (22, 2);
   w_emi_first_week_collect        NUMERIC (22, 2);
   w_emi_second_week_collect       NUMERIC (22, 2);
   w_emi_third_week_collect        NUMERIC (22, 2);
   w_emi_forth_week_collect        NUMERIC (22, 2);
   w_emi_fifth_week_collect        NUMERIC (22, 2);
   w_emi_total_week_collect        NUMERIC (22, 2);
   w_monthly_emi_disburse          NUMERIC (22, 2);
   w_sb_total_week_collect         NUMERIC (22, 2);
   w_total_emi_disburse_amount     NUMERIC (22, 2);

   w_emi_sales_date                VARCHAR;
   w_emi_sales_amount              VARCHAR;
   w_emi_no_installment            VARCHAR;
   w_emi_inst_freq                 VARCHAR;
   w_emi_inst_amount               VARCHAR;
   w_emi_adv_receive               VARCHAR;
   w_total_emi_amount              VARCHAR;


   w_this_emi_sales_date           VARCHAR;
   w_this_emi_sales_amount         VARCHAR;
   w_this_emi_no_installment       VARCHAR;
   w_this_emi_inst_freq            VARCHAR;
   w_this_emi_inst_amount          VARCHAR;
   w_this_emi_adv_receive          VARCHAR;
   w_this_total_emi_amount         VARCHAR;
   w_sb_account_type               VARCHAR;
   w_emi_account_type              VARCHAR;
BEGIN
   SELECT CAST (date_trunc ('month', p_ason_date) AS DATE)
     INTO w_month_start_date;

   SELECT (  date_trunc ('month', p_ason_date::DATE)
           + INTERVAL '1 month'
           - INTERVAL '1 day')::DATE AS end_of_month
     INTO w_month_end_date;

   DELETE FROM micfin_inst_month_coll_sheet
         WHERE app_user_id = p_app_user_id;

   DELETE FROM micfin_sheet_user_param
         WHERE app_user_id = p_app_user_id;

   ---RAISE EXCEPTION USING MESSAGE = p_is_empty;

   SELECT tran_account_type
     INTO w_sb_account_type
     FROM finance_transaction_type
    WHERE transaction_screen = 'DEP_RECEIVE';

   SELECT tran_account_type
     INTO w_emi_account_type
     FROM finance_transaction_type
    WHERE transaction_screen = 'EMI_RECEIVE';

   FOR rec_client_info
      IN (  SELECT (ROW_NUMBER () OVER (ORDER BY cast (client_id AS INTEGER)))
                      serial_no,
                   client_id,
                   client_name,
                   client_father_name,
                   client_phone,
                   client_joining_date,
                   NULL
                      monthly_sb_opening_balance,
                   NULL
                      sb_first_week_collect,
                   NULL
                      sb_second_week_collect,
                   NULL
                      sb_third_week_collect,
                   NULL
                      sb_forth_week_collect,
                   NULL
                      sb_fifth_week_collect,
                   NULL
                      monthly_sb_withdraw_date,
                   NULL
                      monthly_sb_withdraw,
                   NULL
                      monthly_sb_closing_balance,
                   NULL
                      monthly_emi_opening_balance,
                   NULL
                      emi_first_week_collect,
                   NULL
                      emi_second_week_collect,
                   NULL
                      emi_third_week_collect,
                   NULL
                      emi_forth_week_collect,
                   NULL
                      emi_fifth_week_collect,
                   NULL
                      monthly_emi_withdraw_date,
                   NULL
                      monthly_emi_withdraw,
                   NULL
                      monthly_emi_closing_balance,
                   p_app_user_id
                      app_user_id,
                   current_timestamp
              FROM sales_clients
             WHERE     branch_code = p_branch_code
                   AND center_code = p_center_code
                   AND client_joining_date <= w_month_end_date
                   AND (   closing_date IS NULL
                        OR closing_date > w_month_start_date)
          ORDER BY cast (client_id AS INTEGER))
   LOOP
      IF p_is_empty = 'Y'
      THEN
         SELECT account_number, 0.00
           INTO w_account_number, w_sb_installment_amount
           FROM finance_accounts_balance
          WHERE     client_id = rec_client_info.client_id
                AND account_type = w_sb_account_type;

         IF w_sb_installment_amount <> 0
         THEN
            w_sb_first_week_collect := w_sb_installment_amount;
            w_sb_second_week_collect := w_sb_installment_amount;
            w_sb_third_week_collect := w_sb_installment_amount;
            w_sb_forth_week_collect := w_sb_installment_amount;
            w_sb_fifth_week_collect := w_sb_installment_amount;
         END IF;

         SELECT *
           INTO w_status, w_errm
           FROM fn_finance_acbal_hist (w_account_number, w_month_end_date);

         SELECT o_account_balance
         INTO w_monthly_sb_opening_balance
         FROM fn_finance_get_ason_acbal (w_account_number,
                                         w_month_start_date - 1);

         SELECT account_number
          INTO w_account_number
          FROM finance_accounts_balance
         WHERE     client_id = rec_client_info.client_id
               AND account_type = w_emi_account_type;

         SELECT sum (emi_inst_amount)
          INTO w_emi_installment_amount
          FROM sales_emi_setup
         WHERE     client_id = rec_client_info.client_id
               AND (   emi_closer_date IS NULL
                    OR emi_closer_date > w_month_start_date)
               AND emi_cancel_on IS NULL;

         IF w_emi_installment_amount <> 0
         THEN
            w_emi_first_week_collect := w_emi_installment_amount;
            w_emi_second_week_collect := w_emi_installment_amount;
            w_emi_third_week_collect := w_emi_installment_amount;
            w_emi_forth_week_collect := w_emi_installment_amount;
            w_emi_fifth_week_collect := w_emi_installment_amount;
         END IF;

         SELECT *
           INTO w_status, w_errm
           FROM fn_finance_acbal_hist (w_account_number, w_month_end_date);

         SELECT abs (o_account_balance)
         INTO w_monthly_emi_opening_balance
         FROM fn_finance_get_ason_acbal (w_account_number,
                                         w_month_start_date - 1);
      END IF;


      IF p_is_empty = 'N'
      THEN
         SELECT account_number, 0.00
           INTO w_account_number, w_sb_installment_amount
           FROM finance_accounts_balance
          WHERE     client_id = rec_client_info.client_id
                AND account_type = w_sb_account_type;

         SELECT *
           INTO w_status, w_errm
           FROM fn_finance_acbal_hist (w_account_number, w_month_end_date);

         SELECT o_account_balance
         INTO w_monthly_sb_opening_balance
         FROM fn_finance_get_ason_acbal (w_account_number,
                                         w_month_start_date - 1);

         --RAISE EXCEPTION USING MESSAGE = w_account_number;

         SELECT sum (payment_amount),
                STRING_AGG (TRIM (TO_CHAR (payment_date, 'DD')), ' , ') monthly_sb_withdraw_date
           INTO w_monthly_sb_withdraw, w_monthly_sb_withdraw_date
           FROM finance_deposit_payment
          WHERE     branch_code = p_branch_code
                AND center_code = p_center_code
                AND client_id = rec_client_info.client_id
                AND payment_date BETWEEN w_month_start_date
                                     AND w_month_end_date
                AND cancel_by IS NULL;


         FOR rec_center_date
            IN (SELECT center_week, center_begin_date, center_date
                  FROM fn_micfin_get_center_days (p_center_code, p_ason_date))
         LOOP
            w_center_day_serial := w_center_day_serial + 1;

            IF w_center_day_serial = 1
            THEN
               SELECT sum (total_credit_sum)
                INTO w_sb_first_week_collect
                FROM finance_accounts_balance_hist
               WHERE     account_number = w_account_number
                     AND branch_code = p_branch_code
                     AND transaction_date BETWEEN   rec_center_date.center_begin_date
                                                  + 1
                                              AND rec_center_date.center_date;
            ELSIF w_center_day_serial = 2
            THEN
               SELECT sum (total_credit_sum)
                INTO w_sb_second_week_collect
                FROM finance_accounts_balance_hist
               WHERE     account_number = w_account_number
                     AND branch_code = p_branch_code
                     AND transaction_date BETWEEN   rec_center_date.center_begin_date
                                                  + 1
                                              AND rec_center_date.center_date;
            ELSIF w_center_day_serial = 3
            THEN
               SELECT sum (total_credit_sum)
                INTO w_sb_third_week_collect
                FROM finance_accounts_balance_hist
               WHERE     account_number = w_account_number
                     AND branch_code = p_branch_code
                     AND transaction_date BETWEEN   rec_center_date.center_begin_date
                                                  + 1
                                              AND rec_center_date.center_date;
            ELSIF w_center_day_serial = 4
            THEN
               SELECT sum (total_credit_sum)
                INTO w_sb_forth_week_collect
                FROM finance_accounts_balance_hist
               WHERE     account_number = w_account_number
                     AND branch_code = p_branch_code
                     AND transaction_date BETWEEN   rec_center_date.center_begin_date
                                                  + 1
                                              AND rec_center_date.center_date;
            ELSIF w_center_day_serial = 5
            THEN
               SELECT sum (total_credit_sum)
                INTO w_sb_fifth_week_collect
                FROM finance_accounts_balance_hist
               WHERE     account_number = w_account_number
                     AND branch_code = p_branch_code
                     AND transaction_date BETWEEN   rec_center_date.center_begin_date
                                                  + 1
                                              AND rec_center_date.center_date;
            END IF;
         END LOOP;

         w_center_day_serial := 0;
         w_monthly_sb_closing_balance :=
              (  w_monthly_sb_opening_balance
               + COALESCE (w_sb_first_week_collect, 0.00)
               + COALESCE (w_sb_second_week_collect, 0.00)
               + COALESCE (w_sb_third_week_collect, 0.00)
               + COALESCE (w_sb_forth_week_collect, 0.00)
               + COALESCE (w_sb_fifth_week_collect, 0.00))
            - COALESCE (w_monthly_sb_withdraw, 0.00);
         w_sb_total_week_collect :=
            (  COALESCE (w_sb_first_week_collect, 0.00)
             + COALESCE (w_sb_second_week_collect, 0.00)
             + COALESCE (w_sb_third_week_collect, 0.00)
             + COALESCE (w_sb_forth_week_collect, 0.00)
             + COALESCE (w_sb_fifth_week_collect, 0.00));

         SELECT account_number
          INTO w_account_number
          FROM finance_accounts_balance
         WHERE     client_id = rec_client_info.client_id
               AND account_type = w_emi_account_type;

         SELECT *
           INTO w_status, w_errm
           FROM fn_finance_acbal_hist (w_account_number, w_month_end_date);

         SELECT abs (o_account_balance)
         INTO w_monthly_emi_opening_balance
         FROM fn_finance_get_ason_acbal (w_account_number,
                                         w_month_start_date - 1);

         SELECT sum (total_debit_sum), sum (total_credit_sum)
           INTO w_monthly_emi_disburse, w_monthly_emi_payment
           FROM finance_accounts_balance_hist
          WHERE     account_number = w_account_number
                AND branch_code = p_branch_code
                AND transaction_date BETWEEN w_month_start_date
                                         AND w_month_end_date;

         w_monthly_emi_withdraw := COALESCE (w_monthly_emi_withdraw, 0.00);
         w_monthly_emi_payment := COALESCE (w_monthly_emi_payment, 0.00);
         w_monthly_emi_disburse := COALESCE (w_monthly_emi_disburse, 0.00);

         w_monthly_emi_closing_balance :=
              (w_monthly_emi_opening_balance + w_monthly_emi_disburse)
            - w_monthly_emi_payment;

         FOR rec_center_date
            IN (SELECT center_week, center_begin_date, center_date
                  FROM fn_micfin_get_center_days (p_center_code, p_ason_date))
         LOOP
            w_center_day_serial := w_center_day_serial + 1;

            IF w_center_day_serial = 1
            THEN
               SELECT sum (total_credit_sum)
                INTO w_emi_first_week_collect
                FROM finance_accounts_balance_hist
               WHERE     account_number = w_account_number
                     AND branch_code = p_branch_code
                     AND transaction_date BETWEEN   rec_center_date.center_begin_date
                                                  + 1
                                              AND rec_center_date.center_date;
            ELSIF w_center_day_serial = 2
            THEN
               SELECT sum (total_credit_sum)
                INTO w_emi_second_week_collect
                FROM finance_accounts_balance_hist
               WHERE     account_number = w_account_number
                     AND branch_code = p_branch_code
                     AND transaction_date BETWEEN   rec_center_date.center_begin_date
                                                  + 1
                                              AND rec_center_date.center_date;
            ELSIF w_center_day_serial = 3
            THEN
               SELECT sum (total_credit_sum)
                INTO w_emi_third_week_collect
                FROM finance_accounts_balance_hist
               WHERE     account_number = w_account_number
                     AND branch_code = p_branch_code
                     AND transaction_date BETWEEN   rec_center_date.center_begin_date
                                                  + 1
                                              AND rec_center_date.center_date;
            ELSIF w_center_day_serial = 4
            THEN
               SELECT sum (total_credit_sum)
                INTO w_emi_forth_week_collect
                FROM finance_accounts_balance_hist
               WHERE     account_number = w_account_number
                     AND branch_code = p_branch_code
                     AND transaction_date BETWEEN   rec_center_date.center_begin_date
                                                  + 1
                                              AND rec_center_date.center_date;
            ELSIF w_center_day_serial = 5
            THEN
               SELECT sum (total_credit_sum)
                INTO w_emi_fifth_week_collect
                FROM finance_accounts_balance_hist
               WHERE     account_number = w_account_number
                     AND branch_code = p_branch_code
                     AND transaction_date BETWEEN   rec_center_date.center_begin_date
                                                  + 1
                                              AND rec_center_date.center_date;
            END IF;
         END LOOP;

         w_center_day_serial := 0;
      END IF;

      w_emi_total_week_collect :=
         (  COALESCE (w_emi_first_week_collect, 0.00)
          + COALESCE (w_emi_second_week_collect, 0.00)
          + COALESCE (w_emi_third_week_collect, 0.00)
          + COALESCE (w_emi_forth_week_collect, 0.00)
          + COALESCE (w_emi_fifth_week_collect, 0.00));


      BEGIN
         SELECT STRING_AGG (
                   TRIM (TO_CHAR (emi_reference_date, 'DD/MM/YYYY')),
                   ' + ')
                   emi_sales_date,
                STRING_AGG (
                   TRIM (
                      TO_CHAR (
                           COALESCE (emi_reference_amount, 0)
                         + COALESCE (emi_profit_amount, 0),
                         '999,999,999.99')),
                   ' + ')
                   emi_sales_amount,
                STRING_AGG (
                   TRIM (
                      TO_CHAR (COALESCE (number_of_installment, 0), '9999')),
                   ' + ')
                   emi_no_installment,
                STRING_AGG (TRIM (emi_inst_frequency), ' + ')
                   emi_inst_freq,
                STRING_AGG (
                   TRIM (TO_CHAR (COALESCE (emi_inst_amount, 0), '9999')),
                   ' + ')
                   emi_inst_amount,
                STRING_AGG (
                   TRIM (
                      TO_CHAR (COALESCE (emi_down_amount, 0),
                               '999,999,999.99')),
                   ' + ')
                   emi_adv_receive,
                STRING_AGG (
                   TRIM (
                      TO_CHAR (COALESCE (total_emi_amount, 0),
                               '999,999,999.99')),
                   ' + ')
                   total_emi_amount,
                sum (
                     COALESCE (emi_reference_amount, 0)
                   + COALESCE (emi_profit_amount, 0))
           INTO w_emi_sales_date,
                w_emi_sales_amount,
                w_emi_no_installment,
                w_emi_inst_freq,
                w_emi_inst_amount,
                w_emi_adv_receive,
                w_total_emi_amount,
                w_total_emi_disburse_amount
           FROM sales_emi_setup
          WHERE     client_id = rec_client_info.client_id
                AND emi_cancel_on IS NULL
                AND (   emi_closer_date > w_month_start_date
                     OR emi_closer_date IS NULL);
      END;

      BEGIN
         SELECT STRING_AGG (
                   TRIM (TO_CHAR (emi_reference_date, 'DD/MM/YYYY')),
                   ' + ') emi_sales_date,
                STRING_AGG (
                   TRIM (
                      TO_CHAR (
                           COALESCE (emi_reference_amount, 0)
                         + COALESCE (emi_profit_amount, 0),
                         '999,999,999.99')),
                   ' + ') emi_sales_amount,
                STRING_AGG (
                   TRIM (
                      TO_CHAR (COALESCE (number_of_installment, 0), '9999')),
                   ' + ') emi_no_installment,
                STRING_AGG (TRIM (emi_inst_frequency), ' + ') emi_inst_freq,
                STRING_AGG (
                   TRIM (TO_CHAR (COALESCE (emi_inst_amount, 0), '9999')),
                   ' + ') emi_inst_amount,
                STRING_AGG (
                   TRIM (
                      TO_CHAR (COALESCE (emi_down_amount, 0),
                               '999,999,999.99')),
                   ' + ') emi_adv_receive,
                STRING_AGG (
                   TRIM (
                      TO_CHAR (COALESCE (total_emi_amount, 0),
                               '999,999,999.99')),
                   ' + ') total_emi_amount
           INTO w_this_emi_sales_date,
                w_this_emi_sales_amount,
                w_this_emi_no_installment,
                w_this_emi_inst_freq,
                w_this_emi_inst_amount,
                w_this_emi_adv_receive,
                w_this_total_emi_amount
           FROM sales_emi_setup
          WHERE     client_id = rec_client_info.client_id
                AND emi_reference_date BETWEEN w_month_start_date
                                           AND w_month_end_date
                AND emi_cancel_on IS NULL;
      END;

      INSERT INTO micfin_inst_month_coll_sheet (serial_number,
                                                client_id,
                                                client_name,
                                                client_father_name,
                                                client_phone,
                                                client_joining_date,
                                                monthly_sb_opening_balance,
                                                sb_first_week_collect,
                                                sb_second_week_collect,
                                                sb_third_week_collect,
                                                sb_forth_week_collect,
                                                sb_fifth_week_collect,
                                                sb_total_week_collect,
                                                monthly_sb_withdraw_date,
                                                monthly_sb_withdraw,
                                                monthly_sb_closing_balance,
                                                monthly_emi_opening_balance,
                                                emi_sales_date,
                                                emi_sales_amount,
                                                total_emi_disburse_amount,
                                                emi_no_installment,
                                                emi_inst_freq,
                                                emi_inst_amount,
                                                this_month_sales_date,
                                                this_month_sales_amount,
                                                this_month_adv_amount,
                                                this_month_emi_due_after_adv,
                                                this_month_total_inst,
                                                this_month_inst_amount,
                                                this_month_inst_freq,
                                                emi_first_week_collect,
                                                emi_second_week_collect,
                                                emi_third_week_collect,
                                                emi_forth_week_collect,
                                                emi_fifth_week_collect,
                                                emi_total_week_collect,
                                                monthly_emi_disburse,
                                                monthly_emi_withdraw_date,
                                                monthly_emi_withdraw,
                                                monthly_emi_closing_balance,
                                                app_user_id,
                                                app_data_time)
           VALUES (rec_client_info.serial_no,
                   rec_client_info.client_id,
                   rec_client_info.client_name,
                   rec_client_info.client_father_name,
                   rec_client_info.client_phone,
                   rec_client_info.client_joining_date,
                   w_monthly_sb_opening_balance,
                   w_sb_first_week_collect,
                   w_sb_second_week_collect,
                   w_sb_third_week_collect,
                   w_sb_forth_week_collect,
                   w_sb_fifth_week_collect,
                   w_sb_total_week_collect,
                   w_monthly_sb_withdraw_date,
                   w_monthly_sb_withdraw,
                   w_monthly_sb_closing_balance,
                   w_monthly_emi_opening_balance,
                   w_emi_sales_date,
                   w_emi_sales_amount,
                   w_total_emi_disburse_amount,
                   w_emi_no_installment,
                   w_emi_inst_freq,
                   w_emi_inst_amount,
                   w_this_emi_sales_date,
                   w_this_emi_sales_amount,
                   w_this_emi_adv_receive,
                   w_this_total_emi_amount,
                   w_this_emi_no_installment,
                   w_this_emi_inst_amount,
                   w_this_emi_inst_freq,
                   w_emi_first_week_collect,
                   w_emi_second_week_collect,
                   w_emi_third_week_collect,
                   w_emi_forth_week_collect,
                   w_emi_fifth_week_collect,
                   w_emi_total_week_collect,
                   w_monthly_emi_disburse,
                   w_monthly_emi_withdraw_date,
                   w_monthly_emi_withdraw,
                   w_monthly_emi_closing_balance,
                   rec_client_info.app_user_id,
                   current_timestamp);
   END LOOP;

   SELECT branch_name
     INTO w_branch_name
     FROM appauth_branch
    WHERE branch_code = p_branch_code;

   SELECT branch_center_code || ' - ' || center_name,
          center_region_id,
          center_day,
          center_open_date,
          center_employee_id,
          center_admin_id,
          center_start_time
     INTO w_center_name,
          w_center_region_id,
          w_center_day,
          w_center_opening_date,
          w_center_employee_id,
          w_center_admin_code,
          w_center_start_time
     FROM delar_center
    WHERE center_code = p_center_code;

   SELECT admin_name, admin_mobile_num
     INTO w_center_admin_name, w_center_admin_phone
     FROM delar_center_admin
    WHERE admin_id = w_center_admin_code;

   IF w_center_day = '0'
   THEN
      w_center_day := 'Sunday';
   ELSIF w_center_day = '1'
   THEN
      w_center_day := 'Monday';
   ELSIF w_center_day = '2'
   THEN
      w_center_day := 'Tuesday';
   ELSIF w_center_day = '3'
   THEN
      w_center_day := 'Wednesday';
   ELSIF w_center_day = '4'
   THEN
      w_center_day := 'Thursday';
   ELSIF w_center_day = '5'
   THEN
      w_center_day := 'Friday';
   ELSIF w_center_day = '6'
   THEN
      w_center_day := 'Saturday';
   END IF;

   SELECT to_char (
             to_timestamp (date_part ('month', p_ason_date)::TEXT, 'MM'),
             'Month')
   INTO w_report_month;

   SELECT employee_name
     INTO w_field_officer_name
     FROM appauth_employees
    WHERE employee_id = w_center_employee_id;

   INSERT INTO micfin_sheet_user_param (branch_name,
                                        center_name,
                                        center_day,
                                        center_opening_date,
                                        report_month,
                                        field_officer_name,
                                        report_date,
                                        center_location,
                                        center_admin,
                                        center_admin_phone,
                                        center_start_time,
                                        app_user_id,
                                        app_data_time)
        VALUES (w_branch_name,
                w_center_name,
                w_center_day,
                w_center_opening_date,
                w_report_month,
                w_field_officer_name,
                p_ason_date,
                w_center_region_id,
                w_center_admin_name,
                w_center_admin_phone,
                w_center_start_time,
                p_app_user_id,
                current_timestamp);

   UPDATE micfin_sheet_user_param
      SET fifth_week_name = '', forth_week_name = '';

   FOR rec_center_date
      IN (SELECT center_week, center_begin_date, center_date
            FROM fn_micfin_get_center_days (p_center_code, p_ason_date))
   LOOP
      w_center_day_serial := w_center_day_serial + 1;

      IF w_center_day_serial = 1
      THEN
         UPDATE micfin_sheet_user_param
            SET first_week_name =
                      rec_center_date.center_week
                   || chr (10)
                   || rec_center_date.center_date,
                column_week5_value = ''
          WHERE app_user_id = p_app_user_id;
      ELSIF w_center_day_serial = 2
      THEN
         UPDATE micfin_sheet_user_param
            SET second_week_name =
                      rec_center_date.center_week
                   || chr (10)
                   || rec_center_date.center_date,
                column_week5_value = ''
          WHERE app_user_id = p_app_user_id;
      ELSIF w_center_day_serial = 3
      THEN
         UPDATE micfin_sheet_user_param
            SET third_week_name =
                      rec_center_date.center_week
                   || chr (10)
                   || rec_center_date.center_date,
                column_week5_value = ''
          WHERE app_user_id = p_app_user_id;
      ELSIF w_center_day_serial = 4
      THEN
         UPDATE micfin_sheet_user_param
            SET forth_week_name =
                      rec_center_date.center_week
                   || chr (10)
                   || rec_center_date.center_date,
                column_week5_value = ''
          WHERE app_user_id = p_app_user_id;
      ELSIF w_center_day_serial = 5
      THEN
         UPDATE micfin_sheet_user_param
            SET fifth_week_name =
                      rec_center_date.center_week
                   || chr (10)
                   || rec_center_date.center_date,
                column_week5_value = 'Y'
          WHERE app_user_id = p_app_user_id;
      END IF;
   END LOOP;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_run_micfin_collection_sheet(p_branch_code integer, p_center_code character, p_ason_date date, p_is_empty character, p_app_user_id character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_run_micfin_report(character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_run_micfin_report(p_app_user_id character, p_report_name character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                 VARCHAR;
   w_errm                   VARCHAR;
   w_sql_stat               TEXT := '';
   w_center_code            VARCHAR;
   w_from_date              DATE;
   w_upto_date              DATE;
   w_ason_date              DATE;
   w_current_business_day   DATE;
   w_ledger_code            VARCHAR;
   w_invoice_number         VARCHAR;
   w_user_id                VARCHAR;
   w_acc_type_code          VARCHAR;
   w_employee_id            VARCHAR;
   w_client_id              VARCHAR;
   w_supplier_id            VARCHAR;
   w_account_number         VARCHAR;
   w_account_title          VARCHAR;
   w_product_id             VARCHAR;
   w_branch_code            INTEGER;
   w_zero_balance           VARCHAR := 'N';
   w_transfer_tran          VARCHAR := 'N';
   w_closing_balance        NUMERIC (22, 2);
   w_opening_balance        NUMERIC (22, 2);
   w_cash_gl_code           VARCHAR;
   rec_delar_list           RECORD;
   rec_branch_list          RECORD;
   rec_product_list         RECORD;
   w_branch_name            VARCHAR;
   w_branch_address         VARCHAR;
   w_group_id               VARCHAR;
   w_app_user_id            VARCHAR;
BEGIN
   DELETE FROM appauth_report_table_tabular
         WHERE app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END
    INTO w_center_code
    FROM appauth_report_parameter
   WHERE     parameter_name = 'p_center_code'
         AND report_name = p_report_name
         AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != ''
             THEN
                cast (parameter_values AS INTEGER)
          END w_branch_code
     INTO w_branch_code
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_branch_code'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_from_date
     INTO w_from_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_from_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_upto_date
     INTO w_upto_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_upto_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_ason_date
     INTO w_ason_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_ason_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   IF w_from_date = w_upto_date AND w_ason_date IS NULL
   THEN
      w_ason_date := w_upto_date;
   END IF;

   IF p_report_name = 'micfin_emicollect_report'
   THEN
      SELECT CASE WHEN parameter_values != '' THEN parameter_values END
       INTO w_employee_id
       FROM appauth_report_parameter
      WHERE     parameter_name = 'p_employee_id'
            AND report_name = p_report_name
            AND app_user_id = p_app_user_id;

      w_sql_stat :=
            'INSERT INTO appauth_report_table_tabular (report_column1,
                                          report_column2,
                                          report_column3,
                                          report_column4,
                                          report_column5,
                                          report_column6,
                                          report_column7,
                                          report_column8,
                                          report_column9,
                                          report_column10,
                                          report_column11,
                                          report_column12,
                                          report_column13,
                                          report_column14,
                                          report_column15,
                                          report_column16,
                                          report_column17,
                                          report_column18,
                                          report_column19,
                                          report_column20,
                                          app_user_id)
   WITH
      emi_setup
      AS
         (SELECT c.branch_center_code || '' - '' || c.center_name center_name,
                 employee_name, a.account_number,
                 e.client_id,
                 a.account_title,
                 a.phone_number,
                 emi_reference_no,
                 total_emi_amount,
                 number_of_installment,
                 emi_rate,
                 emi_inst_amount inst_amount,
                 emi_inst_repay_from_date inst_from_date,
                 emi_inst_frequency inst_freq,
                 e.center_code,
                 installment_tot_repay_amt,
                 fn_get_noof_installment_due (e.emi_inst_frequency,
                                              e.emi_inst_repay_from_date,
                                              '''
         || w_ason_date
         || ''')
                    noof_installment_due,
                 fn_get_todays_due (e.emi_inst_frequency,
                                    e.emi_inst_repay_from_date,
                                    '''
         || w_ason_date
         || ''')
                    is_todays_due, 
                 fn_get_next_installment_date (emi_inst_frequency,
                                               emi_inst_repay_from_date,
                                               current_date) next_inst_date
            FROM sales_emi_setup e,
                 finance_accounts_balance a,
                 delar_center c,
                 appauth_employees em
           WHERE     e.account_number = a.account_number
                 AND c.center_code = e.center_code
                 AND c.center_employee_id = em.employee_id 
                 AND e.emi_reference_date <= '''
         || w_ason_date
         || '''
                 and ( e.emi_closer_date is null or emi_closer_date>='''
         || w_ason_date
         || ''')';

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and e.branch_code = ' || w_branch_code;
      END IF;

      IF w_center_code IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and e.center_code = ''' || w_center_code || '''';
      END IF;

      IF w_employee_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and em.employee_id = ''' || w_employee_id || '''';
      END IF;

      w_sql_stat :=
            w_sql_stat
         || '),
      emi_details
      AS
         (SELECT s.center_name,
                 s.employee_name,
                 s.account_number,
                 s.center_code,
                 s.client_id,
                 s.installment_tot_repay_amt,
                 s.account_title,
                 s.phone_number,
                 s.emi_reference_no,
                 s.total_emi_amount,
                 s.number_of_installment,
                 s.emi_rate,
                 s.inst_amount,
                 s.inst_from_date,
                 s.next_inst_date,s.is_todays_due,
                 s.inst_freq, noof_installment_due total_due_inst, (noof_installment_due* s.inst_amount) inst_due_amount,
                 COALESCE (b.emi_total_payment, 0.00) emi_total_payment
            FROM emi_setup s
                 LEFT OUTER JOIN
                 (SELECT h.branch_code,
                         h.account_number,
                         h.emi_reference_no emi_reference_no,
                         h.emi_total_payment
                    FROM sales_emi_history h,
                         (  SELECT b.account_number,
                                   b.emi_reference_no,
                                   max (inst_receive_date) inst_receive_date
                              FROM sales_emi_history b, emi_setup e
                             WHERE     b.account_number = e.account_number
                                   AND b.emi_reference_no = e.emi_reference_no
                                   AND b.inst_receive_date <= '''
         || w_ason_date
         || '''
                          GROUP BY b.account_number, b.emi_reference_no) l
                   WHERE     h.account_number = l.account_number
                         AND h.emi_reference_no = l.emi_reference_no
                         AND h.inst_receive_date = l.inst_receive_date) b
                    ON     (s.account_number = b.account_number)
                       AND s.emi_reference_no = b.emi_reference_no),
      emi_receive_details
      AS
         (SELECT s.center_name,
                 s.employee_name,
                 s.account_number,
                 s.center_code,
                 s.client_id,
                 s.installment_tot_repay_amt,
                 s.account_title,
                 s.phone_number,
                 s.emi_reference_no,
                 s.total_emi_amount,
                 s.number_of_installment,
                 s.emi_rate,
                 s.inst_amount,
                 s.inst_from_date,
                 s.next_inst_date,
                 s.inst_freq,s.is_todays_due,
                 COALESCE (emi_total_payment, 0.00) emi_total_payment,
                 COALESCE (total_due_inst, 0) total_due_inst,
                 COALESCE (inst_due_amount, 0.00) inst_due_amount,
                 COALESCE (inst_receive_amount, 0.00) inst_receive_amount
            FROM emi_details s
                 LEFT OUTER JOIN
                 (SELECT h.branch_code,
                         h.account_number,
                         h.emi_reference_no emi_reference_no,
                         h.inst_receive_amount
                    FROM sales_emi_history h, emi_setup e
                   WHERE     h.account_number = e.account_number
                         AND h.emi_reference_no = e.emi_reference_no
                         AND h.inst_receive_date = '''
         || w_ason_date
         || ''') b
                    ON     (s.account_number = b.account_number)
                       AND s.emi_reference_no = b.emi_reference_no)
     SELECT client_id || '' - '' || account_title client_name,
            account_title,
		    center_name,
            employee_name,
            phone_number,
            emi_reference_no,
            total_emi_amount,
            number_of_installment,
            installment_tot_repay_amt,
            inst_amount,
            inst_from_date,
            next_inst_date,
            inst_freq,
            total_due_inst,
            (CASE
                WHEN (inst_due_amount - installment_tot_repay_amt) > 0
                THEN
                   (inst_due_amount - installment_tot_repay_amt)
                ELSE
                   0
             END) inst_due_amount,
            inst_receive_amount,
            (CASE
                WHEN (inst_amount*is_todays_due - inst_receive_amount) > 0
                THEN
                   (inst_amount*is_todays_due - inst_receive_amount)
                ELSE
                   0
             END) todays_due_amount,
            emi_total_payment,
            (CASE
                WHEN (inst_due_amount - emi_total_payment) > 0
                THEN
                   (inst_due_amount - emi_total_payment)
                ELSE
                   0
             END) inst_od_amount,
            (CASE
                WHEN (emi_total_payment - inst_due_amount) > 0
                THEN
                   (emi_total_payment - inst_due_amount)
                ELSE
                   0
             END) inst_adv_amount,
         '''
         || p_app_user_id
         || '''
       FROM emi_receive_details 
   ORDER BY employee_name, center_name, account_title';

      ---RAISE EXCEPTION USING MESSAGE = w_sql_stat;

      EXECUTE w_sql_stat;
   ELSIF p_report_name = 'micfin_collectiondetails_report'
   THEN
      SELECT CASE WHEN parameter_values != '' THEN parameter_values END
       INTO w_employee_id
       FROM appauth_report_parameter
      WHERE     parameter_name = 'p_employee_id'
            AND report_name = p_report_name
            AND app_user_id = p_app_user_id;

      SELECT CASE WHEN parameter_values != '' THEN parameter_values END
       INTO w_app_user_id
       FROM appauth_report_parameter
      WHERE     parameter_name = 'p_app_user_id'
            AND report_name = p_report_name
            AND app_user_id = p_app_user_id;

      SELECT CASE WHEN parameter_values != '' THEN parameter_values END
       INTO w_client_id
       FROM appauth_report_parameter
      WHERE     parameter_name = 'p_client_id'
            AND report_name = p_report_name
            AND app_user_id = p_app_user_id;

      w_sql_stat :=
         'INSERT INTO appauth_report_table_tabular (report_column1,
                                          report_column2,
                                          report_column3,
                                          report_column4,
                                          report_column5,
                                          report_column6,
                                          report_column7,
                                          report_column8,
                                          report_column9,
                                          report_column10,
                                          report_column11,
                                          report_column12,
                                          report_column13,
                                          report_column14,
                                          app_user_id)
   WITH
      receive_payment
      AS
         (SELECT branch_code,
                 center_code,
                 client_id,
                 ''Deposit Receive'' transaction_type,
                 deposit_date transaction_date,
                 (deposit_amount - cancel_amount) receive_amount,
                 0  payment_amount,
                 narration narration,
                 to_char (app_data_time, ''DD-MM-YYYY: HH12:MI:SS AM'') posting_time
            FROM finance_deposit_receive
           WHERE cancel_by IS NULL ';

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and branch_code = ' || w_branch_code;
      END IF;

      IF w_center_code IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and center_code = ''' || w_center_code || '''';
      END IF;

      IF w_app_user_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and app_user_id = ''' || w_app_user_id || '''';
      END IF;

      IF w_client_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and client_id = ''' || w_client_id || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and deposit_date = ''' || w_ason_date || '''';
      END IF;

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and deposit_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      w_sql_stat :=
            w_sql_stat
         || ' UNION ALL
          SELECT branch_code,
                 center_code,
                 client_id,
                 ''Deposit Payment'' transaction_type,
                 payment_date transaction_date,
                 0  receive_amount,
                 payment_amount - cancel_amount payment_amount,
                 narration narration,
                 to_char (app_data_time, ''DD-MM-YYYY: HH12:MI:SS AM'') posting_time
            FROM finance_deposit_payment
           WHERE cancel_by IS NULL ';

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and branch_code = ' || w_branch_code;
      END IF;

      IF w_center_code IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and center_code = ''' || w_center_code || '''';
      END IF;

      IF w_app_user_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and app_user_id = ''' || w_app_user_id || '''';
      END IF;

      IF w_client_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and client_id = ''' || w_client_id || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and payment_date = ''' || w_ason_date || '''';
      END IF;

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and payment_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      w_sql_stat :=
            w_sql_stat
         || ' UNION ALL
          SELECT branch_code,
                 center_code,
                 client_id,
                 ''Emi Receive'' transaction_type,
                 receive_date transaction_date,
                 receive_amount + penalty_charge receive_amount,
                 0  payment_amount,
                 transaction_narration narration,
                 to_char (app_data_time, ''DD-MM-YYYY: HH12:MI:SS AM'') posting_time
            FROM sales_emi_receive
           WHERE emi_cancel_by IS NULL ';

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and branch_code = ' || w_branch_code;
      END IF;

      IF w_center_code IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and center_code = ''' || w_center_code || '''';
      END IF;

      IF w_app_user_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and app_user_id = ''' || w_app_user_id || '''';
      END IF;

      IF w_client_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and client_id = ''' || w_client_id || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and receive_date = ''' || w_ason_date || '''';
      END IF;

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and receive_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      w_sql_stat :=
            w_sql_stat
         || '
          UNION ALL
          SELECT branch_code,
                 center_code,
                 client_id,
                 fee_type || '' Fees Receive'' transaction_type,
                 fee_collection_date transaction_date,
                 fee_amount - cancel_amount receive_amount,
                 0  payment_amount,
                 transaction_narration narration,
                 to_char (app_data_time, ''DD-MM-YYYY: HH12:MI:SS AM'') posting_time
            FROM sales_fees_history
           WHERE cancel_by IS NULL ';

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and branch_code = ' || w_branch_code;
      END IF;

      IF w_center_code IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and center_code = ''' || w_center_code || '''';
      END IF;

      IF w_app_user_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and app_user_id = ''' || w_app_user_id || '''';
      END IF;

      IF w_client_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and client_id = ''' || w_client_id || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and fee_collection_date = '''
            || w_ason_date
            || '''';
      END IF;

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and fee_collection_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      w_sql_stat := w_sql_stat || ' ),
      transaction_details
      AS
         (SELECT t.branch_code,
                 t.client_id,
                 c.client_name,
                 t.center_code,
                 e.employee_id,
                 e.employee_name,
                 r.branch_center_code,
                 r.branch_center_code || ''-'' || r.center_name center_name,
                 receive_amount,
                 payment_amount,
                 transaction_type,
                 to_char (transaction_date, ''DD-MM-YYYY'') transaction_date,
                 narration,
                 posting_time
            FROM receive_payment t,
                 sales_clients c,
                 delar_center r,
                 appauth_employees e
           WHERE     t.client_id = c.client_id
                 AND t.center_code = r.center_code
                 AND e.employee_id = r.center_employee_id)
   SELECT t.*, ''' || p_app_user_id || ''' app_user_id
     FROM transaction_details t';

      EXECUTE w_sql_stat;
   END IF;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      o_errm := SQLERRM;
      o_status := 'E';
END;
$$;


ALTER FUNCTION public.fn_run_micfin_report(p_app_user_id character, p_report_name character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_run_purchase_report(character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_run_purchase_report(p_app_user_id character, p_report_name character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                 VARCHAR;
   w_errm                   VARCHAR;
   w_sql_stat               TEXT := '';
   w_center_code            VARCHAR;
   w_from_date              DATE;
   w_upto_date              DATE;
   w_ason_date              DATE;
   w_current_business_day   DATE;
   w_ledger_code            VARCHAR;
   w_invoice_number         VARCHAR;
   w_user_id                VARCHAR;
   w_acc_type_code          VARCHAR;
   w_employee_id            VARCHAR;
   w_client_id              VARCHAR;
   w_supplier_id            VARCHAR;
   w_account_number         VARCHAR;
   w_account_title          VARCHAR;
   w_product_id             VARCHAR;
   w_branch_code            INTEGER;
   w_zero_balance           VARCHAR := 'N';
   w_transfer_tran          VARCHAR := 'N';
   w_closing_balance        NUMERIC (22, 2);
   w_opening_balance        NUMERIC (22, 2);
   w_cash_gl_code           VARCHAR;
   rec_delar_list           RECORD;
   rec_branch_list          RECORD;
   rec_product_list         RECORD;
   w_branch_name            VARCHAR;
   w_branch_address         VARCHAR;
   w_group_id               VARCHAR;
   w_brand_id               VARCHAR;
BEGIN
   DELETE FROM appauth_report_table_tabular
         WHERE app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END
    INTO w_center_code
    FROM appauth_report_parameter
   WHERE     parameter_name = 'p_center_code'
         AND report_name = p_report_name
         AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != ''
             THEN
                cast (parameter_values AS INTEGER)
          END w_branch_code
     INTO w_branch_code
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_branch_code'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_group_id
     INTO w_group_id
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_group_id'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_group_id
     INTO w_brand_id
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_brand_id'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_from_date
     INTO w_from_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_from_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_upto_date
     INTO w_upto_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_upto_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_ason_date
     INTO w_ason_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_ason_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   IF w_from_date = w_upto_date AND w_ason_date IS NULL
   THEN
      w_ason_date := w_upto_date;
   END IF;

   IF p_report_name = 'daywise_purchase_list'
   THEN
      SELECT CASE WHEN parameter_values != '' THEN parameter_values END
       INTO w_product_id
       FROM appauth_report_parameter
      WHERE     parameter_name = 'p_product_id'
            AND report_name = p_report_name
            AND app_user_id = p_app_user_id;


      w_sql_stat :=
            'INSERT INTO appauth_report_table_tabular (report_column1,
                                             report_column2,
                                             report_column3,
                                             report_column4,
                                             report_column5,
                                             report_column6,
                                             report_column7,
                                             report_column8,
                                             app_user_id )
select p.product_id, p.product_model, p.product_name, TO_CHAR(s.stock_date ,''DD-MM-YYYY''), s.purces_price, s.quantity, s.purces_price*s.quantity total_price,
ROW_NUMBER () OVER (ORDER BY s.stock_date,p.product_name) ROW_NUMBER,
'''
         || p_app_user_id
         || '''
 from sales_stockdetails s, sales_products p
  where s.product_id=p.product_id 
  and status=''S''';

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and s.stock_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and s.stock_date = ''' || w_ason_date || '''';
      END IF;

      IF w_product_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.product_id = ''' || w_product_id || '''';
      END IF;

      IF w_group_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.product_group = ''' || w_group_id || '''';
      END IF;

      IF w_brand_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.brand_id = ''' || w_brand_id || '''';
      END IF;

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and s.branch_code = ' || w_branch_code;
      END IF;

      w_sql_stat := w_sql_stat || ' order by s.stock_date,p.product_name';

      -- RAISE EXCEPTION USING MESSAGE = w_sql_stat;

      EXECUTE w_sql_stat;
   ELSIF p_report_name = 'sales_purchasenreturn_details'
   THEN
      SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_account_number
        INTO w_account_number
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_supplier_account'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_account_number
        INTO w_product_id
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_product_id'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      IF w_account_number IS NOT NULL
      THEN
         SELECT DISTINCT client_id
           INTO w_supplier_id
           FROM finance_accounts_balance
          WHERE account_number = w_account_number;
      END IF;

      w_sql_stat :=
         'INSERT INTO appauth_report_table_tabular (report_column1,
                                        report_column2,
                                        report_column3,
                                        report_column4,
                                        report_column5,
                                        report_column6,
                                        report_column7,
                                        report_column8,
                                        report_column9,
                                        report_column10,
                                        report_column11,
                                        app_user_id)
   SELECT COALESCE (p.supplier_id, r.supplier_id) supplier_id,
          '' '' supplier_name,
          COALESCE (p.product_id, r.product_id) product_id,
             COALESCE (p.product_name, r.product_name)
          || ''(''
          || COALESCE (p.product_model, r.product_model, '' '')
          || '')'' product_name,
          COALESCE (p.stock_date, r.return_date) transaction_date,
          COALESCE (p.quantity, 0) purces_quantity,
          COALESCE (p.purces_rate, 0) purces_rate,
          COALESCE (p.total_price, 0) purces_total_price,
          COALESCE (r.returned_quantity, 0) returned_quantity,
          COALESCE (r.return_rate, 0) return_rate,
          COALESCE (r.return_amount, 0) return_total_price,
          ''' || p_app_user_id || '''
     FROM (SELECT d.supplier_id,
                  p.product_id,
                  d.stock_date,
                  p.product_model,
                  p.product_name,
                  d.quantity,
                  d.purces_price purces_rate,
                  d.total_price
             FROM sales_stockdetails d, sales_products p
            WHERE d.product_id = p.product_id 
            and status =''S''';

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and d.stock_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and d.branch_code = ' || w_branch_code;
      END IF;

      IF w_product_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and d.product_id = ''' || w_product_id || '''';
      END IF;

      IF w_group_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.product_group = ''' || w_group_id || '''';
      END IF;

      IF w_brand_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.brand_id = ''' || w_brand_id || '''';
      END IF;

      IF w_supplier_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and d.supplier_id = ''' || w_supplier_id || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and d.stock_date = ''' || w_ason_date || '''';
      END IF;

      w_sql_stat :=
            w_sql_stat
         || '  ) p
          FULL OUTER JOIN
          (SELECT r.supplier_id,
                  p.product_id,
                  r.return_date,
                  p.product_model,
                  p.product_name,
                  r.returned_quantity,
                  round((r.return_amount / r.returned_quantity),2) return_rate,
                  r.return_amount
             FROM sales_stock_return_details r, sales_products p
            WHERE r.product_id = p.product_id ';

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and r.return_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and r.branch_code = ' || w_branch_code;
      END IF;

      IF w_supplier_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and r.supplier_id = ''' || w_supplier_id || '''';
      END IF;

      IF w_product_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and r.product_id = ''' || w_product_id || '''';
      END IF;

      IF w_group_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.product_group = ''' || w_group_id || '''';
      END IF;

      IF w_brand_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.brand_id = ''' || w_brand_id || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and r.return_date = ''' || w_ason_date || '''';
      END IF;

      w_sql_stat := w_sql_stat || '  ) r
             ON (    p.product_id = r.product_id
                 AND p.supplier_id = r.supplier_id
                 AND r.return_date = p.stock_date)';

      --RAISE EXCEPTION USING MESSAGE = w_sql_stat;
      EXECUTE w_sql_stat;

      BEGIN
         FOR rec_branch_list
            IN (SELECT DISTINCT client_id, account_title
                  FROM finance_accounts_balance,
                       (SELECT DISTINCT report_column1
                          FROM appauth_report_table_tabular) s
                 WHERE report_column1 = client_id)
         LOOP
            UPDATE appauth_report_table_tabular
               SET report_column2 =
                         rec_branch_list.client_id
                      || '-'
                      || rec_branch_list.account_title
             WHERE report_column1 = rec_branch_list.client_id;
         END LOOP;
      END;
   ELSIF p_report_name = 'sales_purchasenreturnstmt_details'
   THEN
      SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_account_number
        INTO w_account_number
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_supplier_account'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_account_number
        INTO w_product_id
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_product_id'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      IF w_account_number IS NOT NULL
      THEN
         SELECT DISTINCT client_id, account_title
           INTO w_supplier_id, w_account_title
           FROM finance_accounts_balance
          WHERE account_number = w_account_number;
      END IF;

      SELECT w_status, w_errm
        INTO w_status, w_errm
        FROM fn_finance_acbal_hist (w_account_number, w_from_date);

      BEGIN
         INSERT INTO appauth_report_parameter (app_user_id,
                                               report_name,
                                               parameter_name,
                                               parameter_values)
              VALUES (p_app_user_id,
                      p_report_name,
                      'p_supplier_name',
                      w_account_title);
      END;

      w_sql_stat :=
                      'INSERT INTO appauth_report_table_tabular (report_column1,
                                        report_column2,
                                        report_column3,
                                        report_column4,
                                        report_column5,
                                        report_column6,
                                        report_column7,
                                        report_column8,
                                        report_column9,
                                        report_column10,
                                        report_column11,
                                        report_column12,
                                        report_column13,
                                        report_column14,
                                        report_column15,
                                        report_column16,
                                        report_column17,
                                        report_column18,
                                        app_user_id)
   SELECT '''
                   || w_supplier_id
                   || ''' supplier_id,
          '''
                   || w_account_title
                   || ''' supplier_name,
          product_id,
          product_name,
          transaction_date,
          COALESCE (purces_quantity,0) purces_quantity,
          COALESCE (purces_rate,0.00) purces_rate,
          COALESCE (purces_total_price,0.00) purces_total_price,
          0.00,
          COALESCE (purces_total_price,0.00) purces_total_price,
          COALESCE (returned_quantity,0) returned_quantity,
          COALESCE (return_rate,0.00) return_rate,
          COALESCE (return_total_price,0.00) return_total_price,
          row_serial,
          total_row,
          (CASE WHEN row_serial = ''1'' THEN credit_balance ELSE 0 END)
             credit_balance,
          (CASE WHEN row_serial = ''1'' THEN debit_balance ELSE 0 END)
             debit_balance,
          account_balance,
          '''
                   || p_app_user_id
                   || '''
     FROM (SELECT '' supplier_id,
                  '' supplier_name,
                  product_id,
                  COALESCE (product_name,transaction_narration) product_name,
                  transaction_date,
                  purces_quantity,
                  purces_rate,
                  purces_total_price,
                  returned_quantity,
                  return_rate,
                  return_total_price,
                  credit_balance,
                  debit_balance,
                  account_balance,
                  (CASE
                      WHEN (ROW_NUMBER ()
                            OVER (PARTITION BY transaction_date
                                  ORDER BY transaction_date, product_name)) =
                           1
                      THEN
                         ''1''
                      ELSE
                         ''''
                   END) row_serial,
                  count (transaction_date)
                     OVER (PARTITION BY transaction_date) total_row
             FROM (SELECT supplier_id,
                          supplier_name,
                          product_id,
                          product_name,
                          COALESCE (s.transaction_date, t.transaction_date)
                             transaction_date,transaction_narration,
                          purces_quantity,
                          purces_rate,
                          purces_total_price,
                          returned_quantity,
                          return_rate,
                          return_total_price,
                          credit_balance,
                          debit_balance,
                          account_balance
                     FROM (SELECT COALESCE (p.supplier_id, r.supplier_id)
                                     supplier_id,
                                  '' ''
                                     supplier_name,
                                  COALESCE (p.product_id, r.product_id)
                                     product_id,
                                     COALESCE (p.product_name,
                                               r.product_name)
                                  || ''(''
                                  || COALESCE (p.product_model,
                                               r.product_model,
                                               '' '')
                                  || '')''
                                     product_name,
                                  COALESCE (p.stock_date, r.return_date)
                                     transaction_date,
                                  COALESCE (p.quantity, 0)
                                     purces_quantity,
                                  COALESCE (p.purces_rate, 0)
                                     purces_rate,
                                  COALESCE (p.total_price, 0)
                                     purces_total_price,
                                  COALESCE (r.returned_quantity, 0)
                                     returned_quantity,
                                  COALESCE (r.return_rate, 0)
                                     return_rate,
                                  COALESCE (r.return_amount, 0)
                                     return_total_price
                             FROM (SELECT d.supplier_id,
                                          p.product_id,
                                          d.stock_date,
                                          p.product_model,
                                          p.product_name,
                                          d.quantity,
                                          d.purces_price purces_rate,
                                          d.total_price
                                     FROM sales_stockdetails d,
                                          sales_products p
                                    WHERE d.product_id = p.product_id and status =''S'' and d.supplier_id='''
                   || w_supplier_id
                   || ''' and d.stock_date between '''
                   || w_from_date
                   || ''' and '''
                   || w_upto_date
                   || ''') p
                                  FULL OUTER JOIN
                                  (SELECT r.supplier_id,
                                          p.product_id,
                                          r.return_date,
                                          p.product_model,
                                          p.product_name,
                                          r.returned_quantity,
                                          round (
                                             (  r.return_amount
                                              / r.returned_quantity),
                                             2) return_rate,
                                          r.return_amount
                                     FROM sales_stock_return_details r,
                                          sales_products p
                                    WHERE r.product_id = p.product_id and r.supplier_id='''
                   || w_supplier_id
                   || ''' and r.return_date between '''
                   || w_from_date
                   || ''' and '''
                   || w_upto_date
                   || ''' ) r
                                     ON (    p.product_id = r.product_id
                                         AND p.supplier_id = r.supplier_id
                                         AND r.return_date = p.stock_date)) S
                          FULL OUTER JOIN
                          (SELECT transaction_date,transaction_narration,
                                  credit_balance,
                                  debit_balance,
                                  SUM (credit_balance - debit_balance)
                                     OVER (ORDER BY serial_number) account_balance
                             FROM (SELECT 1  serial_number,
                                    '''
                   || w_from_date
                 - 1
              || '''  transaction_date,''Opening Balance'' transaction_narration,
                                          (CASE
                                              WHEN o_account_balance > 0
                                              THEN
                                                 o_account_balance
                                              ELSE
                                                 0
                                           END) credit_balance,
                                          (CASE
                                              WHEN o_account_balance < 0
                                              THEN
                                                 abs (o_account_balance)
                                              ELSE
                                                 0
                                           END) debit_balance
                                     FROM fn_finance_get_ason_acbal ('''
              || w_account_number
              || ''', '''
              || w_from_date
            - 1
         || ''')
                                   UNION ALL
                                     SELECT   (ROW_NUMBER ()
                                               OVER (ORDER BY transaction_date))
                                            + 1
                                               serial_number,
                                            transaction_date,STRING_AGG (transaction_narration, '','') transaction_narration,
                                            sum (credit_balance)
                                               credit_balance,
                                            sum (debit_balance)
                                               debit_balance
                                       FROM (SELECT transaction_date,
                                                    transaction_narration,
                                                    (CASE
                                                        WHEN tran_debit_credit =
                                                             ''C''
                                                        THEN
                                                           tran_amount
                                                        ELSE
                                                           0
                                                     END) credit_balance,
                                                    (CASE
                                                        WHEN tran_debit_credit =
                                                             ''D''
                                                        THEN
                                                           tran_amount
                                                        ELSE
                                                           0
                                                     END) debit_balance
                                               FROM finance_transaction_details
                                              WHERE     account_number ='''
         || w_account_number
         || '''
                                                    AND cancel_by IS NULL
                                                    AND transaction_date BETWEEN '''
         || w_from_date
         || '''
                                                                       AND   '''
         || w_upto_date
         || ''' )
                                            t
                                   GROUP BY transaction_date) a
                            WHERE serial_number >= 1) T
                             ON (T.transaction_date = S.transaction_date)) t)
          t';

      --RAISE EXCEPTION USING MESSAGE = w_sql_stat;

      EXECUTE w_sql_stat;
   ELSIF p_report_name = 'sales_inventory_balance'
   THEN
      SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_product_id
        INTO w_product_id
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_product_id'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      IF COALESCE (w_branch_code, 0) = 0
      THEN
         BEGIN
            FOR rec_branch_list IN (  SELECT branch_code
                                        FROM appauth_branch
                                    ORDER BY branch_code)
            LOOP
               FOR rec_product_list
                  IN (SELECT product_id FROM sales_products)
               LOOP
                  SELECT *
                  INTO w_status, w_status
                  FROM fn_sales_product_inventory_hist (
                          rec_branch_list.branch_code,
                          rec_product_list.product_id);
               END LOOP;
            END LOOP;
         END;
      ELSE
         FOR rec_product_list IN (SELECT product_id FROM sales_products)
         LOOP
            SELECT *
            INTO w_status, w_status
            FROM fn_sales_product_inventory_hist (
                    w_branch_code,
                    rec_product_list.product_id);
         END LOOP;
      END IF;

      w_sql_stat :=
            'INSERT INTO appauth_report_table_tabular (report_column1,
                                        report_column2,
                                        report_column3,
                                        report_column4,
                                        report_column5,
                                        report_column6,
                                        report_column7,
                                        report_column8,
                                        report_column9,
                                        report_column10,
                                        report_column11,
                                        report_column12,
                                        report_column13,
                                        report_column14,
                                        report_column15,
                                        report_column16,
                                        report_column17,
                                        report_column18,
                                        report_column19, 
                                        report_column20,
                                        app_user_id)
  SELECT t.product_id,
         p.product_name || '' ('' || p.product_model || '')'' product_name,
         COALESCE (t.opening_purchase_rate, 0) opening_purchase_rate,
         COALESCE (t.opening_available_stock, 0) opening_available_stock,
           COALESCE (t.opening_available_stock, 0)
         * COALESCE (t.opening_purchase_rate, 0) product_opening_value,
         COALESCE (t.product_total_stock, 0) product_total_stock,
         COALESCE (t.total_order_quantity, 0) total_order_quantity,
         COALESCE (t.product_total_sales, 0) product_total_sales,
         COALESCE (t.total_stock_return, 0) total_stock_return,
         COALESCE (t.total_sales_return, 0) total_sales_return,
         COALESCE (t.product_total_damage, 0) product_total_damage,
         COALESCE (t.product_end_balance, 0) product_end_balance,
         COALESCE (t.total_purchase_amount, 0) total_purchase_amount,
         COALESCE (t.total_sales_amount, 0) total_sales_amount,
         COALESCE (t.stock_return_amount, 0) stock_return_amount,
         COALESCE (t.sales_return_amount, 0) sales_return_amount,
         COALESCE (t.total_damage_amount, 0) total_damage_amount,
         COALESCE (t.closing_purchase_rate, 0) closing_purchase_rate,
         COALESCE (t.closing_available_stock, 0) closing_available_stock,
           COALESCE (t.closing_available_stock, 0)
         * COALESCE (t.closing_purchase_rate, 0) product_closing_value,'''
         || p_app_user_id
         || '''
       FROM ( SELECT product_id,
                   sum (product_available_stock) product_available_stock,
                   sum (product_total_stock) product_total_stock,
                   sum (total_order_quantity) total_order_quantity,
                   sum (product_total_sales) product_total_sales,
                   sum (total_stock_return) total_stock_return,
                   sum (total_sales_return) total_sales_return,
                   sum (product_total_damage) product_total_damage,
                   sum (total_purchase_amount) total_purchase_amount,
                   sum (total_sales_amount) total_sales_amount,
                   sum (stock_return_amount) stock_return_amount,
                   sum (sales_return_amount) sales_return_amount,
                   sum (total_damage_amount) total_damage_amount,
                   sum (opening_purchase_rate) opening_purchase_rate,
                   sum (opening_available_stock) opening_available_stock,
                   sum (closing_available_stock) closing_available_stock,
                   sum (closing_purchase_rate) closing_purchase_rate,
                   sum (product_end_balance) product_end_balance
              FROM (SELECT COALESCE (b.product_id, t.product_id, e.product_id)
                    product_id,
                 COALESCE (b.opening_available_stock, 0)
                    product_available_stock,
                 t.product_total_stock,
                 t.total_order_quantity,
                 t.product_total_sales,
                 t.total_stock_return,
                 t.total_sales_return,
                 t.product_total_damage,
                 t.total_purchase_amount,
                 t.total_sales_amount,
                 t.stock_return_amount,
                 t.sales_return_amount,
                 t.total_damage_amount,
                 b.opening_purchase_rate,
                 b.opening_available_stock,
                 e.closing_available_stock,
                 e.closing_purchase_rate,
                 (  COALESCE (b.opening_available_stock, 0)
                  + COALESCE (t.product_total_stock, 0)
                  + COALESCE (t.total_sales_return, 0)
                  - COALESCE (t.product_total_sales, 0)
                  - COALESCE (t.total_stock_return, 0)
                  - COALESCE (t.product_total_damage, 0))
                    product_end_balance
            FROM (SELECT h.product_id,
                         h.product_available_stock opening_available_stock,
                         h.product_purchase_rate opening_purchase_rate
                    FROM sales_products_inventory_hist h,
                         (  SELECT product_id,
                                   max (inv_balance_date) inv_balance_date
                              FROM sales_products_inventory_hist
                                WHERE inv_balance_date < '''
         || w_from_date
         || '''';

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and branch_code = ' || w_branch_code;
      END IF;

      IF w_product_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and product_id = ''' || w_product_id || '''';
      END IF;

      w_sql_stat :=
            w_sql_stat
         || ' GROUP BY product_id) b
                      WHERE     h.product_id = b.product_id
                            AND h.inv_balance_date = b.inv_balance_date) b
                    FULL OUTER JOIN
                    (  SELECT h.product_id,
                           sum (h.product_total_stock)
                              product_total_stock,
                           sum (h.total_order_quantity)
                              total_order_quantity,
                           sum (h.product_total_sales)
                              product_total_sales,
                           sum (h.total_stock_return)
                              total_stock_return,
                           sum (h.total_sales_return)
                              total_sales_return,
                           sum (h.product_total_damage)
                              product_total_damage,
                           sum (h.total_purchase_amount)
                              total_purchase_amount,
                           sum (h.total_purchase_balance)
                              total_purchase_balance,
                           sum (h.total_sales_amount)
                              total_sales_amount,
                           sum (h.total_sales_balance)
                              total_sales_balance,
                           sum (h.stock_return_amount)
                              stock_return_amount,
                           sum (h.sales_return_amount)
                              sales_return_amount,
                           sum (h.total_damage_amount)
                              total_damage_amount,
                           sum (h.cost_of_good_sold_balance)
                              cost_of_good_sold_balance,
                           sum (h.total_discount_receive)
                              total_discount_receive,
                           sum (h.total_discount_pay)
                              total_discount_pay
                         FROM sales_products_inventory_hist h
                        WHERE inv_balance_date between '''
         || w_from_date
         || ''' and '''
         || w_upto_date
         || '''';

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and h.branch_code = ' || w_branch_code;
      END IF;

      IF w_product_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and h.product_id = ''' || w_product_id || '''';
      END IF;

      w_sql_stat :=
            w_sql_stat
         || ' GROUP BY h.product_id) t
                       ON (b.product_id = t.product_id)
                       FULL OUTER JOIN
                 (SELECT h.product_id,
                         h.product_available_stock closing_available_stock,
                         h.product_purchase_rate closing_purchase_rate
                    FROM sales_products_inventory_hist h,
                         (  SELECT product_id,
                                   max (inv_balance_date) inv_balance_date
                              FROM sales_products_inventory_hist
                             WHERE     inv_balance_date <= '''
         || w_upto_date
         || '''';

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and branch_code = ' || w_branch_code;
      END IF;

      IF w_product_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and product_id = ''' || w_product_id || '''';
      END IF;

      w_sql_stat :=
            w_sql_stat
         || '     GROUP BY product_id) b
                   WHERE     h.product_id = b.product_id
                         AND h.inv_balance_date = b.inv_balance_date) e
                    ON (t.product_id = e.product_id)) d group by product_id) t,
            sales_products p
      WHERE p.product_id = t.product_id ';

      IF w_group_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.product_group = ''' || w_group_id || '''';
      END IF;

      IF w_brand_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.brand_id = ''' || w_brand_id || '''';
      END IF;

      w_sql_stat := w_sql_stat || ' ORDER BY p.product_name ';

      --RAISE EXCEPTION USING MESSAGE = w_sql_stat;

      EXECUTE w_sql_stat;
   END IF;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      o_errm := SQLERRM;
      o_status := 'E';
END;
$$;


ALTER FUNCTION public.fn_run_purchase_report(p_app_user_id character, p_report_name character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_run_report(character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_run_report(p_app_user_id character, p_report_name character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                 VARCHAR;
   w_errm                   VARCHAR;
   w_sql_stat               TEXT := '';
   w_center_code            VARCHAR;
   w_from_date              DATE;
   w_upto_date              DATE;
   w_ason_date              DATE;
   w_current_business_day   DATE;
   w_ledger_code            VARCHAR;
   w_invoice_number         VARCHAR;
   w_user_id                VARCHAR;
   w_acc_type_code          VARCHAR;
   w_employee_id            VARCHAR;
   w_client_id              VARCHAR;
   w_supplier_id            VARCHAR;
   w_account_number         VARCHAR;
   w_account_title          VARCHAR;
   w_product_id             VARCHAR;
   w_branch_code            INTEGER;
   w_zero_balance           VARCHAR := 'N';
   w_transfer_tran          VARCHAR := 'N';
   w_delar_id               INTEGER;
   w_closing_balance        NUMERIC (22, 2);
   w_opening_balance        NUMERIC (22, 2);
   w_cash_gl_code           VARCHAR;
   rec_delar_list           RECORD;
   rec_branch_list          RECORD;
   rec_product_list         RECORD;
   w_branch_name            VARCHAR;
   w_branch_address         VARCHAR;
   w_empty_sheet            VARCHAR;
   w_center_name            VARCHAR;
   w_center_address         VARCHAR;
BEGIN
   DELETE FROM appauth_report_table_tabular
         WHERE app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END
    INTO w_center_code
    FROM appauth_report_parameter
   WHERE     parameter_name = 'p_center_code'
         AND report_name = p_report_name
         AND app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_user_id
     INTO w_user_id
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_user_id'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != ''
             THEN
                cast (parameter_values AS INTEGER)
          END w_branch_code
     INTO w_branch_code
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_branch_code'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   IF w_branch_code IS NOT NULL
   THEN
      SELECT branch_name, branch_address
        INTO w_branch_name, w_branch_address
        FROM appauth_branch
       WHERE branch_code = w_branch_code;

      BEGIN
         INSERT INTO appauth_report_parameter (app_user_id,
                                               report_name,
                                               parameter_name,
                                               parameter_values)
              VALUES (p_app_user_id,
                      p_report_name,
                      'p_branch_name',
                      w_branch_name);

         INSERT INTO appauth_report_parameter (app_user_id,
                                               report_name,
                                               parameter_name,
                                               parameter_values)
              VALUES (p_app_user_id,
                      p_report_name,
                      'p_branch_address',
                      w_branch_address);
      END;
   END IF;

   IF w_center_code IS NOT NULL
   THEN
      SELECT center_name, center_address
        INTO w_center_name, w_center_address
        FROM delar_center
       WHERE center_code = w_center_code;

      BEGIN
         INSERT INTO appauth_report_parameter (app_user_id,
                                               report_name,
                                               parameter_name,
                                               parameter_values)
              VALUES (p_app_user_id,
                      p_report_name,
                      'p_center_name',
                      w_center_name);

         INSERT INTO appauth_report_parameter (app_user_id,
                                               report_name,
                                               parameter_name,
                                               parameter_values)
              VALUES (p_app_user_id,
                      p_report_name,
                      'p_center_address',
                      w_center_address);
      END;
   END IF;


   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_from_date
     INTO w_from_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_from_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_upto_date
     INTO w_upto_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_upto_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_ason_date
     INTO w_ason_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_ason_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   IF w_from_date = w_upto_date AND w_ason_date IS NULL
   THEN
      w_ason_date := w_upto_date;
   END IF;

   IF p_report_name IN ('sales_inventory_balance',
                        'sales_purchasenreturnstmt_details',
                        'sales_purchasenreturn_details',
                        'daywise_purchase_list')
   THEN
      SELECT *
        INTO w_status, w_errm
        FROM fn_run_purchase_report (p_app_user_id, p_report_name);

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      END IF;
   ELSIF p_report_name IN ('sales_invoice',
                           'sales_daywisesales',
                           'sales_and_return_details',
                           'sales_and_return_statement',
                           'sales_profit_and_loss',
                           'sales_details_report')
   THEN
      SELECT *
        INTO w_status, w_errm
        FROM fn_run_sales_report (p_app_user_id, p_report_name);

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      END IF;
   ELSIF p_report_name = 'micfin_monthly_collection_sheet'
   THEN
      SELECT parameter_values
       INTO w_empty_sheet
       FROM appauth_report_parameter
      WHERE     parameter_name = 'p_empty_sheet'
            AND report_name = p_report_name
            AND app_user_id = p_app_user_id;

      SELECT *
        INTO w_status, w_errm
        FROM fn_run_micfin_collection_sheet (w_branch_code,
                                             w_center_code,
                                             w_ason_date,
                                             w_empty_sheet,
                                             p_app_user_id);

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      END IF;
   ELSIF p_report_name IN
            ('micfin_emicollect_report', 'micfin_collectiondetails_report')
   THEN
      SELECT *
        INTO w_status, w_errm
        FROM fn_run_micfin_report (p_app_user_id, p_report_name);

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      END IF;
   ELSIF p_report_name IN ('center_sales_details')
   THEN
      SELECT *
        INTO w_status, w_errm
        FROM fn_run_sales_center_report (p_app_user_id, p_report_name);

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      END IF;
   END IF;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      o_errm := SQLERRM;
      o_status := 'E';
END;
$$;


ALTER FUNCTION public.fn_run_report(p_app_user_id character, p_report_name character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_run_sales_center_report(character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_run_sales_center_report(p_app_user_id character, p_report_name character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                 VARCHAR;
   w_errm                   VARCHAR;
   w_sql_stat               TEXT := '';
   w_center_code            VARCHAR;
   w_from_date              DATE;
   w_upto_date              DATE;
   w_ason_date              DATE;
   w_current_business_day   DATE;
   w_ledger_code            VARCHAR;
   w_invoice_number         VARCHAR;
   w_user_id                VARCHAR;
   w_acc_type_code          VARCHAR;
   w_employee_id            VARCHAR;
   w_client_id              VARCHAR;
   w_supplier_id            VARCHAR;
   w_account_number         VARCHAR;
   w_account_title          VARCHAR;
   w_product_id             VARCHAR;
   w_branch_code            INTEGER;
   w_zero_balance           VARCHAR := 'N';
   w_transfer_tran          VARCHAR := 'N';
   w_closing_balance        NUMERIC (22, 2);
   w_opening_balance        NUMERIC (22, 2);
   w_cash_gl_code           VARCHAR;
   rec_delar_list           RECORD;
   rec_branch_list          RECORD;
   rec_product_list         RECORD;
   w_branch_name            VARCHAR;
   w_branch_address         VARCHAR;
   w_group_id               VARCHAR;
   w_brand_id               VARCHAR;
   w_sales_report_type      VARCHAR;
BEGIN
   DELETE FROM appauth_report_table_tabular
         WHERE app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END
    INTO w_center_code
    FROM appauth_report_parameter
   WHERE     parameter_name = 'p_center_code'
         AND report_name = p_report_name
         AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != ''
             THEN
                cast (parameter_values AS INTEGER)
          END w_branch_code
     INTO w_branch_code
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_branch_code'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_group_id
     INTO w_group_id
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_group_id'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_group_id
     INTO w_brand_id
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_brand_id'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_from_date
     INTO w_from_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_from_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_upto_date
     INTO w_upto_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_upto_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_ason_date
     INTO w_ason_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_ason_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   IF w_from_date = w_upto_date AND w_ason_date IS NULL
   THEN
      w_ason_date := w_upto_date;
   END IF;

   IF p_report_name = 'center_sales_details'
   THEN
      SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_employee_id
        INTO w_employee_id
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_employee_id'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      w_sql_stat :=
         'INSERT INTO appauth_report_table_tabular (report_column1,
                                          report_column2,
                                          report_column3,
                                          report_column4,
                                          report_column5,
                                          report_column6,
                                          report_column7,
                                          report_column8,
                                          report_column9,
                                          report_column10,
                                          report_column11,
                                          report_column12,
                                          report_column13,
                                          report_column14,
                                          report_column15,
                                          report_column16,
                                          report_column17,
                                          report_column18,
                                          report_column19,
                                          report_column20,
                                          report_column21,
                                          report_column22,
                                          report_column23,
                                          report_column24,
                                          report_column25,
                                          report_column26,
                                          report_column27,
                                          report_column28,
                                          report_column29,
                                          report_column30,
                                          report_column31,
                                          report_column32,
                                          report_column33,
                                          report_column34,
                                          report_column35,
                                          report_column36,
                                          report_column37,
                                          report_column38,
                                          report_column39,
                                          report_column40,
                                          report_column41,
                                          report_column42,
                                          report_column43,
                                          report_column44,
                                          report_column45,
                                          report_column46,
                                          app_user_id)
   WITH
      sales_details
      AS
         (SELECT s.branch_code,
                 m.center_code,
                 c.branch_center_code,
                 c.center_name,
                 s.invoice_number,
                 m.invoice_date,
                 s.client_id,
                 m.customer_name,
                 m.customer_phone,
                 m.employee_id,
                 m.total_quantity,
                 m.total_bill_amount,
                 m.bill_amount,
                 m.pay_amount,
                 m.due_amount,
                 m.advance_pay,
                 m.total_discount_amount,
                 s.product_id,s.serial_no,
                 p.product_name || ''('' || p.product_model || '')''
                    product_name,
                 s.quantity,
                 s.purchase_rate,
                 (s.purchase_rate * s.quantity)
                    total_purchase_value,
                 s.product_price
                    sales_rate,
                 s.returned_quantity,
                 s.total_price,
                 (CASE WHEN s.profit_amount > 0 THEN profit_amount ELSE 0 END)
                    profit_amount,
                 (CASE
                     WHEN s.profit_amount < 0 THEN abs (profit_amount)
                     ELSE 0
                  END)
                    loss_amount,
                 s.discount_rate,
                 s.discount_amount
            FROM sales_sales_details s,
                 sales_products p,
                 sales_sales_master m,
                 delar_center c
           WHERE     p.product_id = s.product_id
                 AND s.status <> ''C''
                 AND m.invoice_number = s.invoice_number
                 AND m.branch_code = s.branch_code
                 AND m.center_code = c.center_code ';

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and m.invoice_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and m.branch_code = ' || w_branch_code;
      END IF;

      IF w_client_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and m.client_id = ''' || w_client_id || '''';
      END IF;

      IF w_employee_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and m.employee_id = ''' || w_employee_id || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and m.invoice_date = ''' || w_ason_date || '''';
      END IF;

      w_sql_stat :=
            w_sql_stat
         || '  ),
      sales_summary
      AS
         (  SELECT branch_code,
                   center_code,
                   branch_center_code,
                   center_name,
                   invoice_number,
                   invoice_date,
                   client_id,
                   customer_name,
                   customer_phone,
                   employee_id,
                   total_quantity,
                   total_bill_amount,
                   bill_amount,
                   pay_amount,
                   due_amount,
                   advance_pay,
                   total_discount_amount,
              count (product_id) OVER (PARTITION BY invoice_number)
                 item_count,
              sum (profit_amount) OVER (PARTITION BY invoice_number)
                 total_profit_amount,
              sum (loss_amount) OVER (PARTITION BY invoice_number)
                 total_loss_amount,
              product_id,
              serial_no,
              product_name,
              quantity,
              total_purchase_value,
              sales_rate,
              returned_quantity,
              total_price,
              profit_amount,
              loss_amount,
              discount_amount
              FROM sales_details),
      emi_setup
      AS
         (SELECT DISTINCT e.emi_reference_no,
                 e.emi_serial_number,
                 e.emi_down_amount,
                 e.total_emi_amount,
                 e.emi_inst_amount,
                 e.emi_inst_frequency,
                 e.emi_inst_repay_from_date,
                 e.number_of_installment,
                 e.installment_exp_date,
                 e.emi_rate,
                 e.emi_profit_amount,
                 e.emi_fee_amount,
                 e.emi_ins_rate,
                 e.emi_ins_fee_amount,
                 e.emi_doc_fee_amount
            FROM sales_emi_setup e, sales_summary s
           WHERE e.emi_reference_no=s.invoice_number 
           and emi_cancel_by IS NULL)
     SELECT s.branch_code,
            s.center_code,
            s.branch_center_code,
            s.center_name,
            s.invoice_number,
            to_char(s.invoice_date,''DD-MM-YYYY'') invoice_date,
            s.client_id,
         s.customer_name,
         s.customer_phone,
         s.employee_id,
         s.total_quantity,
         s.total_bill_amount,
         s.bill_amount,
         s.pay_amount,
         s.due_amount,
         s.advance_pay,
         s.total_discount_amount,
         s.item_count,
         (CASE WHEN s.serial_no = 1 THEN serial_no ELSE NULL END)
            rowspan,
         s.total_profit_amount,
         s.total_loss_amount,
         s.product_id,
         s.serial_no,
         s.product_name,
         s.quantity,
         s.total_purchase_value,
         s.sales_rate,
         s.returned_quantity,
         s.total_price,
         s.profit_amount,
         s.loss_amount,
         s.discount_amount,
         e.emi_serial_number,
         e.emi_down_amount,
         s.bill_amount+COALESCE (e.emi_profit_amount,0.00) total_emi_amount,
         e.emi_inst_amount,
         e.emi_inst_frequency,
            to_char(e.emi_inst_repay_from_date,''DD-MM-YYYY'') emi_inst_repay_from_date,
            e.number_of_installment,
            to_char(e.installment_exp_date,''DD-MM-YYYY'') installment_exp_date,
            e.emi_rate,
            e.emi_profit_amount,
            e.emi_fee_amount,
            e.emi_ins_rate,
            e.emi_ins_fee_amount,
            e.emi_doc_fee_amount, '''
         || p_app_user_id
         || '''
       FROM sales_summary s
            FULL OUTER JOIN emi_setup e ON (emi_reference_no = invoice_number)
   ORDER BY invoice_number';

      --RAISE EXCEPTION USING MESSAGE = w_sql_stat;

      EXECUTE w_sql_stat;
   END IF;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      o_errm := SQLERRM;
      o_status := 'E';
END;
$$;


ALTER FUNCTION public.fn_run_sales_center_report(p_app_user_id character, p_report_name character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_run_sales_customer_all_trandetails(character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_run_sales_customer_all_trandetails(p_app_user_id character, p_center_code character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   W_CLIENT_ID                 VARCHAR;
   W_CENTER_CODE               VARCHAR;
   W_CLIENT_NAME               VARCHAR;
   W_INVOICE_DATE              DATE;
   W_INVOICE_NUMBER            VARCHAR;
   W_PRODUCT_NAME              VARCHAR;
   W_PRODUCT_MODEL             VARCHAR;
   W_PRODUCT_QUANTITY          NUMERIC (22, 2) := 0;
   W_PRODUCT_PRICE             NUMERIC (22, 2) := 0;
   W_TOTAL_PRICE               NUMERIC (22, 2) := 0;
   W_PAY_AMOUNT                NUMERIC (22, 2) := 0;
   W_DUE_AMOUNT                NUMERIC (22, 2) := 0;
   W_INSTREPAY_REPAY_AMT       NUMERIC (22, 2) := 0;
   W_INSTREPAY_REPAY_FREQ      VARCHAR;
   W_NOF_INSTALLMENT           NUMERIC (22, 2) := 0;
   W_INSTREPAY_TOT_REPAY_AMT   NUMERIC (22, 2) := 0;
   W_DEPOSIT_DATE              DATE;
   W_DEPOSIT_AMOUNT            NUMERIC (22, 2) := 0;
   W_DEPOSIT_MEMO_NUM          VARCHAR;
   W_DPSRCV_DATE               DATE;
   W_DPSRCV_AMOUNT             NUMERIC (22, 2) := 0;
   W_DPSRCV_MEMO_NUM           VARCHAR;
   w_status                    VARCHAR := 'S';
   o_errm                      VARCHAR := '';
BEGIN
   DELETE FROM report_tran_detail
         WHERE app_user_id = p_app_user_id;

   INSERT INTO report_tran_detail
      (WITH
          CLIENT
          AS
             (SELECT ROW_NUMBER ()
                        OVER (PARTITION BY CLIENT_ID ORDER BY CLIENT_ID)
                        ROW_NUMBER,
                     CENTER_CODE,
                     CENTER_NAME,
                     CLIENT_ID,
                     CLIENT_NAME
                FROM SALES_CLIENTS, SALES_CNTREINFO_MODEL
               WHERE     CLIENT_CENTER_CODE = CENTER_CODE
                     AND CLIENT_CENTER_CODE = P_CENTER_CODE),
          SALES
          AS
             (  SELECT ROW_NUMBER ()
                          OVER (PARTITION BY CUSTOMER_ID ORDER BY CUSTOMER_ID)
                          ROW_NUMBER,
                       CUSTOMER_ID
                          CLIENT_ID,
                       CLIENT.CLIENT_NAME
                          CLIENT_NAME,
                       CLIENT_CENTER_CODE
                          CENTER_CODE,
                       CLIENT.CENTER_NAME
                          CENTER_NAME,
                       INVOICE_DATE,
                       INVOICE_NUMBER,
                       STRING_AGG (DISTINCT PRODUCT_NAME, ',')
                          PRODUCT_NAME,
                       STRING_AGG (DISTINCT PRODUCT_MODEL, ',')
                          PRODUCT_MODEL,
                       STRING_AGG (
                          TO_CHAR (COALESCE (PRODUCT_QUANTITY, 1), '9'),
                          ',')
                          PRODUCT_QUANTITY,
                       STRING_AGG (
                          TO_CHAR (COALESCE (PRODUCT_PRICE, 1), '99999'),
                          ',')
                          PRODUCT_PRICE,
                       (SELECT bill_amount
                          FROM SALES_SALES_MASTER m
                         WHERE m.invoice_number = g.INVOICE_NUMBER)
                          TOTAL_PRICE,
                       (SELECT PAY_AMOUNT
                          FROM SALES_SALES_MASTER m
                         WHERE m.invoice_number = g.INVOICE_NUMBER)
                          PAY_AMOUNT,
                       (SELECT DUE_AMOUNT
                          FROM SALES_SALES_MASTER m
                         WHERE m.invoice_number = g.INVOICE_NUMBER)
                          DUE_AMOUNT,
                       INSTREPAY_REPAY_AMT,
                       INSTREPAY_REPAY_FREQ,
                       NOF_INSTALLMENT,
                       INSTREPAY_TOT_REPAY_AMT
                  FROM (  SELECT CUSTOMER_ID,
                                 CLIENT_CENTER_CODE,
                                 CLIENT_NAME
                                    CLIENT_NAME,
                                 INVOICE_DATE,
                                 A.INVOICE_NUMBER,
                                 PRODUCT_NAME,
                                 PRODUCT_MODEL,
                                 QUANTITY
                                    PRODUCT_QUANTITY,
                                 PRODUCT_PRICE,
                                 PAY_AMOUNT
                                    PAY_AMOUNT,
                                 DUE_AMOUNT
                                    DUE_AMOUNT,
                                 (SELECT INSTREPAY_REPAY_AMT
                                    FROM SALES_EMISETUP_MODEL A
                                   WHERE A.SALES_INV_NUM = E.INVOICE_NUMBER)
                                    INSTREPAY_REPAY_AMT,
                                 (SELECT CASE
                                            WHEN TRIM (INSTREPAY_REPAY_FREQ) =
                                                 'W'
                                            THEN
                                               'WEEKLY'
                                            WHEN TRIM (INSTREPAY_REPAY_FREQ) =
                                                 'M'
                                            THEN
                                               'MONTHLY'
                                            ELSE
                                               'YEARLY'
                                         END
                                   FROM SALES_EMISETUP_MODEL A
                                  WHERE A.SALES_INV_NUM = E.INVOICE_NUMBER)
                                    INSTREPAY_REPAY_FREQ,
                                 (SELECT INSTREPAY_NUM_OF_INSTALLMENT
                                    FROM SALES_EMISETUP_MODEL A
                                   WHERE A.SALES_INV_NUM = E.INVOICE_NUMBER)
                                    NOF_INSTALLMENT,
                                 (SELECT INSTREPAY_TOT_REPAY_AMT
                                    FROM SALES_EMISETUP_MODEL A
                                   WHERE A.SALES_INV_NUM = E.INVOICE_NUMBER)
                                    INSTREPAY_TOT_REPAY_AMT
                            FROM SALES_PRODUCTS D,
                                 SALES_SALES_MASTER A,
                                 SALES_SALES_DETAILS E,
                                 SALES_CLIENTS B
                           WHERE     A.INVOICE_NUMBER = E.INVOICE_NUMBER
                                 --   AND SALES_TYPE = 'EMI'
                                 --    AND TRAN_TYPE = 'SL'
                                 AND A.CUSTOMER_ID = B.CLIENT_ID
                                 AND CLIENT_CENTER_CODE = P_CENTER_CODE
                                 AND E.PRODUCT_ID = D.PRODUCT_ID
                        ORDER BY E.PRODUCT_ID ASC,
                                 PRODUCT_NAME ASC,
                                 PRODUCT_MODEL ASC) G,
                       CLIENT
                 WHERE     G.CUSTOMER_ID = CLIENT.CLIENT_ID
                       AND G.CLIENT_CENTER_CODE = CLIENT.CENTER_CODE
              GROUP BY CUSTOMER_ID,
                       CLIENT_CENTER_CODE,
                       INVOICE_DATE,
                       INSTREPAY_REPAY_AMT,
                       INSTREPAY_REPAY_FREQ,
                       NOF_INSTALLMENT,
                       INSTREPAY_TOT_REPAY_AMT,
                       CLIENT.CLIENT_NAME,
                       CLIENT.CENTER_NAME,
                       INVOICE_NUMBER),
          EMI_RECEIVE
          AS
             (SELECT ROW_NUMBER ()
                     OVER (PARTITION BY SALES_EMIRCV_MODEL.CLIENT_ID
                           ORDER BY SALES_EMIRCV_MODEL.CLIENT_ID) ROW_NUMBER,
                     SALES_EMIRCV_MODEL.CENTER_CODE,
                     CLIENT.CENTER_NAME CENTER_NAME,
                     SALES_EMIRCV_MODEL.CLIENT_ID CLIENT_ID,
                     CLIENT.CLIENT_NAME CLIENT_NAME,
                     INSTRCV_INV_NUMBER,
                     INSTRCV_ENTRY_DATE,
                     INSTRCV_INSTLMNT,
                     INSTRCV_REF_NUM
                FROM SALES_EMIRCV_MODEL, CLIENT
               WHERE     SALES_EMIRCV_MODEL.CENTER_CODE = P_CENTER_CODE
                     AND CLIENT.CENTER_CODE = SALES_EMIRCV_MODEL.CENTER_CODE
                     AND SALES_EMIRCV_MODEL.CLIENT_ID = CLIENT.CLIENT_ID),
          DEPRCV
          AS
             (SELECT ROW_NUMBER ()
                     OVER (PARTITION BY SALES_DEPRCV_MODEL.CLIENT_ID
                           ORDER BY SALES_DEPRCV_MODEL.CLIENT_ID) ROW_NUMBER,
                     SALES_DEPRCV_MODEL.CENTER_CODE CENTER_CODE,
                     CLIENT.CENTER_NAME CENTER_NAME,
                     SALES_DEPRCV_MODEL.CLIENT_ID CLIENT_ID,
                     CLIENT.CLIENT_NAME CLIENT_NAME,
                     DEPOSIT_DATE,
                     DEPOSIT_AMOUNT,
                     DEPOSIT_MEMO_NUM
                FROM SALES_DEPRCV_MODEL, CLIENT
               WHERE     SALES_DEPRCV_MODEL.CENTER_CODE = P_CENTER_CODE
                     AND CLIENT.CENTER_CODE = SALES_DEPRCV_MODEL.CENTER_CODE
                     AND SALES_DEPRCV_MODEL.CLIENT_ID = CLIENT.CLIENT_ID),
          DPSRCV
          AS
             (SELECT ROW_NUMBER ()
                     OVER (PARTITION BY SALES_DPS_RECEIVE.CLIENT_ID
                           ORDER BY SALES_DPS_RECEIVE.CLIENT_ID) ROW_NUMBER,
                     SALES_DPS_RECEIVE.CENTER_CODE CENTER_CODE,
                     SALES_DPS_RECEIVE.CLIENT_ID CLIENT_ID,
                     CLIENT.CENTER_NAME CENTER_NAME,
                     CLIENT.CLIENT_NAME CLIENT_NAME,
                     DPSRCV_DATE,
                     DPSRCV_AMOUNT,
                     DPSRCV_MEMO_NUM
                FROM SALES_DPS_RECEIVE, CLIENT
               WHERE     SALES_DPS_RECEIVE.CENTER_CODE = P_CENTER_CODE
                     AND CLIENT.CENTER_CODE = SALES_DPS_RECEIVE.CENTER_CODE
                     AND SALES_DPS_RECEIVE.CLIENT_ID = CLIENT.CLIENT_ID)
       SELECT COALESCE (CLIENT.CENTER_CODE,
                        SALES.CENTER_CODE,
                        EMI_RECEIVE.CENTER_CODE,
                        DPSRCV.CENTER_CODE,
                        DEPRCV.CENTER_CODE) CENTER_CODE,
              COALESCE (CLIENT.CENTER_NAME,
                        SALES.CENTER_NAME,
                        EMI_RECEIVE.CENTER_NAME,
                        DPSRCV.CENTER_NAME,
                        DEPRCV.CENTER_NAME) CENTER_NAME,
              COALESCE (CLIENT.CLIENT_ID,
                        SALES.CLIENT_ID,
                        EMI_RECEIVE.CLIENT_ID,
                        DPSRCV.CLIENT_ID,
                        DEPRCV.CLIENT_ID) CLIENT_ID,
              COALESCE (CLIENT.CLIENT_NAME,
                        SALES.CLIENT_NAME,
                        EMI_RECEIVE.CLIENT_NAME,
                        DPSRCV.CLIENT_NAME,
                        DEPRCV.CLIENT_NAME) CLIENT_NAME,
              INVOICE_DATE,
              COALESCE (INVOICE_NUMBER, ''),
              COALESCE (PRODUCT_NAME, ''),
              COALESCE (PRODUCT_MODEL, ''),
              COALESCE (PRODUCT_QUANTITY, ''),
              COALESCE (PRODUCT_PRICE, ''),
              COALESCE (TOTAL_PRICE, 0.00),
              COALESCE (PAY_AMOUNT, 0.00),
              COALESCE (DUE_AMOUNT, 0.00),
              COALESCE (INSTREPAY_REPAY_AMT, 0),
              COALESCE (INSTREPAY_REPAY_FREQ, ''),
              COALESCE (NOF_INSTALLMENT, 0),
              COALESCE (INSTREPAY_TOT_REPAY_AMT, 0),
              COALESCE (INSTRCV_INV_NUMBER, ''),
              INSTRCV_ENTRY_DATE,
              COALESCE (INSTRCV_INSTLMNT, 0),
              COALESCE (INSTRCV_REF_NUM, ''),
              DEPOSIT_DATE,
              COALESCE (DEPOSIT_AMOUNT, 0),
              COALESCE (DEPOSIT_MEMO_NUM, ''),
              DPSRCV_DATE,
              COALESCE (DPSRCV_AMOUNT, 0),
              COALESCE (DPSRCV_MEMO_NUM, ''),
              COALESCE (P_APP_USER_ID, ''),
              current_date
         FROM CLIENT
              FULL OUTER JOIN SALES
                 ON (    CLIENT.CENTER_CODE = SALES.CENTER_CODE
                     AND CLIENT.CLIENT_ID = SALES.CLIENT_ID
                     AND CLIENT.ROW_NUMBER = SALES.ROW_NUMBER)
              FULL OUTER JOIN EMI_RECEIVE
                 ON (    EMI_RECEIVE.CENTER_CODE = CLIENT.CENTER_CODE
                     AND EMI_RECEIVE.CLIENT_ID = CLIENT.CLIENT_ID
                     AND EMI_RECEIVE.ROW_NUMBER = CLIENT.ROW_NUMBER)
              FULL OUTER JOIN DPSRCV
                 ON (    DPSRCV.CENTER_CODE = CLIENT.CENTER_CODE
                     AND DPSRCV.CLIENT_ID = CLIENT.CLIENT_ID
                     AND DPSRCV.ROW_NUMBER = CLIENT.ROW_NUMBER)
              FULL OUTER JOIN DEPRCV
                 ON (    DEPRCV.CENTER_CODE = CLIENT.CENTER_CODE
                     AND DEPRCV.CLIENT_ID = CLIENT.CLIENT_ID
                     AND DEPRCV.ROW_NUMBER = CLIENT.ROW_NUMBER));

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_run_sales_customer_all_trandetails(p_app_user_id character, p_center_code character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_run_sales_report(character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_run_sales_report(p_app_user_id character, p_report_name character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                 VARCHAR;
   w_errm                   VARCHAR;
   w_sql_stat               TEXT := '';
   w_center_code            VARCHAR;
   w_from_date              DATE;
   w_upto_date              DATE;
   w_ason_date              DATE;
   w_current_business_day   DATE;
   w_ledger_code            VARCHAR;
   w_invoice_number         VARCHAR;
   w_user_id                VARCHAR;
   w_acc_type_code          VARCHAR;
   w_employee_id            VARCHAR;
   w_client_id              VARCHAR;
   w_supplier_id            VARCHAR;
   w_account_number         VARCHAR;
   w_account_title          VARCHAR;
   w_product_id             VARCHAR;
   w_branch_code            INTEGER;
   w_zero_balance           VARCHAR := 'N';
   w_transfer_tran          VARCHAR := 'N';
   w_closing_balance        NUMERIC (22, 2);
   w_opening_balance        NUMERIC (22, 2);
   w_cash_gl_code           VARCHAR;
   rec_delar_list           RECORD;
   rec_branch_list          RECORD;
   rec_product_list         RECORD;
   w_branch_name            VARCHAR;
   w_branch_address         VARCHAR;
   w_group_id               VARCHAR;
   w_brand_id               VARCHAR;
   w_sales_report_type      VARCHAR;
BEGIN
   DELETE FROM appauth_report_table_tabular
         WHERE app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END
    INTO w_center_code
    FROM appauth_report_parameter
   WHERE     parameter_name = 'p_center_code'
         AND report_name = p_report_name
         AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != ''
             THEN
                cast (parameter_values AS INTEGER)
          END w_branch_code
     INTO w_branch_code
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_branch_code'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_group_id
     INTO w_group_id
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_group_id'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_group_id
     INTO w_brand_id
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_brand_id'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_from_date
     INTO w_from_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_from_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_upto_date
     INTO w_upto_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_upto_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   SELECT CASE
             WHEN parameter_values != '' THEN cast (parameter_values AS DATE)
          END p_ason_date
     INTO w_ason_date
     FROM appauth_report_parameter
    WHERE     parameter_name = 'p_ason_date'
          AND report_name = p_report_name
          AND app_user_id = p_app_user_id;

   IF w_from_date = w_upto_date AND w_ason_date IS NULL
   THEN
      w_ason_date := w_upto_date;
   END IF;

   IF p_report_name = 'sales_invoice'
   THEN
      SELECT parameter_values p_invoice_number
        INTO w_invoice_number
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_invoice_number'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      w_sql_stat :=
         'INSERT INTO appauth_report_table_tabular (report_column1,
                                        report_column2,
                                        report_column3,
                                        report_column4,
                                        report_column5,
                                        report_column6,
                                        report_column7,
                                        report_column8,
                                        report_column9,
                                        app_user_id)
   SELECT ROW_NUMBER () OVER (ORDER BY d.app_data_time) ROW_NUMBER,
          p.product_name||'' (''||COALESCE (p.product_model, '''')||'')'',
          p.product_model,
          d.quantity,
          d.product_price,
          m.total_discount_amount,
          m.employee_id executive_phone,
          d.quantity * d.product_price total_amount,
          invoice_comments,
         ''' || p_app_user_id || '''
     FROM sales_sales_master m, sales_sales_details d, sales_products p
    WHERE     m.invoice_number = d.invoice_number
          AND p.product_id = d.product_id ';

      IF w_invoice_number IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and m.invoice_number = '''
            || w_invoice_number
            || '''';
      END IF;

      --RAISE EXCEPTION USING MESSAGE = w_sql_stat;

      EXECUTE w_sql_stat;
   ELSIF p_report_name = 'sales_and_return_details'
   THEN
      SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_account_number
        INTO w_account_number
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_account_number'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      IF w_account_number IS NOT NULL
      THEN
         SELECT DISTINCT client_id, account_title
           INTO w_client_id, w_account_title
           FROM finance_accounts_balance
          WHERE account_number = w_account_number;
      END IF;

      SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_product_id
        INTO w_product_id
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_product_id'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      w_sql_stat :=
            'INSERT INTO appauth_report_table_tabular (report_column1,
                                        report_column2,
                                        report_column3,
                                        report_column4,
                                        report_column5,
                                        report_column6,
                                        report_column7,
                                        report_column8,
                                        report_column9,
                                        report_column10,
                                        report_column11,
                                        report_column12,
                                        report_column13,
                                        report_column14,
                                        report_column15,
                                        app_user_id)
  SELECT c.client_id,
         c.client_name,
         product_id,
         product_name,
         transaction_date,
         sales_quantity,
         sales_rate,
         sales_total_price,
         sales_discount_amount,
         sales_net_price,
         returned_quantity,
         return_rate,
         return_total_price,
         (case when (ROW_NUMBER ()
         OVER (PARTITION BY c.client_id, transaction_date
               ORDER BY c.client_name, transaction_date, product_name, row_serial_id))=1 then ''1'' else '''' end)
            row_serial,
         count (c.client_id) OVER (PARTITION BY c.client_id, transaction_date)
            total_row,
         '''
         || p_app_user_id
         || '''
    FROM (SELECT COALESCE (s.client_id, r.client_id) client_id,
                 COALESCE (s.product_id, r.product_id) product_id,
                    COALESCE (s.product_name, r.product_name)
                 || ''(''
                 || COALESCE (s.product_model, r.product_model, '' '')
                 || '')'' product_name,
                 COALESCE (s.invoice_date, r.return_date) transaction_date,
                 COALESCE (s.quantity, 0) sales_quantity,
                 COALESCE (s.unit_price, 0) sales_rate,
                 COALESCE (s.total_price, 0) sales_total_price,
                 COALESCE (s.discount_amount, 0) sales_discount_amount,
                 COALESCE (s.net_price, 0) sales_net_price,
                 COALESCE (r.returned_quantity, 0) returned_quantity,
                 COALESCE (r.unit_price, 0) return_rate,
                 COALESCE (r.net_price, 0) return_total_price,
                 s.row_serial_id
            FROM (SELECT d.client_id,
                         p.product_id,
                         m.invoice_date,
                         p.product_model,
                         p.product_name,
                         d.quantity,
                         d.product_price unit_price,
                         d.total_price,
                         d.discount_amount,
                         (d.total_price - d.discount_amount) net_price,
                         d.id row_serial_id
                    FROM sales_sales_details d,
                         sales_products p,
                         sales_sales_master m
                   WHERE     d.product_id = p.product_id
                         AND d.invoice_number = m.invoice_number ';

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and m.invoice_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and m.branch_code = ' || w_branch_code;
      END IF;

      IF w_product_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and d.product_id = ''' || w_product_id || '''';
      END IF;

      IF w_group_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.product_group = ''' || w_group_id || '''';
      END IF;

      IF w_brand_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.brand_id = ''' || w_brand_id || '''';
      END IF;

      IF w_client_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and d.client_id = ''' || w_client_id || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and m.invoice_date = ''' || w_ason_date || '''';
      END IF;


      w_sql_stat :=
            w_sql_stat
         || '   ) s
                 FULL OUTER JOIN
                 (SELECT d.client_id,
                         p.product_id,
                         d.return_date,
                         p.product_model,
                         p.product_name,
                         d.returned_quantity,
                         round((d.return_amount / d.returned_quantity),0) unit_price,
                         d.return_amount net_price
                    FROM sales_sales_return_details d, sales_products p
                   WHERE d.product_id = p.product_id ';

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and d.return_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and d.branch_code = ' || w_branch_code;
      END IF;

      IF w_product_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and d.product_id = ''' || w_product_id || '''';
      END IF;

      IF w_group_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.product_group = ''' || w_group_id || '''';
      END IF;

      IF w_brand_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.brand_id = ''' || w_brand_id || '''';
      END IF;

      IF w_client_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and d.client_id = ''' || w_client_id || '''';
      END IF;


      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and d.return_date = ''' || w_ason_date || '''';
      END IF;

      w_sql_stat := w_sql_stat || '    ) r
                    ON (    s.client_id = r.client_id
                        AND s.product_id = r.product_id
                        AND s.invoice_date = r.return_date)) s,
         sales_clients c
   WHERE s.client_id = c.client_id
ORDER BY c.client_name, transaction_date, product_name, row_serial_id';

      ---RAISE EXCEPTION USING MESSAGE = w_sql_stat;

      EXECUTE w_sql_stat;
   ELSIF p_report_name = 'sales_and_return_statement'
   THEN
      SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_account_number
        INTO w_account_number
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_account_number'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      IF w_account_number IS NOT NULL
      THEN
         SELECT DISTINCT client_id, account_title
           INTO w_client_id, w_account_title
           FROM finance_accounts_balance
          WHERE account_number = w_account_number;
      END IF;

      SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_account_number
        INTO w_product_id
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_product_id'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      SELECT w_status, w_errm
        INTO w_status, w_errm
        FROM fn_finance_acbal_hist (w_account_number, w_from_date);

      BEGIN
         INSERT INTO appauth_report_parameter (app_user_id,
                                               report_name,
                                               parameter_name,
                                               parameter_values)
              VALUES (p_app_user_id,
                      p_report_name,
                      'p_customer_name',
                      w_account_title);
      END;

      w_sql_stat :=
                      'INSERT INTO appauth_report_table_tabular (report_column1,
                                        report_column2,
                                        report_column3,
                                        report_column4,
                                        report_column5,
                                        report_column6,
                                        report_column7,
                                        report_column8,
                                        report_column9,
                                        report_column10,
                                        report_column11,
                                        report_column12,
                                        report_column13,
                                        report_column14,
                                        report_column15,
                                        report_column16,
                                        report_column17,
                                        report_column18,
                                        app_user_id)
     SELECT '''
                   || w_client_id
                   || ''',
            '''
                   || w_account_title
                   || ''',
            product_id,
            product_name,
            transaction_date,
            COALESCE (sales_quantity,0) sales_quantity,
            COALESCE (sales_rate,0.00) sales_rate,
            COALESCE (sales_total_price,0.00) sales_total_price,
            COALESCE (sales_discount_amount,0.00) sales_discount_amount,
            COALESCE (sales_net_price,0.00) sales_net_price,
            COALESCE (returned_quantity,0) returned_quantity,
            COALESCE (return_rate,0.00) return_rate,
            COALESCE (return_total_price,0.00) return_total_price,
            row_serial,total_row,
            (CASE WHEN row_serial=''1'' THEN credit_balance ELSE 0 END) credit_balance,
            (CASE WHEN row_serial=''1'' THEN debit_balance ELSE 0 END) debit_balance,
            account_balance,
            app_user_id
            FROM (
     SELECT product_id,
            COALESCE (product_name,transaction_narration) product_name,
            transaction_date,transaction_narration,
            sales_quantity,
            sales_rate,
            sales_total_price,
            sales_discount_amount,
            sales_net_price,
            returned_quantity,
            return_rate,
            return_total_price,
            (CASE
                WHEN (ROW_NUMBER ()
                      OVER (
                         PARTITION BY transaction_date
                         ORDER BY transaction_date, product_name)) =
                     1
                THEN
                   ''1''
                ELSE
                   ''''
             END) row_serial,
            count (transaction_date)
               OVER (PARTITION BY transaction_date) total_row,
            credit_balance,
            debit_balance,
            account_balance,
         '''
                   || p_app_user_id
                   || ''' app_user_id
       FROM (SELECT client_id,
                    product_id,
                    product_name,
                    COALESCE (s.transaction_date, t.transaction_date)
                       transaction_date,transaction_narration,
                    sales_quantity,
                    sales_rate,
                    sales_total_price,
                    sales_discount_amount,
                    sales_net_price,
                    returned_quantity,
                    return_rate,
                    return_total_price,
                    credit_balance,
                    debit_balance,
                    account_balance
               FROM (SELECT COALESCE (s.client_id, r.client_id)
                               client_id,
                            COALESCE (s.product_id, r.product_id)
                               product_id,
                               COALESCE (s.product_name, r.product_name)
                            || ''(''
                            || COALESCE (s.product_model, r.product_model, '' '')
                            || '')''
                               product_name,
                            COALESCE (s.invoice_date, r.return_date)
                               transaction_date,
                            COALESCE (s.quantity, 0)
                               sales_quantity,
                            COALESCE (s.unit_price, 0)
                               sales_rate,
                            COALESCE (s.total_price, 0)
                               sales_total_price,
                            COALESCE (s.discount_amount, 0)
                               sales_discount_amount,
                            COALESCE (s.net_price, 0)
                               sales_net_price,
                            COALESCE (r.returned_quantity, 0)
                               returned_quantity,
                            COALESCE (r.unit_price, 0)
                               return_rate,
                            COALESCE (r.net_price, 0)
                               return_total_price
                       FROM (SELECT d.client_id,
                                    p.product_id,
                                    m.invoice_date,
                                    p.product_model,
                                    p.product_name,
                                    d.quantity,
                                    d.product_price unit_price,
                                    d.total_price,
                                    d.discount_amount,
                                    (d.total_price - d.discount_amount) net_price
                               FROM sales_sales_details d,
                                    sales_products p,
                                    sales_sales_master m
                              WHERE     d.product_id = p.product_id
                                    AND d.invoice_number = m.invoice_number
                                    and m.status<>''C'' 
                                    and d.client_id='''
                   || w_client_id
                   || ''' and m.invoice_date between '''
                   || w_from_date
                   || ''' and '''
                   || w_upto_date
                   || ''') s
                            FULL OUTER JOIN
                            (SELECT d.client_id,
                                    p.product_id,
                                    d.return_date,
                                    p.product_model,
                                    p.product_name,
                                    d.returned_quantity,
                                    round (
                                       (d.return_amount / d.returned_quantity),
                                       0) unit_price,
                                    d.return_amount net_price
                               FROM sales_sales_return_details d,
                                    sales_products p
                              WHERE d.product_id = p.product_id and d.client_id='''
                   || w_client_id
                   || ''' and d.return_date between '''
                   || w_from_date
                   || ''' and '''
                   || w_upto_date
                   || ''') r
                               ON (    s.client_id = r.client_id
                                   AND s.product_id = r.product_id
                                   AND s.invoice_date = r.return_date)) S
                    FULL OUTER JOIN
                    (SELECT transaction_date,transaction_narration,
                            credit_balance,
                            debit_balance,
                            SUM (credit_balance - debit_balance)
                               OVER (ORDER BY serial_number) account_balance
                       FROM (SELECT 1  serial_number,
                                    '''
                   || w_from_date
                 - 1
              || ''' transaction_date,''Opening Balance'' transaction_narration,
                                    (CASE
                                        WHEN o_account_balance > 0
                                        THEN
                                           o_account_balance
                                        ELSE
                                           0
                                     END) credit_balance,
                                    (CASE
                                        WHEN o_account_balance < 0
                                        THEN
                                           abs (o_account_balance)
                                        ELSE
                                           0
                                     END) debit_balance
                               FROM fn_finance_get_ason_acbal ('''
              || w_account_number
              || ''', '''
              || w_from_date
            - 1
         || ''')
                             UNION ALL
                               SELECT   (ROW_NUMBER ()
                                            OVER (ORDER BY transaction_date))
                                      + 1 serial_number,
                                      transaction_date,STRING_AGG (transaction_narration, '','') transaction_narration,
                                      sum (credit_balance) credit_balance,
                                      sum (debit_balance) debit_balance
                                 FROM (SELECT transaction_date,
                                              transaction_narration,
                                              (CASE
                                                  WHEN tran_debit_credit = ''C''
                                                  THEN
                                                     tran_amount
                                                  ELSE
                                                     0
                                               END) credit_balance,
                                              (CASE
                                                  WHEN tran_debit_credit = ''D''
                                                  THEN
                                                     tran_amount
                                                  ELSE
                                                     0
                                               END) debit_balance
                                         FROM finance_transaction_details
                                        WHERE     account_number =
                                                  '''
         || w_account_number
         || '''
                                              AND cancel_by IS NULL
                                              AND transaction_date BETWEEN '''
         || w_from_date
         || '''
                                                                       AND   '''
         || w_upto_date
         || ''') t
                             GROUP BY transaction_date) a
                      WHERE serial_number >= 1) T
                       ON (T.transaction_date = S.transaction_date)) s
   ORDER BY transaction_date, product_name) T';

      ---RAISE EXCEPTION USING MESSAGE = w_sql_stat;

      EXECUTE w_sql_stat;
   ELSIF p_report_name = 'sales_daywisesales'
   THEN
      SELECT CASE WHEN parameter_values != '' THEN parameter_values END
       INTO w_product_id
       FROM appauth_report_parameter
      WHERE     parameter_name = 'p_product_id'
            AND report_name = p_report_name
            AND app_user_id = p_app_user_id;


      w_sql_stat :=
         'INSERT INTO appauth_report_table_tabular (report_column1,
                                        report_column2,
                                        report_column3,
                                        report_column4,
                                        report_column5,
                                        report_column6,
                                        report_column7,
                                        report_column8,
                                        report_column9,
                                        report_column10,
                                        app_user_id)
   SELECT ROW_NUMBER () OVER (ORDER BY m.invoice_date, p.product_name)
             ROW_NUMBER,
          d.product_id,
          TO_CHAR(m.invoice_date ,''mm/dd/yyyy''),
          p.product_name,
          p.product_model,
          g.group_name,
          d.product_price,
          d.quantity,
          d.total_price,
          d.discount_amount, ''' || p_app_user_id || '''
     FROM sales_products p,
          sales_sales_master m,
          sales_sales_details d,
          sales_products_group g
    WHERE     m.invoice_number = d.invoice_number
          AND p.product_id = d.product_id
          AND g.group_id = p.product_group ';

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and m.invoice_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and m.branch_code = ' || w_branch_code;
      END IF;

      IF w_group_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and g.group_id = ''' || w_group_id || '''';
      END IF;

      IF w_product_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.product_id = ''' || w_product_id || '''';
      END IF;

      IF w_group_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.product_group = ''' || w_group_id || '''';
      END IF;

      IF w_brand_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.brand_id = ''' || w_brand_id || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and m.invoice_date = ''' || w_ason_date || '''';
      END IF;

      w_sql_stat := w_sql_stat || ' order by m.invoice_date, p.product_name';

      --RAISE EXCEPTION USING MESSAGE = w_sql_stat;
      EXECUTE w_sql_stat;
   ELSIF p_report_name = 'sales_details_report'
   THEN
      SELECT CASE WHEN parameter_values != '' THEN parameter_values END p_invoice_number
        INTO w_invoice_number
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_invoice_number'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      SELECT CASE WHEN parameter_values != '' THEN parameter_values END sales_summary_type
        INTO w_sales_report_type
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_sales_report_type'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      SELECT CASE WHEN parameter_values != '' THEN parameter_values END w_account_number
        INTO w_account_number
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_account_number'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      IF w_account_number IS NOT NULL
      THEN
         SELECT DISTINCT client_id, account_title
           INTO w_client_id, w_account_title
           FROM finance_accounts_balance
          WHERE account_number = w_account_number;
      END IF;

      SELECT CASE WHEN parameter_values != '' THEN parameter_values END product_id
        INTO w_product_id
        FROM appauth_report_parameter
       WHERE     parameter_name = 'p_product_id'
             AND report_name = p_report_name
             AND app_user_id = p_app_user_id;

      w_sql_stat :=
         'INSERT INTO appauth_report_table_tabular (report_column1,
                                          report_column2,
                                          report_column3,
                                          report_column4,
                                          report_column5,
                                          report_column6,
                                          report_column7,
                                          report_column8,
                                          report_column9,
                                          report_column10,
                                          app_user_id)
   WITH
      sales_details
      AS
         (SELECT s.branch_code,
                 s.center_code,
                 s.invoice_number,
                 m.invoice_date,
                 s.client_id,
                 m.customer_name,
                 s.product_id,
                 p.product_name || ''('' || p.product_model || '')''
                    product_name,
                 s.purchase_rate,
                 (s.purchase_rate*s.quantity) total_purchase_value,
                 s.product_price,
                 s.quantity,
                 s.returned_quantity,
                 s.total_price,
                 (CASE WHEN s.profit_amount > 0 THEN profit_amount ELSE 0 END)
                    profit_amount,
                 (CASE
                     WHEN s.profit_amount < 0 THEN abs (profit_amount)
                     ELSE 0
                  END)
                    loss_amount,
                 s.discount_rate,
                 s.discount_amount,
                 s.status
            FROM sales_sales_details s,
                 sales_products p,
                 sales_sales_master m
           WHERE     p.product_id = s.product_id
                 AND s.status <> ''C''
                 AND m.invoice_number = s.invoice_number
                 AND m.branch_code = s.branch_code ';

      IF w_invoice_number IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and m.invoice_number = '''
            || w_invoice_number
            || '''';
      END IF;

      IF w_branch_code IS NOT NULL
      THEN
         w_sql_stat := w_sql_stat || ' and m.branch_code = ' || w_branch_code;
      END IF;

      IF w_center_code IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and s.center_code = ''' || w_center_code || '''';
      END IF;

      IF w_product_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and s.product_id = ''' || w_product_id || '''';
      END IF;

      IF w_group_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.product_group = ''' || w_group_id || '''';
      END IF;

      IF w_brand_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and p.brand_id = ''' || w_brand_id || '''';
      END IF;

      IF w_client_id IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and s.client_id = ''' || w_client_id || '''';
      END IF;

      IF w_ason_date IS NOT NULL
      THEN
         w_sql_stat :=
            w_sql_stat || ' and m.invoice_date = ''' || w_ason_date || '''';
      END IF;

      IF w_from_date IS NOT NULL AND w_upto_date IS NOT NULL
      THEN
         w_sql_stat :=
               w_sql_stat
            || ' and m.invoice_date between '''
            || w_from_date
            || ''' and '''
            || w_upto_date
            || '''';
      END IF;

      IF w_sales_report_type = 'PR'
      THEN
         -- Product wise profit and loss
         w_sql_stat := w_sql_stat || ' )
     SELECT product_name,
			sum(total_purchase_value) total_purchase_value,
			sum(product_price) sales_price,
			sum(quantity) quantity,
			sum(returned_quantity) returned_quantity ,
			sum(total_price) total_price,
			sum(discount_amount) discount_amount,
            sum (purchase_rate) profit_amount,
            sum (loss_amount) loss_amount,
            sum (profit_amount - loss_amount) net_profit_loss,
             ''' || p_app_user_id || ''' app_user_id
       FROM sales_details
   GROUP BY product_name
   ORDER BY product_name ';
      ELSIF w_sales_report_type = 'DT'
      THEN
         -- Product wise profit and loss
         w_sql_stat := w_sql_stat || ' )
     SELECT TO_CHAR(invoice_date,''DD-MM-YYYY''),
			sum(total_purchase_value) total_purchase_value,
			sum(product_price) sales_price,
			sum(quantity) quantity,
			sum(returned_quantity) returned_quantity,
			sum(total_price) total_price,
			sum(discount_amount) discount_amount,
            sum (profit_amount) profit_amount,
            sum (loss_amount) loss_amount,
            sum (profit_amount - loss_amount) net_profit_loss,
             ''' || p_app_user_id || ''' app_user_id
       FROM sales_details
   GROUP BY invoice_date
   ORDER BY invoice_date ';
      ELSIF w_sales_report_type = 'CS'
      THEN
         -- Product wise profit and loss
         w_sql_stat := w_sql_stat || ' )
     SELECT customer_name,
			sum(total_purchase_value) total_purchase_value,
			sum(product_price) sales_price,
			sum(quantity) quantity,
			sum(returned_quantity) returned_quantity,
			sum(total_price) total_price,
			sum(discount_amount) discount_amount,
            sum (profit_amount) profit_amount,
            sum (loss_amount) loss_amount,
            sum (profit_amount - loss_amount) net_profit_loss,
             ''' || p_app_user_id || ''' app_user_id
       FROM sales_details
   GROUP BY customer_name
   ORDER BY customer_name ';
      ELSIF w_sales_report_type = 'BR'
      THEN
         -- Product wise profit and loss
         w_sql_stat :=
               w_sql_stat
            || ' )
     SELECT (SELECT branch_name from appauth_branch b where b.branch_code=s.branch_code),
			sum(total_purchase_value) total_purchase_value,
			sum(product_price) sales_price,
			sum(quantity) quantity,
			sum(returned_quantity) returned_quantity,
			sum(total_price) total_price,
			sum(discount_amount) discount_amount,
            sum (profit_amount) profit_amount,
            sum (loss_amount) loss_amount,
            sum (profit_amount - loss_amount) net_profit_loss,
             '''
            || p_app_user_id
            || ''' app_user_id
       FROM sales_details s
   GROUP BY branch_code
   ORDER BY branch_code ';
      ELSIF w_sales_report_type = 'CN'
      THEN
         -- Product wise profit and loss
         w_sql_stat :=
               w_sql_stat
            || ' )
     SELECT COALESCE ((SELECT branch_center_code||'' - ''||center_name from delar_center c where c.center_code=s.center_code),''Branch Office''),
			sum(total_purchase_value) total_purchase_value,
			sum(product_price) sales_price,
			sum(quantity) quantity,
			sum(returned_quantity) returned_quantity,
			sum(total_price) total_price,
			sum(discount_amount) discount_amount,
            sum (profit_amount) profit_amount,
            sum (loss_amount) loss_amount,
            sum (profit_amount - loss_amount) net_profit_loss,
             '''
            || p_app_user_id
            || ''' app_user_id
       FROM sales_details s
   GROUP BY center_code
   ORDER BY center_code ';
      ELSIF w_sales_report_type = 'IN'
      THEN
         -- Product wise profit and loss
         w_sql_stat := w_sql_stat || ' )
     SELECT invoice_number,
			sum(total_purchase_value) total_purchase_value,
			sum(product_price) sales_price,
			sum(quantity) quantity,
			sum(returned_quantity) returned_quantity,
			sum(total_price) total_price,
			sum(discount_amount) discount_amount,
            sum (profit_amount) profit_amount,
            sum (loss_amount) loss_amount,
            sum (profit_amount - loss_amount) net_profit_loss,
             ''' || p_app_user_id || ''' app_user_id
       FROM sales_details
   GROUP BY invoice_number
   ORDER BY invoice_number ';
      END IF;

      ---RAISE EXCEPTION USING MESSAGE = w_sql_stat;

      EXECUTE w_sql_stat;
   END IF;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      o_errm := SQLERRM;
      o_status := 'E';
END;
$$;


ALTER FUNCTION public.fn_run_sales_report(p_app_user_id character, p_report_name character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_change_center_id(character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_change_center_id(p_old_center_id character, p_new_center_id character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_errm         VARCHAR;
   w_status       VARCHAR;
   center_info    RECORD;
   client_info    RECORD;
   account_info   RECORD;
BEGIN
   FOR center_info IN (SELECT center_code, delar_id
                         FROM sales_center
                        WHERE center_code = p_old_center_id)
   LOOP
      UPDATE sales_cntreinfo_model
         SET center_code = p_new_center_id,
             delar_id = cast (p_new_center_id AS INTEGER)
       WHERE id = center_info.id;
   END LOOP;

   FOR client_info IN (SELECT id, client_id
                         FROM sales_clients
                        WHERE client_center_code = p_old_center_id)
   LOOP
      UPDATE sales_clients
         SET client_center_code = p_new_center_id,
             delar_id = cast (p_new_center_id AS INTEGER)
       WHERE id = client_info.id;
   END LOOP;

   FOR account_info IN (SELECT id, client_id
                          FROM sales_accounts_balance
                         WHERE center_code = p_old_center_id)
   LOOP
      UPDATE sales_accounts_balance
         SET center_code = p_new_center_id,
             delar_id = cast (p_new_center_id AS INTEGER)
       WHERE id = account_info.id;
   END LOOP;

   BEGIN
      INSERT INTO sales_client_id_changes_hist (old_client_id,
                                                new_client_id,
                                                app_data_time)
           VALUES (p_old_client_id, p_new_client_id, current_timestamp);
   END;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_change_center_id(p_old_center_id character, p_new_center_id character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_change_client_id(character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_change_client_id(p_old_client_id character, p_new_client_id character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_errm         VARCHAR;
   w_status       VARCHAR;
   client_info    RECORD;
   account_info   RECORD;
BEGIN
   FOR client_info IN (SELECT client_id
                         FROM sales_clients
                        WHERE client_id = p_old_client_id)
   LOOP
      UPDATE sales_clients
         SET client_id = p_new_client_id
       WHERE client_id = client_info.client_id;

      UPDATE sales_clients
         SET client_id = p_new_client_id
       WHERE client_id = client_info.client_id;

      UPDATE sales_sales_master
         SET customer_id = p_new_client_id
       WHERE customer_id = p_old_client_id;

      UPDATE sales_sales_return_details
         SET client_id = p_new_client_id
       WHERE client_id = p_old_client_id;

      UPDATE sales_order_master
         SET customer_id = p_new_client_id
       WHERE customer_id = p_old_client_id;

      UPDATE sales_sales_details
         SET client_id = p_new_client_id
       WHERE client_id = p_old_client_id;

      UPDATE sales_emi_setup
         SET client_id = p_new_client_id
       WHERE client_id = p_old_client_id;

      UPDATE sales_fees_history
         SET client_id = p_new_client_id
       WHERE client_id = p_old_client_id;

      UPDATE micfin_passbook_issue
         SET client_id = p_new_client_id
       WHERE client_id = p_old_client_id;

      UPDATE micfin_nominee_details
         SET client_id = p_new_client_id
       WHERE client_id = p_old_client_id;

      UPDATE micfin_guarantor_details
         SET client_id = p_new_client_id
       WHERE client_id = p_old_client_id;
   END LOOP;

   FOR account_info IN (SELECT account_number, client_id
                          FROM finance_accounts_balance
                         WHERE client_id = p_old_client_id)
   LOOP
      UPDATE finance_accounts_balance
         SET client_id = p_new_client_id
       WHERE client_id = p_old_client_id;

      UPDATE finance_deposit_receive
         SET client_id = p_new_client_id
       WHERE account_number = account_info.account_number;

      UPDATE finance_deposit_payment
         SET client_id = p_new_client_id
       WHERE account_number = account_info.account_number;
   END LOOP;

   BEGIN
      INSERT INTO sales_client_id_changes_hist (old_client_id,
                                                new_client_id,
                                                app_data_time)
           VALUES (p_old_client_id, p_new_client_id, current_timestamp);
   END;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_change_client_id(p_old_client_id character, p_new_client_id character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_client_center_transfer(character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_client_center_transfer(p_client_id character, p_new_center_code character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_errm              VARCHAR;
   w_status            VARCHAR;
   client_info         RECORD;
   account_info        RECORD;
   w_delar_id          INTEGER;
   w_old_center_code   VARCHAR;
BEGIN
   BEGIN
      SELECT delar_id
        INTO STRICT w_delar_id
        FROM sales_cntreinfo_model
       WHERE center_code = p_new_center_code;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         w_status := 'E';
         w_errm := 'Invalid Center Code!';
         RAISE EXCEPTION USING MESSAGE = w_errm;
   END;

   FOR client_info IN (SELECT id, client_id, client_center_code
                         FROM sales_clients
                        WHERE client_id = p_client_id)
   LOOP
      w_old_center_code := client_info.client_center_code;

      UPDATE sales_clients
         SET client_center_code = p_new_center_code, delar_id = w_delar_id
       WHERE id = client_info.id;

      UPDATE sales_dps_receive
         SET center_code = p_new_center_code
       WHERE client_id = p_client_id;

      UPDATE sales_deprcv_model
         SET center_code = p_new_center_code
       WHERE client_id = p_client_id;

      UPDATE sales_fees_history
         SET center_code = p_new_center_code
       WHERE client_id = p_client_id;

      UPDATE sales_emircv_model
         SET center_code = p_new_center_code
       WHERE client_id = p_client_id;

      UPDATE sales_emisetup_model
         SET center_code = p_new_center_code
       WHERE client_id = p_client_id;

      UPDATE sales_deprepay_model
         SET center_code = p_new_center_code
       WHERE client_id = p_client_id;

      UPDATE sales_installment_collection
         SET center_code = p_new_center_code, delar_id = w_delar_id
       WHERE client_id = p_client_id;

      UPDATE sales_sales_master
         SET delar_id = w_delar_id
       WHERE customer_id = p_client_id;
   END LOOP;

   FOR account_info IN (SELECT id, client_id
                          FROM sales_accounts_balance
                         WHERE client_id = p_client_id)
   LOOP
      UPDATE sales_accounts_balance
         SET center_code = p_new_center_code, delar_id = w_delar_id
       WHERE id = account_info.id;
   END LOOP;

   BEGIN
      INSERT INTO sales_client_center_trf_hist (client_id,
                                                old_center_code,
                                                new_center_code,
                                                app_data_time)
           VALUES (p_client_id,
                   w_old_center_code,
                   p_new_center_code,
                   current_timestamp);
   END;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_errm := SQLERRM;
         o_status := 'E';
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_client_center_transfer(p_client_id character, p_new_center_code character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_emibal_hist(character, character, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_emibal_hist(p_account_number character, p_emi_reference_no character, p_ason_date date, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   rec_emi_list       RECORD;
   w_status           VARCHAR;
   w_errm             VARCHAR;
   w_calc_from_date   DATE;
   w_calc_upto_date   DATE;
   w_closer_date      DATE;
BEGIN
   FOR rec_emi_list
      IN (SELECT branch_code,
                 center_code,
                 account_number,
                 emi_reference_no,
                 last_emi_hist_update,
                 last_emi_payment_date,
                 total_emi_due
            FROM sales_emi_setup
           WHERE     account_number = p_account_number
                 AND emi_reference_no = p_emi_reference_no
                 AND emi_cancel_on IS NULL)
   LOOP
      w_calc_from_date := rec_emi_list.last_emi_hist_update;
      w_calc_upto_date := rec_emi_list.last_emi_payment_date;

      DELETE FROM sales_emi_history
            WHERE     account_number = p_account_number
                  AND emi_reference_no = rec_emi_list.emi_reference_no
                  AND inst_receive_date >= w_calc_from_date;

      INSERT INTO sales_emi_history (branch_code,
                                     center_code,
                                     account_number,
                                     emi_reference_no,
                                     emi_rate,
                                     emi_inst_amount,
                                     inst_receive_date,
                                     inst_receive_amount,
                                     total_installment_due,
                                     total_installment_payment,
                                     total_installment_overdue,
                                     total_installment_advance,
                                     total_emi_outstanding,
                                     emi_principal_outstanding,
                                     emi_profit_outstanding,
                                     emi_total_payment,
                                     emi_principal_payment,
                                     emi_profit_payment,
                                     total_advance_recover,
                                     principal_advance_recover,
                                     profit_advance_recover,
                                     total_due_recover,
                                     principal_due_recover,
                                     profit_due_recover,
                                     emi_total_overdue,
                                     emi_principal_overdue,
                                     emi_profit_overdue,
                                     app_user_id,
                                     app_data_time)
         WITH
            emi_receive_details
            AS
               (SELECT branch_code,
                       account_number,
                       emi_reference_no,
                       inst_receive_date inst_receive_date,
                       inst_receive_amount,
                       cum_receive_amount
                  FROM (SELECT branch_code,
                               account_number,
                               emi_reference_no,
                               inst_receive_date,
                               inst_receive_amount,
                               sum (inst_receive_amount)
                               OVER (
                                  PARTITION BY branch_code,
                                               account_number,
                                               emi_reference_no
                                  ORDER BY
                                     branch_code,
                                     account_number,
                                     emi_reference_no,
                                     inst_receive_date) cum_receive_amount
                          FROM (  SELECT branch_code,
                                         account_number,
                                         emi_reference_no,
                                         inst_receive_date,
                                         inst_receive_amount
                                    FROM (SELECT branch_code,
                                                 account_number,
                                                 emi_reference_no
                                                    emi_reference_no,
                                                 inst_receive_date
                                                    inst_receive_date,
                                                 inst_receive_amount
                                                    inst_receive_amount
                                            FROM sales_emi_history h
                                           WHERE     h.account_number =
                                                     rec_emi_list.account_number
                                                 AND h.emi_reference_no =
                                                     rec_emi_list.emi_reference_no
                                                 AND h.inst_receive_date =
                                                     (SELECT max (
                                                                inst_receive_date)
                                                       FROM sales_emi_history b
                                                      WHERE     b.account_number =
                                                                rec_emi_list.account_number
                                                            AND b.emi_reference_no =
                                                                rec_emi_list.emi_reference_no
                                                            AND b.inst_receive_date <
                                                                w_calc_from_date)
                                          UNION ALL
                                            SELECT branch_code,
                                                   account_number,
                                                   emi_reference_no
                                                      emi_reference_no,
                                                   receive_date
                                                      inst_receive_date,
                                                   sum (receive_amount)
                                                      inst_receive_amount
                                              FROM sales_emi_receive
                                             WHERE     account_number =
                                                       rec_emi_list.account_number
                                                   AND emi_reference_no =
                                                       rec_emi_list.emi_reference_no
                                                   AND receive_date >=
                                                       w_calc_from_date
                                                   AND receive_amount > 0
                                          GROUP BY branch_code,
                                                   account_number,
                                                   emi_reference_no,
                                                   receive_date) T
                                ORDER BY account_number,
                                         emi_reference_no,
                                         inst_receive_date) t) t),
            emisetup_details
            AS
               (SELECT branch_code,
                       account_number,
                       emi_reference_no,
                       total_emi_amount,
                       number_of_installment,
                       emi_rate,
                       emi_inst_amount
                          inst_amount,
                       emi_inst_repay_from_date
                          inst_from_date,
                       emi_inst_frequency
                          inst_freq,
                       fn_get_noof_installment_due (emi_inst_frequency,
                                                    emi_inst_repay_from_date,
                                                    p_ason_date)
                          noof_installment_due,
                       (CASE
                           WHEN emi_inst_frequency = 'W' THEN 7
                           WHEN emi_inst_frequency = 'M' THEN 30
                           WHEN emi_inst_frequency = 'Q' THEN 90
                           WHEN emi_inst_frequency = 'H' THEN (365 / 2)
                           WHEN emi_inst_frequency = 'Y' THEN 365
                        END)
                          inst_interval_days
                  FROM sales_emi_setup
                 WHERE     account_number = rec_emi_list.account_number
                       AND emi_reference_no = rec_emi_list.emi_reference_no
                       AND emi_cancel_by IS NULL),
            emi_summary
            AS
               (  SELECT s.branch_code,
                         s.account_number,
                         s.emi_reference_no,
                         s.total_emi_amount,
                         s.number_of_installment,
                         s.inst_amount,
                         s.emi_rate,
                         s.inst_from_date,
                         s.inst_freq,
                         s.inst_interval_days,
                         r.inst_receive_date,
                         r.inst_receive_amount,
                         r.cum_receive_amount,
                         CAST (
                            FLOOR (r.cum_receive_amount / s.inst_amount)
                               AS INTEGER) total_inst_receive,
                         noof_installment_due total_due_inst,
                         (CASE
                             WHEN (r.inst_receive_date - s.inst_from_date) > 0
                             THEN
                                  CAST (
                                     FLOOR (
                                          (  r.inst_receive_date
                                           - s.inst_from_date)
                                        / s.inst_interval_days) AS INTEGER)
                                * s.inst_amount
                             ELSE
                                0
                          END) inst_due_amount
                    FROM emi_receive_details r, emisetup_details s
                   WHERE     r.account_number = s.account_number
                         AND r.emi_reference_no = s.emi_reference_no
                ORDER BY s.branch_code,
                         s.account_number,
                         s.emi_reference_no,
                         r.inst_receive_date),
            emi_duedetails
            AS
               (SELECT branch_code,
                       account_number,
                       emi_reference_no,
                       total_emi_amount,
                       number_of_installment,
                       inst_amount,
                       emi_rate,
                       inst_from_date,
                       inst_freq,
                       inst_interval_days,
                       inst_receive_date,
                       inst_receive_amount,
                       cum_receive_amount,
                       total_inst_receive,
                       (CASE
                           WHEN total_due_inst > number_of_installment
                           THEN
                              number_of_installment
                           ELSE
                              total_due_inst
                        END) total_due_inst,
                       (CASE
                           WHEN total_emi_amount > inst_due_amount
                           THEN
                              inst_due_amount
                           ELSE
                              total_emi_amount
                        END) inst_due_amount
                  FROM emi_summary),
            emi_details
            AS
               (SELECT branch_code,
                       account_number,
                       emi_reference_no,
                       inst_amount,
                       emi_rate,
                       inst_receive_date,
                       inst_receive_amount,
                       total_due_inst,
                       total_inst_receive,
                       (CASE
                           WHEN (total_due_inst - total_inst_receive) > 0
                           THEN
                              (total_due_inst - total_inst_receive)
                           ELSE
                              0
                        END)
                          total_od_inst,
                       (CASE
                           WHEN (total_inst_receive - total_due_inst) > 0
                           THEN
                              (total_inst_receive - total_due_inst)
                           ELSE
                              0
                        END)
                          total_adv_inst,
                       cum_receive_amount
                          emi_total_payment,
                         cum_receive_amount
                       - (cum_receive_amount * (emi_rate / 100))
                          emi_principal_payment,
                       cum_receive_amount * (emi_rate / 100)
                          emi_profit_payment,
                       inst_due_amount
                          total_emi_outstanding,
                       inst_due_amount - (inst_due_amount * (emi_rate / 100))
                          emi_principal_outstanding,
                       inst_due_amount * (emi_rate / 100)
                          emi_profit_outstanding
                  FROM emi_duedetails),
            emi_partition
            AS
               (SELECT branch_code,
                       account_number,
                       emi_reference_no,
                       emi_rate emi_profit_rate,
                       inst_amount emi_inst_amount,
                       inst_receive_date,
                       inst_receive_amount,
                       total_due_inst,
                       total_inst_receive,
                       total_od_inst,
                       total_adv_inst,
                       emi_total_payment,
                       emi_principal_payment,
                       emi_profit_payment,
                       total_emi_outstanding,
                       emi_principal_outstanding,
                       emi_profit_outstanding,
                       (CASE
                           WHEN (total_emi_outstanding - emi_total_payment) >
                                0
                           THEN
                              (total_emi_outstanding - emi_total_payment)
                           ELSE
                              0
                        END) emi_total_overdue,
                       (CASE
                           WHEN (emi_profit_outstanding - emi_profit_payment) >
                                0
                           THEN
                              (emi_profit_outstanding - emi_profit_payment)
                           ELSE
                              0
                        END) emi_profit_overdue,
                       (CASE
                           WHEN (  emi_principal_outstanding
                                 - emi_principal_payment) >
                                0
                           THEN
                              (  emi_principal_outstanding
                               - emi_principal_payment)
                           ELSE
                              0
                        END) emi_principal_overdue,
                       (CASE
                           WHEN (emi_total_payment - total_emi_outstanding) >
                                0
                           THEN
                              (emi_total_payment - total_emi_outstanding)
                           ELSE
                              0
                        END) emi_total_advance,
                       (CASE
                           WHEN (  emi_principal_payment
                                 - emi_principal_outstanding) >
                                0
                           THEN
                              (  emi_principal_payment
                               - emi_principal_outstanding)
                           ELSE
                              0
                        END) emi_principal_advance,
                       (CASE
                           WHEN (emi_profit_payment - emi_profit_outstanding) >
                                0
                           THEN
                              (emi_profit_payment - emi_profit_outstanding)
                           ELSE
                              0
                        END) emi_profit_advance,
                       'SYSTEM' app_user_id,
                       current_timestamp app_data_time
                  FROM emi_details),
            final_emi_amount
            AS
               (SELECT branch_code,
                       account_number,
                       emi_reference_no,
                       emi_profit_rate,
                       emi_inst_amount,
                       inst_receive_date,
                       inst_receive_amount,
                       total_due_inst,
                       total_inst_receive,
                       total_od_inst,
                       total_adv_inst,
                       total_emi_outstanding,
                       emi_principal_outstanding,
                       emi_profit_outstanding,
                       emi_total_payment,
                       emi_principal_payment,
                       emi_profit_payment,
                       emi_total_advance,
                       emi_principal_advance,
                       emi_profit_advance,
                       (CASE
                           WHEN (    inst_receive_amount > emi_inst_amount
                                 AND emi_total_advance <
                                     inst_receive_amount - emi_inst_amount)
                           THEN
                              (  inst_receive_amount
                               - emi_inst_amount
                               - emi_total_advance)
                           ELSE
                              0
                        END) total_due_recover,
                       emi_total_overdue,
                       emi_principal_overdue,
                       emi_profit_overdue,
                       app_user_id,
                       app_data_time
                  FROM emi_partition)
         SELECT branch_code,
                rec_emi_list.center_code,
                account_number,
                emi_reference_no,
                emi_profit_rate,
                emi_inst_amount,
                inst_receive_date,
                inst_receive_amount,
                total_due_inst,
                total_inst_receive,
                total_od_inst,
                total_adv_inst,
                total_emi_outstanding,
                emi_principal_outstanding,
                emi_profit_outstanding,
                emi_total_payment,
                emi_principal_payment,
                emi_profit_payment,
                emi_total_advance,
                emi_principal_advance,
                emi_profit_advance,
                total_due_recover,
                  total_due_recover
                - (total_due_recover * (emi_profit_rate / 100))
                   principal_due_recover,
                total_due_recover * (emi_profit_rate / 100)
                   profit_due_recover,
                emi_total_overdue,
                emi_principal_overdue,
                emi_profit_overdue,
                app_user_id,
                app_data_time
           FROM final_emi_amount;

      DELETE FROM sales_emi_history
            WHERE id =
                  (SELECT id
                    FROM (  SELECT min (id) id,
                                   count (id) total_row,
                                   branch_code,
                                   account_number,
                                   emi_reference_no,
                                   inst_receive_date
                              FROM sales_emi_history
                             WHERE     branch_code = rec_emi_list.branch_code
                                   AND account_number = p_account_number
                                   AND emi_reference_no =
                                       rec_emi_list.emi_reference_no
                          GROUP BY branch_code,
                                   account_number,
                                   emi_reference_no,
                                   inst_receive_date) t
                   WHERE total_row > 1);

      IF rec_emi_list.total_emi_due = 0
      THEN
         w_closer_date := current_date;
      ELSE
         w_closer_date := NULL;
      END IF;

      UPDATE sales_emi_setup
         SET last_emi_hist_update = w_calc_upto_date,
             is_balance_updated = TRUE,
             emi_closer_date = w_closer_date
       WHERE     branch_code = rec_emi_list.branch_code
             AND account_number = p_account_number
             AND emi_reference_no = rec_emi_list.emi_reference_no;
   END LOOP;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_emibal_hist(p_account_number character, p_emi_reference_no character, p_ason_date date, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_get_center_emi_detail_amount(character, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_get_center_emi_detail_amount(p_center_code character, p_ason_date date, OUT o_total_emi_amount numeric, OUT o_total_emi_due numeric, OUT o_total_emi_recover numeric, OUT o_total_installment_amount numeric, OUT o_asonday_total_recover numeric, OUT o_asonday_due_recover numeric, OUT o_asonday_recover numeric, OUT o_asonday_advance_recover numeric) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   W_MESSAGE                   CHARACTER (20);
   W_RETURN                    NUMERIC (22, 2) := 0;
   w_instrepay_repay_amt       NUMERIC (22, 2) := 0;
   w_installment_due_amount    NUMERIC (22, 2) := 0;
   w_total_emi_due             NUMERIC (22, 2) := 0;
   w_total_emi_amount          NUMERIC (22, 2) := 0;
   w_total_emi_recover         NUMERIC (22, 2) := 0;

   w_asonday_total_recover     NUMERIC (22, 2) := 0;
   w_asonday_due_recover       NUMERIC (22, 2) := 0;
   w_asonday_recover           NUMERIC (22, 2) := 0;
   w_asonday_advance_recover   NUMERIC (22, 2) := 0;
   O_STATUS                    CHARACTER (20);
   O_ERRM                      CHARACTER (100);
   W_STATUS                    CHARACTER (20);
BEGIN
   BEGIN
      SELECT sum (instrepay_repay_amt) instrepay_repay_amt,
             sum (
                (  (total_installment_due - total_installment_paid)
                 * instrepay_repay_amt)) installment_due_amount,
             sum (total_emi_due) total_emi_due,
             sum (total_emi_amount) total_emi_amount,
             sum (instrepay_tot_repay_amt) total_emi_recover
        INTO w_instrepay_repay_amt,
             w_installment_due_amount,
             w_total_emi_due,
             w_total_emi_amount,
             w_total_emi_recover
        FROM (SELECT instrepay_repay_amt,
                     total_emi_due,
                     total_emi_amount,
                     instrepay_tot_repay_amt,
                     CAST (
                        (FLOOR (
                              (p_ason_date - instrepay_repay_from_date)
                            / (CASE
                                  WHEN instrepay_repay_freq = 'W'
                                  THEN
                                     7
                                  WHEN instrepay_repay_freq = 'M'
                                  THEN
                                     30
                                  WHEN instrepay_repay_freq = 'Q'
                                  THEN
                                     90
                                  WHEN instrepay_repay_freq = 'H'
                                  THEN
                                     (365 / 2)
                                  WHEN instrepay_repay_freq = 'Y'
                                  THEN
                                     365
                               END))) AS INTEGER) total_installment_due,
                     CAST (
                        FLOOR (instrepay_tot_repay_amt / instrepay_repay_amt)
                           AS INTEGER) total_installment_paid
                FROM sales_emisetup_model e
               WHERE     e.center_code = p_center_code
                     AND total_emi_due > 0
                     AND e.instrepay_repay_from_date <= p_ason_date) t;

      W_RETURN := COALESCE (w_installment_due_amount, 0.00);
   END;


   WITH
      emi_receive_amount
      AS
         (SELECT emi_inst_amount,
                 emi_profit_rate,
                 inst_receive_amount,
                 (CASE
                     WHEN (    inst_receive_amount > emi_inst_amount
                           AND emi_total_advance <
                               inst_receive_amount - emi_inst_amount)
                     THEN
                        (  inst_receive_amount
                         - emi_inst_amount
                         - emi_total_advance)
                     ELSE
                        0
                  END) emi_due_recover,
                 emi_total_payment,
                 emi_principal_payment,
                 emi_profit_payment,
                 total_emi_outstanding,
                 emi_principal_outstanding,
                 emi_profit_outstanding,
                 emi_total_overdue,
                 emi_principal_overdue,
                 emi_profit_overdue,
                 emi_total_advance,
                 emi_principal_advance,
                 emi_profit_advance
            FROM sales_emi_history
           WHERE     center_code = p_center_code
                 AND inst_receive_date = p_ason_date),
      emi_recovery_summary
      AS
         (SELECT emi_inst_amount,
                 emi_profit_rate,
                 inst_receive_amount,
                 emi_due_recover,
                 emi_total_advance,
                 (inst_receive_amount - (emi_due_recover + emi_inst_amount))
                    ason_day_recover,
                 emi_total_payment,
                 emi_principal_payment,
                 emi_profit_payment,
                 total_emi_outstanding,
                 emi_principal_outstanding,
                 emi_profit_outstanding,
                 emi_total_overdue,
                 emi_principal_overdue,
                 emi_profit_overdue,
                 emi_principal_advance,
                 emi_profit_advance
            FROM emi_receive_amount)
   SELECT sum (inst_receive_amount) total_recover_amount,
          sum (emi_due_recover) total_due_recover,
          sum (ason_day_recover) total_ason_day_recover,
          sum (emi_total_advance) emi_total_advance
     INTO w_asonday_total_recover,
          w_asonday_due_recover,
          w_asonday_recover,
          w_asonday_advance_recover
     FROM emi_recovery_summary;

   o_total_emi_amount := COALESCE (w_total_emi_amount, 0.00);
   o_total_emi_due := COALESCE (w_total_emi_due, 0.00);
   o_total_installment_amount := COALESCE (w_instrepay_repay_amt, 0.00);
   o_total_emi_recover := COALESCE (w_total_emi_recover, 0.00);
   o_asonday_total_recover := COALESCE (w_asonday_total_recover, 0.00);
   o_asonday_due_recover := COALESCE (w_asonday_due_recover, 0.00);
   o_asonday_recover := COALESCE (w_asonday_recover, 0.00);
   o_asonday_advance_recover := COALESCE (w_asonday_advance_recover, 0.00);
END;
$$;


ALTER FUNCTION public.fn_sales_get_center_emi_detail_amount(p_center_code character, p_ason_date date, OUT o_total_emi_amount numeric, OUT o_total_emi_due numeric, OUT o_total_emi_recover numeric, OUT o_total_installment_amount numeric, OUT o_asonday_total_recover numeric, OUT o_asonday_due_recover numeric, OUT o_asonday_recover numeric, OUT o_asonday_advance_recover numeric) OWNER TO delarship;

--
-- Name: fn_sales_online_order_accept(integer, character, character, character, date, character, numeric, numeric, character, character, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_online_order_accept(p_branch_code integer, p_app_user_id character, p_order_number character, p_invoice_number character, p_invoice_date date, p_employee_id character, p_pay_amount numeric, p_invoice_discount numeric, p_tran_type_code character, p_bill_receive_gl character, p_bill_due_gl character, p_payment_document character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status         VARCHAR;
   w_errm           VARCHAR;
   rec_order_list   RECORD;
   w_batch_number   INTEGER;
BEGIN
   BEGIN
      FOR rec_order_list IN (SELECT *
                               FROM ecom_order_master
                              WHERE order_number = p_order_number)
      LOOP
         IF rec_order_list.status = 'A'
         THEN
            RAISE EXCEPTION USING MESSAGE = 'This Order Already Accepted!';
         END IF;

         --RAISE EXCEPTION USING MESSAGE = p_order_number;

         INSERT INTO sales_sales_details_temp (invoice_number,
                                               product_id,
                                               product_bar_code,
                                               product_name,
                                               product_model,
                                               sales_account_number,
                                               serial_no,
                                               service_type,
                                               service_start_date,
                                               service_end_date,
                                               service_card_no,
                                               product_price,
                                               quantity,
                                               total_price,
                                               profit_amount,
                                               discount_rate,
                                               discount_amount,
                                               status,
                                               comments,
                                               app_user_id,
                                               app_data_time,
                                               details_branch_code)
            SELECT NULL,
                   product_id,
                   NULL,
                   'NA',
                   NULL,
                   NULL,
                   serial_no,
                   NULL,
                   NULL,
                   NULL,
                   NULL,
                   product_price,
                   order_quantity,
                   total_price,
                   profit_amount,
                   discount_rate,
                   discount_amount,
                   status,
                   comments,
                   app_user_id,
                   app_data_time,
                   p_branch_code branch_code
              FROM ecom_order_details
             WHERE order_number = p_order_number;

         SELECT *
         INTO w_status, w_errm, w_batch_number
         FROM fn_sales_sales_post (
                 p_branch_code,
                 p_app_user_id,
                 p_invoice_number,
                 rec_order_list.customer_phone,
                 CAST (rec_order_list.customer_id AS VARCHAR),
                 rec_order_list.customer_name,
                 rec_order_list.customer_address,
                 rec_order_list.account_number,
                 p_employee_id,
                 p_pay_amount,
                 p_invoice_discount,
                 p_tran_type_code,
                 p_bill_receive_gl,
                 p_bill_due_gl,
                 p_payment_document,
                 0.00,
                 rec_order_list.discount_amount,
                 p_invoice_date,
                 rec_order_list.latitude,
                 rec_order_list.longitude);

         IF w_status = 'E'
         THEN
            RAISE EXCEPTION USING MESSAGE = w_errm;
         ELSE
            UPDATE ecom_order_master
               SET status = 'A'
             WHERE     order_number = p_order_number
                   AND branch_code = p_branch_code;

            UPDATE sales_sales_master
               SET order_number = p_order_number
             WHERE     invoice_number = p_invoice_number
                   AND invoice_date = p_invoice_date;
         END IF;
      END LOOP;
   END;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_online_order_accept(p_branch_code integer, p_app_user_id character, p_order_number character, p_invoice_number character, p_invoice_date date, p_employee_id character, p_pay_amount numeric, p_invoice_discount numeric, p_tran_type_code character, p_bill_receive_gl character, p_bill_due_gl character, p_payment_document character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_order_accept(integer, character, character, character, date, character, numeric, numeric, character, character, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_order_accept(p_branch_code integer, p_app_user_id character, p_order_number character, p_invoice_number character, p_invoice_date date, p_employee_id character, p_pay_amount numeric, p_invoice_discount numeric, p_tran_type_code character, p_bill_receive_gl character, p_bill_due_gl character, p_payment_document character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status             VARCHAR;
   w_errm               VARCHAR;
   rec_order_list       RECORD;
   w_batch_number       INTEGER;
   w_pending_quantity   INTEGER;
   w_center_code        VARCHAR := '0';
   w_total_quantity     INTEGER;
BEGIN
   BEGIN
      FOR rec_order_list IN (SELECT *
                               FROM sales_order_master
                              WHERE order_number = p_order_number)
      LOOP
         IF rec_order_list.status = 'I'
         THEN
            RAISE EXCEPTION USING MESSAGE = 'This Order Already Delivered!';
         END IF;

         BEGIN
            SELECT sum (quantity)
              INTO w_total_quantity
              FROM sales_order_details
             WHERE order_number = p_order_number AND quantity > 0;
         END;

         IF w_total_quantity = 0 OR w_total_quantity IS NULL
         THEN
            RAISE EXCEPTION USING MESSAGE = 'Nothing to delivery!';
         END IF;


         INSERT INTO sales_sales_details_temp (invoice_number,
                                               product_id,
                                               product_bar_code,
                                               product_name,
                                               product_model,
                                               sales_account_number,
                                               serial_no,
                                               service_type,
                                               service_start_date,
                                               service_end_date,
                                               service_card_no,
                                               product_price,
                                               quantity,
                                               total_price,
                                               profit_amount,
                                               discount_rate,
                                               discount_amount,
                                               status,
                                               comments,
                                               app_user_id,
                                               app_data_time,
                                               details_branch_code)
            SELECT p_invoice_number,
                   product_id,
                   NULL,
                   'NA',
                   NULL,
                   NULL,
                   serial_no,
                   service_type,
                   service_start_date,
                   service_end_date,
                   service_card_no,
                   product_price,
                   quantity,
                   total_price,
                   profit_amount,
                   discount_rate,
                   discount_amount,
                   status,
                   comments,
                   app_user_id,
                   app_data_time,
                   branch_code
              FROM sales_order_details
             WHERE order_number = p_order_number AND quantity > 0;

         UPDATE sales_order_details
            SET delivered_quantity = delivered_quantity + quantity,
                quantity = ordered_quantity - (delivered_quantity + quantity),
                delivered_total_price = delivered_total_price + total_price,
                total_price =
                     ordered_total_price
                   - (delivered_total_price + total_price),
                delivered_discount_amount =
                   delivered_discount_amount + discount_amount,
                discount_amount =
                     ordered_discount_amount
                   - (delivered_discount_amount + discount_amount)
          WHERE order_number = p_order_number AND branch_code = p_branch_code;

         SELECT quantity
           INTO w_pending_quantity
           FROM sales_order_details
          WHERE order_number = p_order_number AND branch_code = p_branch_code;

         SELECT center_code
           INTO w_center_code
           FROM sales_clients
          WHERE client_id = rec_order_list.customer_id;


         SELECT *
           INTO w_status, w_errm, w_batch_number
           FROM fn_sales_sales_post (p_branch_code,
                                     w_center_code,
                                     p_app_user_id,
                                     p_invoice_number,
                                     rec_order_list.customer_phone,
                                     rec_order_list.customer_id,
                                     rec_order_list.customer_name,
                                     rec_order_list.customer_address,
                                     rec_order_list.account_number,
                                     p_employee_id,
                                     p_pay_amount,
                                     p_invoice_discount,
                                     p_tran_type_code,
                                     p_bill_receive_gl,
                                     p_bill_due_gl,
                                     p_payment_document,
                                     rec_order_list.total_discount_rate,
                                     rec_order_list.total_discount_amount,
                                     p_invoice_date,
                                     rec_order_list.latitude,
                                     rec_order_list.longitude);

         IF w_status = 'E'
         THEN
            RAISE EXCEPTION USING MESSAGE = w_errm;
         ELSE
            UPDATE sales_order_master
               SET tran_batch_number = w_batch_number
             WHERE     order_number = p_order_number
                   AND branch_code = p_branch_code;

            UPDATE sales_sales_master
               SET order_number = p_order_number
             WHERE     invoice_number = p_invoice_number
                   AND invoice_date = p_invoice_date;

            IF w_pending_quantity = 0
            THEN
               UPDATE sales_order_master
                  SET status = 'I'
                WHERE     order_number = p_order_number
                      AND branch_code = p_branch_code;
            END IF;
         END IF;
      END LOOP;
   END;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_order_accept(p_branch_code integer, p_app_user_id character, p_order_number character, p_invoice_number character, p_invoice_date date, p_employee_id character, p_pay_amount numeric, p_invoice_discount numeric, p_tran_type_code character, p_bill_receive_gl character, p_bill_due_gl character, p_payment_document character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_order_post(integer, character, character, character, character, character, character, character, character, character, numeric, character, numeric, numeric, date, date, numeric, numeric); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_order_post(p_branch_code integer, p_center_code character, p_app_user_id character, p_order_number character, p_customer_phone character, p_customer_id character, p_customer_name character, p_customer_address character, p_account_number character, p_employee_id character, p_pay_amount numeric, p_tran_type_code character, p_discount_rate numeric, p_discount_amount numeric, p_order_date date, p_delivary_date date, p_latitude numeric, p_longitude numeric, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_error_message              VARCHAR;
   w_batch_number               INTEGER;
   w_check                      BOOLEAN;
   w_account_number             VARCHAR := '0';
   w_transaction_date           DATE;
   product_list                 RECORD;
   w_tran_gl_code               VARCHAR := '0';
   w_cash_transaction           BOOLEAN;
   w_total_leg                  INTEGER;
   w_total_debit_amount         NUMERIC (22, 2) := 0;
   w_total_credit_amount        NUMERIC (22, 2) := 0;
   w_account_banalce            NUMERIC (22, 2) := 0;
   w_credit_limit               NUMERIC (22, 2) := 0;
   w_serial_no                  INTEGER := 0;
   w_product_total_stock        INTEGER := 0;
   w_product_total_sales        INTEGER := 0;
   w_product_available_stock    INTEGER := 0;
   w_product_last_stock_date    DATE;
   w_product_last_sale_date     DATE;
   w_product_last_return_date   DATE;
   w_product_total_returned     INTEGER := 0;
   w_total_purchase_amount      NUMERIC (22, 2) := 0.00;
   w_total_return_amount        NUMERIC (22, 2) := 0.00;
   w_total_sales_amount         NUMERIC (22, 2) := 0.00;
   w_product_total_damage       INTEGER := 0;
   w_total_return_damage        NUMERIC (22, 2) := 0.00;
   w_total_order_quantity       INTEGER := 0;
   w_total_bill_amount          NUMERIC (22, 2) := 0.00;
   w_bill_amount                NUMERIC (22, 2) := 0.00;
   w_due_amount                 NUMERIC (22, 2) := 0.00;
   w_advance_pay                NUMERIC (22, 2) := 0.00;
   w_status                     VARCHAR;
   w_errm                       VARCHAR;
   w_product_name               VARCHAR;
   w_batch_serial               INTEGER := 1;
   w_contra_gl_code             VARCHAR;
   w_tran_debit_credit          VARCHAR := 'C';
   w_employee_id                VARCHAR;
BEGIN
   BEGIN
      SELECT cash_gl_code
        INTO w_tran_gl_code
        FROM appauth_user_settings
       WHERE app_user_id = p_app_user_id;
   END;

   FOR product_list IN (  SELECT invoice_number,
                                 product_id,
                                 serial_no,
                                 service_type,
                                 service_start_date,
                                 service_end_date,
                                 service_card_no,
                                 product_price,
                                 quantity,
                                 total_price,
                                 profit_amount,
                                 discount_rate,
                                 discount_amount,
                                 status,
                                 comments,
                                 app_user_id,
                                 app_data_time
                            FROM sales_sales_details_temp s
                           WHERE s.app_user_id = p_app_user_id
                        ORDER BY serial_no)
   LOOP
      BEGIN
         w_total_order_quantity :=
            w_total_order_quantity + product_list.quantity;
         w_serial_no := w_serial_no + 1;
         w_total_bill_amount :=
            w_total_bill_amount + product_list.total_price;
         w_bill_amount :=
              w_bill_amount
            + product_list.total_price
            - product_list.discount_amount;

         INSERT INTO sales_order_details (order_number,
                                          center_code,
                                          order_date,
                                          product_id,
                                          serial_no,
                                          service_type,
                                          service_start_date,
                                          service_end_date,
                                          service_card_no,
                                          product_price,
                                          ordered_product_price,
                                          quantity,
                                          ordered_quantity,
                                          delivered_quantity,
                                          total_price,
                                          ordered_total_price,
                                          delivered_total_price,
                                          profit_amount,
                                          discount_rate,
                                          ordered_discount_rate,
                                          delivered_discount_rate,
                                          discount_amount,
                                          ordered_discount_amount,
                                          delivered_discount_amount,
                                          status,
                                          comments,
                                          branch_code,
                                          app_user_id,
                                          app_data_time)
              VALUES (p_order_number,
                      p_center_code,
                      p_order_date,
                      product_list.product_id,
                      w_serial_no,
                      product_list.service_type,
                      product_list.service_start_date,
                      product_list.service_end_date,
                      product_list.service_card_no,
                      product_list.product_price,
                      product_list.product_price,
                      product_list.quantity,
                      product_list.quantity,
                      0,
                      product_list.total_price,
                      product_list.total_price,
                      0.00,
                      product_list.profit_amount,
                      product_list.discount_rate,
                      product_list.discount_rate,
                      0.00,
                      product_list.discount_amount,
                      product_list.discount_amount,
                      0.00,
                      'P',
                      product_list.comments,
                      p_branch_code,
                      product_list.app_user_id,
                      current_timestamp);
      END;

      BEGIN
         SELECT product_name
           INTO w_product_name
           FROM sales_products
          WHERE product_id = product_list.product_id;

         SELECT product_available_stock
          INTO w_product_available_stock
          FROM sales_products_inventory_status
         WHERE     product_id = product_list.product_id
               AND branch_code = p_branch_code;
      END;

      /*
            IF w_product_available_stock - product_list.quantity < 0
            THEN
               w_status := 'E';
               w_errm := 'Product ' || w_product_name || ' Out of Stock!';
               RAISE EXCEPTION USING MESSAGE = w_errm;
            END IF;
      */

      UPDATE sales_products_inventory_status
         SET total_order_quantity =
                total_order_quantity + product_list.quantity,
             last_order_date = p_order_date
       WHERE     product_id = product_list.product_id
             AND branch_code = p_branch_code;

      UPDATE sales_products_inventory_status
         SET total_order_quantity =
                total_order_quantity + product_list.quantity,
             last_order_date = p_order_date
       WHERE product_id = product_list.product_id;
   END LOOP;

   w_due_amount := w_bill_amount - p_pay_amount;

   IF w_due_amount < 0
   THEN
      w_advance_pay := p_pay_amount - w_bill_amount;
      w_due_amount := 0;
   END IF;

   INSERT INTO sales_order_master (order_number,
                                   employee_id,
                                   order_date,
                                   delivary_date,
                                   customer_id,
                                   account_number,
                                   customer_name,
                                   customer_phone,
                                   customer_address,
                                   tran_type_code,
                                   total_quantity,
                                   total_bill_amount,
                                   bill_amount,
                                   pay_amount,
                                   due_amount,
                                   advance_pay,
                                   total_discount_rate,
                                   total_discount_amount,
                                   status,
                                   order_comments,
                                   branch_code,
                                   center_code,
                                   app_user_id,
                                   app_data_time,
                                   latitude,
                                   longitude)
        VALUES (p_order_number,
                p_employee_id,
                p_order_date,p_delivary_date,
                P_customer_id,
                p_account_number,
                P_customer_name,
                P_customer_phone,
                p_customer_address,
                p_tran_type_code,
                w_total_order_quantity,
                w_total_bill_amount,
                w_bill_amount,
                p_pay_amount,
                w_due_amount,
                w_advance_pay,
                p_discount_rate,
                p_discount_amount,
                'P',
                NULL,
                p_branch_code,
                p_center_code,
                p_app_user_id,
                current_timestamp,
                p_latitude,
                p_longitude);

   BEGIN
      IF p_pay_amount > 0
      THEN
         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      p_center_code,
                      p_order_date,
                      w_batch_serial,
                      p_account_number,
                      '0',
                      w_tran_gl_code,
                      w_tran_debit_credit,
                      'ORDER',
                      p_pay_amount,
                      0.00,
                      NULL,
                      NULL,
                      NULL,
                      NULL,
                      FALSE,
                      FALSE,
                      'Sales Order Payment',
                      p_app_user_id,
                      current_timestamp);
      END IF;
   END;

   BEGIN
      SELECT *
        INTO w_status, w_errm, w_batch_number
        FROM fn_finance_post_cash_tran (p_branch_code,
                                        p_center_code,
                                        p_app_user_id,
                                        'ORDER',
                                        w_tran_gl_code,
                                        p_order_date,
                                        'Sales Order Posting',
                                        'CR',
                                        'ORDER');

      IF w_status = 'E' AND w_batch_number > 0
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      ELSE
         UPDATE sales_order_master
            SET tran_batch_number = w_batch_number
          WHERE order_number = p_order_number AND order_date = p_order_date;
      END IF;
   END;

   DELETE FROM sales_sales_details_temp s
         WHERE s.app_user_id = p_app_user_id;


   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_order_post(p_branch_code integer, p_center_code character, p_app_user_id character, p_order_number character, p_customer_phone character, p_customer_id character, p_customer_name character, p_customer_address character, p_account_number character, p_employee_id character, p_pay_amount numeric, p_tran_type_code character, p_discount_rate numeric, p_discount_amount numeric, p_order_date date, p_delivary_date date, p_latitude numeric, p_longitude numeric, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_product_inventory_hist(integer, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_product_inventory_hist(p_branch_code integer, p_product_code character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   rec_date_list                 RECORD;
   rec_date_range                RECORD;
   rec_product_list              RECORD;
   w_calculate_date              DATE;
   w_last_transaction_date       DATE;
   w_first_transaction_date      DATE;
   w_product_available_stock     INTEGER;
   w_cost_of_good_sold_balance   NUMERIC (18, 2);
   w_total_purchase_balance      NUMERIC (18, 2);
   w_total_sales_balance         NUMERIC (18, 2);
   w_product_purchase_rate       NUMERIC (18, 2);
   w_previous_purchase_rate      NUMERIC (18, 2);
   w_previous_available_stock    INTEGER;
   w_status                      VARCHAR;
   w_errm                        VARCHAR;
BEGIN
   FOR rec_product_list
      IN (SELECT COALESCE (
                    inv_balance_upto_date,
                    (least (last_stock_date,
                            last_order_date,
                            last_sale_date,
                            last_stock_return_date,
                            last_sales_return_date))) balance_upto_date,
                 GREATEST (last_stock_date,
                           last_order_date,
                           last_sale_date,
                           last_stock_return_date,
                           last_sales_return_date) last_transaction_date,
                 LEAST (last_stock_date,
                        last_order_date,
                        last_sale_date,
                        last_stock_return_date,
                        last_sales_return_date) first_transaction_date
            FROM sales_products_inventory_status
           WHERE     branch_code = p_branch_code
                 AND product_id = p_product_code
                 AND is_balance_updated = FALSE)
   LOOP
      w_calculate_date := rec_product_list.balance_upto_date;
      w_last_transaction_date := rec_product_list.last_transaction_date;
      w_first_transaction_date := rec_product_list.first_transaction_date;

      ---w_calculate_date := COALESCE (w_calculate_date, w_first_transaction_date - 1);

      --RAISE EXCEPTION USING MESSAGE = w_calculate_date;

      SELECT sum (product_available_stock)
                product_available_stock,
             round (sum (cost_of_good_sold_balance), 2)
                cost_of_good_sold_balance,
             sum (total_purchase_balance)
                total_purchase_balance,
             sum (total_sales_balance)
                total_sales_balance
        INTO w_product_available_stock,
             w_cost_of_good_sold_balance,
             w_total_purchase_balance,
             w_total_sales_balance
        FROM sales_products_inventory_hist
       WHERE     branch_code = p_branch_code
             AND product_id = p_product_code
             AND inv_balance_date =
                 (SELECT max (inv_balance_date)
                   FROM sales_products_inventory_hist
                  WHERE     branch_code = p_branch_code
                        AND product_id = p_product_code
                        AND inv_balance_date < w_calculate_date);

      w_product_available_stock := COALESCE (w_product_available_stock, 0);
      w_cost_of_good_sold_balance :=
         COALESCE (w_cost_of_good_sold_balance, 0.00);
      w_total_purchase_balance := COALESCE (w_total_purchase_balance, 0.00);
      w_total_sales_balance := COALESCE (w_total_sales_balance, 0.00);

      FOR rec_date_range
         IN (WITH
                product
                AS
                   (SELECT product_id
                      FROM sales_products
                     WHERE product_id = p_product_code),
                stock
                AS
                   (SELECT p.product_id, s.stock_date transaction_date
                      FROM sales_stockdetails s, product p
                     WHERE     s.stock_date > w_calculate_date - 1
                           AND s.branch_code = p_branch_code
                           AND s.status = 'S'
                           AND p.product_id = s.product_id),
                stock_return
                AS
                   (SELECT p.product_id, pr.return_date transaction_date
                      FROM sales_stock_return_details pr, product p
                     WHERE     pr.return_date > w_calculate_date - 1
                           AND pr.branch_code = p_branch_code
                           AND pr.product_id = p.product_id
                           AND pr.cancel_by IS NULL),
                sales
                AS
                   (SELECT p.product_id, m.invoice_date transaction_date
                      FROM sales_sales_details s,
                           sales_sales_master m,
                           product p
                     WHERE     s.invoice_number = m.invoice_number
                           AND m.invoice_date > w_calculate_date - 1
                           AND m.branch_code = p_branch_code
                           AND m.status <> 'C'
                           AND s.product_id = p.product_id),
                sales_return
                AS
                   (SELECT p.product_id, sr.return_date transaction_date
                      FROM sales_sales_return_details sr, product p
                     WHERE     sr.return_date > w_calculate_date - 1
                           AND sr.branch_code = p_branch_code
                           AND sr.product_id = p.product_id
                           AND sr.cancel_by IS NULL),
                damage
                AS
                   (SELECT d.product_id, d.damage_date transaction_date
                      FROM sales_product_damage_details d, product p
                     WHERE     d.damage_date > w_calculate_date - 1
                           AND d.branch_code = p_branch_code
                           AND d.product_id = p.product_id
                           AND d.cancel_by IS NULL)
               SELECT DISTINCT transaction_date as_of_date
                 FROM (SELECT transaction_date FROM stock
                       UNION ALL
                       SELECT transaction_date FROM stock_return
                       UNION ALL
                       SELECT transaction_date FROM sales
                       UNION ALL
                       SELECT transaction_date FROM sales_return
                       UNION ALL
                       SELECT transaction_date FROM damage) t
             ORDER BY transaction_date)
      LOOP
         FOR rec_date_list
            IN (WITH
                   product
                   AS
                      (SELECT product_id
                         FROM sales_products
                        WHERE product_id = p_product_code),
                   stock
                   AS
                      (  SELECT s.stock_date transaction_date,
                                p.product_id,
                                sum (s.quantity) quantity,
                                sum (s.purces_price) purces_rate,
                                sum (s.total_price) total_price
                           FROM sales_stockdetails s, product p
                          WHERE     s.stock_date = rec_date_range.as_of_date
                                AND s.branch_code = p_branch_code
                                AND s.status = 'S'
                                AND p.product_id = s.product_id
                       GROUP BY p.product_id, s.stock_date),
                   stock_return
                   AS
                      (  SELECT pr.return_date transaction_date,
                                pr.product_id,
                                sum (pr.returned_quantity) returned_quantity,
                                sum (pr.return_amount) return_amount
                           FROM sales_stock_return_details pr, product p
                          WHERE     pr.return_date = rec_date_range.as_of_date
                                AND pr.branch_code = p_branch_code
                                AND pr.product_id = p.product_id
                                AND pr.cancel_by IS NULL
                       GROUP BY pr.product_id, pr.return_date),
                   sales
                   AS
                      (  SELECT m.invoice_date transaction_date,
                                s.product_id,
                                sum (s.quantity) quantity,
                                sum (s.product_price) unit_price,
                                sum (s.total_price) total_price,
                                sum (s.discount_amount) discount_amount,
                                round (
                                   sum ((s.total_price - s.discount_amount)),
                                   2) net_price,
                                sum ((purchase_rate * s.quantity)) cost_of_good_sold
                           FROM sales_sales_details s,
                                sales_sales_master m,
                                product p
                          WHERE     s.invoice_number = m.invoice_number
                                AND m.invoice_date = rec_date_range.as_of_date
                                AND m.branch_code = p_branch_code
                                AND m.status <> 'C'
                                AND s.product_id = p.product_id
                       GROUP BY s.product_id, m.invoice_date),
                   sales_return
                   AS
                      (  SELECT sr.return_date transaction_date,
                                sr.product_id,
                                sum (sr.returned_quantity) returned_quantity,
                                sum (sr.return_amount) net_price
                           FROM sales_sales_return_details sr, product p
                          WHERE     sr.return_date = rec_date_range.as_of_date
                                AND sr.branch_code = p_branch_code
                                AND sr.product_id = p.product_id
                                AND sr.cancel_by IS NULL
                       GROUP BY sr.product_id, sr.return_date),
                   damage
                   AS
                      (  SELECT d.product_id,
                                d.damage_date transaction_date,
                                sum (d.damage_quantity) damage_quantity,
                                sum (d.damage_amount) damage_amount,
                                sum (d.receive_amount) receive_amount
                           FROM sales_product_damage_details d, product p
                          WHERE     d.damage_date = rec_date_range.as_of_date
                                AND d.branch_code = p_branch_code
                                AND d.product_id = p.product_id
                                AND d.cancel_by IS NULL
                       GROUP BY d.product_id, d.damage_date)
                  SELECT product_id,
                         transaction_date,
                         stock_quantity,
                         stock_total_price,
                         stock_return_quantity,
                         stock_return_total_price,
                         sales_quantity,
                         sales_total_price,
                         sales_discount_amount,
                         sales_return_quantity,
                         sales_return_total_price,
                         cost_of_good_sold,
                         damage_quantity,
                         damage_amount,
                         receive_amount
                    FROM (SELECT product.product_id,
                                 COALESCE (stock.transaction_date,
                                           stock_return.transaction_date,
                                           sales.transaction_date,
                                           sales_return.transaction_date,
                                           damage.transaction_date)
                                    transaction_date,
                                 COALESCE (stock.quantity, 0)
                                    stock_quantity,
                                 COALESCE (stock.total_price, 0)
                                    stock_total_price,
                                 COALESCE (stock_return.returned_quantity, 0)
                                    stock_return_quantity,
                                 COALESCE (stock_return.return_amount, 0)
                                    stock_return_total_price,
                                 COALESCE (sales.quantity, 0)
                                    sales_quantity,
                                 COALESCE (sales.net_price, 0)
                                    sales_total_price,
                                 COALESCE (sales.discount_amount, 0)
                                    sales_discount_amount,
                                 COALESCE (sales_return.returned_quantity, 0)
                                    sales_return_quantity,
                                 COALESCE (sales_return.net_price, 0)
                                    sales_return_total_price,
                                 COALESCE (sales.cost_of_good_sold, 0)
                                    cost_of_good_sold,
                                 COALESCE (damage.damage_quantity, 0)
                                    damage_quantity,
                                 COALESCE (damage.damage_amount, 0)
                                    damage_amount,
                                 COALESCE (damage.receive_amount, 0)
                                    receive_amount
                            FROM product
                                 FULL OUTER JOIN stock
                                    ON (stock.product_id = product.product_id)
                                 FULL OUTER JOIN stock_return
                                    ON (stock_return.product_id =
                                        product.product_id)
                                 FULL OUTER JOIN sales
                                    ON (sales.product_id = product.product_id)
                                 FULL OUTER JOIN sales_return
                                    ON (sales_return.product_id =
                                        product.product_id)
                                 FULL OUTER JOIN damage
                                    ON (damage.product_id = product.product_id))
                         t
                   WHERE transaction_date IS NOT NULL
                ORDER BY transaction_date)
         LOOP
            w_calculate_date := rec_date_list.transaction_date;
            w_product_available_stock :=
                 w_product_available_stock
               + rec_date_list.stock_quantity
               - rec_date_list.stock_return_quantity
               - rec_date_list.sales_quantity
               + rec_date_list.sales_return_quantity
               - rec_date_list.damage_quantity;

            w_cost_of_good_sold_balance :=
               w_cost_of_good_sold_balance + rec_date_list.cost_of_good_sold;

            w_total_purchase_balance :=
                 w_total_purchase_balance
               + rec_date_list.stock_total_price
               - rec_date_list.stock_return_total_price;

            w_total_sales_balance :=
                 w_total_sales_balance
               + rec_date_list.sales_total_price
               - rec_date_list.sales_return_total_price;

            ---- Calculation Purchase Rate

            w_product_purchase_rate := COALESCE (w_product_purchase_rate, 0);

            BEGIN
               SELECT product_available_stock, product_purchase_rate
                 INTO w_previous_available_stock, w_previous_purchase_rate
                 FROM sales_products_inventory_hist
                WHERE     branch_code = p_branch_code
                      AND product_id = p_product_code
                      AND inv_balance_date =
                          (SELECT max (inv_balance_date)
                            FROM sales_products_inventory_hist
                           WHERE     branch_code = p_branch_code
                                 AND product_id = p_product_code
                                 AND inv_balance_date < w_calculate_date);
            END;

            w_previous_available_stock :=
               COALESCE (w_previous_available_stock, 0);
            w_previous_purchase_rate :=
               COALESCE (w_previous_purchase_rate, 0);

            IF    rec_date_list.stock_quantity > 0
               OR w_previous_available_stock > 0
            THEN
               BEGIN
                  w_product_purchase_rate :=
                     (  (  (  w_previous_available_stock
                            * w_previous_purchase_rate)
                         + (rec_date_list.stock_total_price))
                      / (  w_previous_available_stock
                         + rec_date_list.stock_quantity));
               EXCEPTION
                  WHEN OTHERS
                  THEN
                     w_product_purchase_rate := w_previous_purchase_rate;
               END;
            ELSE
               w_product_purchase_rate := w_previous_purchase_rate;
            END IF;

            ---- End of Calculation Purchase Rate

            DELETE FROM sales_products_inventory_hist
                  WHERE     branch_code = p_branch_code
                        AND product_id = p_product_code
                        AND inv_balance_date = w_calculate_date;

            ---RAISE EXCEPTION USING MESSAGE = w_product_available_stock;

            INSERT INTO sales_products_inventory_hist (
                           branch_code,
                           product_id,
                           inv_balance_date,
                           product_total_stock,
                           total_order_quantity,
                           product_total_sales,
                           total_stock_return,
                           total_sales_return,
                           product_total_damage,
                           product_available_stock,
                           product_purchase_rate,
                           total_purchase_amount,
                           total_purchase_balance,
                           total_sales_amount,
                           total_sales_balance,
                           sales_return_amount,
                           total_damage_amount,
                           stock_return_amount,
                           cost_of_good_sold,
                           cost_of_good_sold_balance,
                           total_discount_receive,
                           total_discount_pay,
                           app_user_id,
                           app_data_time)
                 VALUES (p_branch_code,
                         p_product_code,
                         w_calculate_date,
                         rec_date_list.stock_quantity,
                         rec_date_list.damage_quantity,
                         rec_date_list.sales_quantity,
                         rec_date_list.stock_return_quantity,
                         rec_date_list.sales_return_quantity,
                         rec_date_list.damage_quantity,
                         COALESCE (w_product_available_stock, 0),
                         COALESCE (w_product_purchase_rate, 0),
                         rec_date_list.stock_total_price,
                         COALESCE (w_total_purchase_balance, 0.00),
                         rec_date_list.sales_total_price,
                         COALESCE (w_total_sales_balance, 0.00),
                         rec_date_list.sales_return_total_price,
                         rec_date_list.damage_amount,
                         rec_date_list.stock_return_total_price,
                         rec_date_list.cost_of_good_sold,
                         COALESCE (w_cost_of_good_sold_balance, 0.00),
                         0,
                         rec_date_list.sales_discount_amount,
                         'system',
                         current_timestamp);
         END LOOP;
      END LOOP;

      UPDATE sales_products_inventory_status
         SET inv_balance_upto_date = w_calculate_date,
             is_balance_updated = TRUE
       WHERE branch_code = p_branch_code 
       AND product_id = p_product_code;
   END LOOP;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_product_inventory_hist(p_branch_code integer, p_product_code character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_purchase_submit(date, integer, character, integer, integer, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_purchase_submit(p_purchase_date date, p_branch_code integer, p_app_user_id character, p_supplier_id integer, p_show_room_id integer, p_voucher_number character, p_comments character, OUT o_status character, OUT o_errm character, OUT o_purchase_ord_no character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_message               VARCHAR;
   w_purchase_ord_no       VARCHAR;
   w_total_product_price   NUMERIC (22, 2);
   w_total_product         NUMERIC (22, 2);
   w_discount_amount       NUMERIC (22, 2);
   w_voucher_number        VARCHAR;
   w_status                VARCHAR;
   w_errm                  VARCHAR;
BEGIN
   w_purchase_ord_no :=
      fn_get_inventory_number (30015,
                               100,
                               'ST',
                               'Purchase order Number',
                               9);

   INSERT INTO sales_purchase_order_dtl (purchase_ord_no,
                                         supplier_id,
                                         product_id,
                                         unit_price,
                                         g_total_price,
                                         discount_amount,
                                         total_pur_qnty,
                                         purchase_date,
                                         comments,
                                         app_user_id,
                                         branch_code)
      SELECT w_purchase_ord_no,
             p_supplier_id,
             t.product_id,
             t.unit_price,
             t.total_price,
             t.discount_amount,
             t.pur_qnty,
             p_purchase_date purchase_date,
             t.origin,
             t.app_user_id,
             p_branch_code
        FROM sales_purchase_order_dtl_temp t, sales_products p
       WHERE p.product_id = t.product_id AND t.app_user_id = p_app_user_id;

   SELECT sum (t.total_price), sum (t.pur_qnty), sum (t.discount_amount)
     INTO w_total_product_price, w_total_product, w_discount_amount
     FROM sales_purchase_order_dtl_temp t, sales_products p
    WHERE p.product_id = t.product_id AND t.app_user_id = p_app_user_id;

   INSERT INTO sales_purchasemasterauthq (purchase_ord_no,
                                          purchase_type,
                                          purchase_date,
                                          payment_comments,
                                          supplier_id,
                                          discount_amount,
                                          unit_price,
                                          total_pay,
                                          due_amount,
                                          g_total_price,
                                          product_id,
                                          status,
                                          origin,
                                          total_pur_qnty,
                                          voucher_number,
                                          show_room,
                                          comments,
                                          branch_code,
                                          app_user_id)
        VALUES (w_purchase_ord_no,
                'CS',
                p_purchase_date,
                NULL,
                p_supplier_id,
                0,
                0,
                0,
                0,
                w_total_product_price,
                0,
                'W',
                0,
                w_total_product,
                p_voucher_number,
                p_show_room_id,
                p_comments,
                p_branch_code,
                p_app_user_id);

   DELETE FROM sales_purchase_order_dtl_temp
         WHERE app_user_id = p_app_user_id;

   o_purchase_ord_no := w_purchase_ord_no;
   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_purchase_submit(p_purchase_date date, p_branch_code integer, p_app_user_id character, p_supplier_id integer, p_show_room_id integer, p_voucher_number character, p_comments character, OUT o_status character, OUT o_errm character, OUT o_purchase_ord_no character) OWNER TO delarship;

--
-- Name: fn_sales_sales_cancel(integer, character, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_sales_cancel(p_branch_code integer, p_app_user_id character, p_invoice_number character, p_cancel_reason character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                  VARCHAR;
   w_errm                    VARCHAR;
   product_list              RECORD;
   product_return_list       RECORD;
   product_return_details    RECORD;
   w_sales_date              DATE;
   w_tran_batch_number       INTEGER;
   w_sales_status            VARCHAR;
   w_parent_delar            INTEGER;
   w_counter                 INTEGER;
   w_last_balance_update     DATE;
   w_last_transaction_date   DATE;
BEGIN
   BEGIN
      SELECT invoice_date, tran_batch_number, status
        INTO STRICT w_sales_date, w_tran_batch_number, w_sales_status
        FROM sales_sales_master
       WHERE invoice_number = p_invoice_number;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         RAISE EXCEPTION
         USING MESSAGE = 'Invalid Invoice ' || p_invoice_number || ' Number !';
   END;

   IF w_sales_status = 'C'
   THEN
      w_status := 'E';
      w_errm := 'Invoice already canceled!';
      RAISE EXCEPTION USING MESSAGE = w_errm;
   END IF;

   BEGIN
      SELECT count (emi_reference_no)
        INTO w_counter
        FROM sales_emi_setup
       WHERE emi_reference_no = p_invoice_number AND emi_cancel_by IS NULL;
   END;

   IF w_counter > 0
   THEN
      w_status := 'E';
      w_errm := 'EMI Setup Exist for This Invoice!';
      RAISE EXCEPTION USING MESSAGE = w_errm;
   END IF;


   FOR product_list
      IN (SELECT s.*, m.invoice_date
            FROM sales_sales_details s, sales_sales_master m
           WHERE     m.invoice_number = p_invoice_number
                 AND s.invoice_number = m.invoice_number
                 AND m.branch_code = p_branch_code)
   LOOP
      w_last_transaction_date := product_list.invoice_date;

      SELECT inv_balance_upto_date
       INTO STRICT w_last_balance_update
       FROM sales_products_inventory_status
      WHERE     product_id = product_list.product_id
            AND branch_code = p_branch_code;

      IF w_last_transaction_date < w_last_balance_update
      THEN
         w_last_balance_update := w_last_transaction_date;
      ELSE
         w_last_balance_update := w_last_balance_update;
      END IF;

      IF w_last_transaction_date > w_last_transaction_date
      THEN
         w_last_transaction_date := w_last_transaction_date;
      ELSE
         w_last_transaction_date := w_last_transaction_date;
      END IF;

      UPDATE sales_products_inventory_status
         SET total_sales_amount =
                  total_sales_amount
                - (product_list.total_price - product_list.discount_amount),
             product_total_sales =
                product_total_sales - product_list.quantity,
             product_available_stock =
                product_available_stock + product_list.quantity,
             inv_balance_upto_date = w_last_balance_update,
             is_balance_updated = FALSE
       WHERE     product_id = product_list.product_id
             AND branch_code = p_branch_code;

      UPDATE sales_products
         SET total_sales_amount =
                  total_sales_amount
                - (product_list.total_price - product_list.discount_amount),
             product_total_sales =
                product_total_sales - product_list.quantity,
             product_available_stock =
                product_available_stock + product_list.quantity
       WHERE product_id = product_list.product_id;
   END LOOP;

   BEGIN
      SELECT *
        INTO w_status, w_errm
        FROM fn_finance_post_tran_cancel (p_branch_code,
                                          p_app_user_id,
                                          w_sales_date,
                                          w_tran_batch_number,
                                          p_cancel_reason);

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      ELSE
         BEGIN
            UPDATE sales_sales_master
               SET STATUS = 'C',
                   cancel_by = p_app_user_id,
                   cancel_on = current_timestamp
             WHERE     invoice_number = p_invoice_number
                   AND branch_code = p_branch_code;

            UPDATE sales_sales_details
               SET STATUS = 'C'
             WHERE     invoice_number = p_invoice_number
                   AND branch_code = p_branch_code;
         END;
      END IF;
   END;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_sales_cancel(p_branch_code integer, p_app_user_id character, p_invoice_number character, p_cancel_reason character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_sales_post(integer, character, character, character, character, character, character, character, character, character, numeric, numeric, character, character, character, character, numeric, numeric, date, numeric, numeric); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_sales_post(p_branch_code integer, p_center_code character, p_app_user_id character, p_invoice_number character, p_customer_phone character, p_customer_id character, p_customer_name character, p_customer_address character, p_account_number character, p_employee_id character, p_pay_amount numeric, p_invoice_discount numeric, p_tran_type_code character, p_bill_receive_gl character, p_bill_due_gl character, p_payment_document character, p_discount_rate numeric, p_discount_amount numeric, p_invoice_date date, p_latitude numeric, p_longitude numeric, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_error_message              VARCHAR;
   w_batch_number               INTEGER;
   w_check                      BOOLEAN;
   w_account_number             VARCHAR := '0';
   w_transaction_date           DATE;
   product_list                 RECORD;
   w_tran_gl_code               VARCHAR := '0';
   w_cash_transaction           BOOLEAN;
   w_total_leg                  INTEGER;
   w_total_debit_amount         NUMERIC (22, 2) := 0;
   w_total_credit_amount        NUMERIC (22, 2) := 0;
   w_account_banalce            NUMERIC (22, 2) := 0;
   w_credit_limit               NUMERIC (22, 2) := 0;
   w_serial_no                  INTEGER := 0;
   w_product_total_stock        INTEGER := 0;
   w_product_total_sales        INTEGER := 0;
   w_product_available_stock    INTEGER := 0;
   w_product_last_stock_date    DATE;
   w_product_last_sale_date     DATE;
   w_product_last_return_date   DATE;
   w_product_total_returned     INTEGER := 0;
   w_total_purchase_amount      NUMERIC (22, 2) := 0.00;
   w_total_return_amount        NUMERIC (22, 2) := 0.00;
   w_total_sales_amount         NUMERIC (22, 2) := 0.00;
   w_product_total_damage       INTEGER := 0;
   w_total_return_damage        NUMERIC (22, 2) := 0.00;
   w_last_order_date            DATE;
   w_total_order_quantity       INTEGER := 0;
   w_total_bill_amount          NUMERIC (22, 2) := 0.00;
   w_bill_amount                NUMERIC (22, 2) := 0.00;
   w_due_amount                 NUMERIC (22, 2) := 0.00;
   w_advance_pay                NUMERIC (22, 2) := 0.00;
   w_invoice_discount_gl        VARCHAR;
   w_status                     VARCHAR;
   w_errm                       VARCHAR;
   w_product_name               VARCHAR;
   w_tran_debit_account_type    VARCHAR;
   w_last_balance_update        DATE;
   w_last_transaction_date      DATE;
BEGIN
   BEGIN
      SELECT credit_limit, account_balance
        INTO w_credit_limit, w_account_banalce
        FROM finance_accounts_balance b
       WHERE b.account_number = p_account_number;
   END;

   BEGIN
      SELECT invoice_discount_gl
        INTO STRICT w_invoice_discount_gl
        FROM sales_application_settings;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         RAISE EXCEPTION USING MESSAGE = 'Discount Ledger is Not Configured!';
   END;

   FOR product_list
      IN (  SELECT s.invoice_number,
                   s.product_id,
                   s.serial_no,
                   s.service_type,
                   s.service_start_date,
                   s.service_end_date,
                   s.service_card_no,
                   s.product_price,
                   s.quantity,
                   s.total_price,
                     (s.total_price - (p.product_current_rate * s.quantity))
                   - discount_amount profit_amount,
                   p.product_current_rate purchase_rate,
                   s.discount_rate,
                   s.discount_amount,
                   s.status,
                   s.comments,
                   s.details_branch_code branch_code,
                   s.app_user_id,
                   s.app_data_time
              FROM sales_sales_details_temp s, sales_products p
             WHERE     p.product_id = s.product_id
                   AND s.app_user_id = p_app_user_id
          ORDER BY serial_no)
   LOOP
      BEGIN
         w_total_order_quantity :=
            w_total_order_quantity + product_list.quantity;
         w_serial_no := w_serial_no + 1;
         w_total_bill_amount :=
            w_total_bill_amount + product_list.total_price;
         w_bill_amount :=
              w_bill_amount
            + product_list.total_price
            - product_list.discount_amount;

         INSERT INTO sales_sales_details (invoice_number,
                                          center_code,
                                          client_id,
                                          product_id,
                                          serial_no,
                                          service_type,
                                          service_start_date,
                                          service_end_date,
                                          service_card_no,
                                          purchase_rate,
                                          product_price,
                                          quantity,
                                          returned_quantity,
                                          total_price,
                                          profit_amount,
                                          discount_rate,
                                          discount_amount,
                                          status,
                                          comments,
                                          branch_code,
                                          app_user_id,
                                          app_data_time)
              VALUES (p_invoice_number,
                      COALESCE (p_center_code, '0'),
                      p_customer_id,
                      product_list.product_id,
                      w_serial_no,
                      product_list.service_type,
                      product_list.service_start_date,
                      product_list.service_end_date,
                      product_list.service_card_no,
                      product_list.purchase_rate,
                      product_list.product_price,
                      product_list.quantity,
                      0,
                      product_list.total_price,
                      product_list.profit_amount,
                      product_list.discount_rate,
                      product_list.discount_amount,
                      'I',
                      product_list.comments,
                      p_branch_code,
                      product_list.app_user_id,
                      current_timestamp);
      END;

      BEGIN
         SELECT product_available_stock,
                inv_balance_upto_date,
                COALESCE (last_sale_date, p_invoice_date) last_sale_date
           INTO w_product_available_stock,
                w_last_balance_update,
                w_last_transaction_date
           FROM sales_products_inventory_status
          WHERE     product_id = product_list.product_id
                AND branch_code = p_branch_code;

         SELECT product_name
           INTO w_product_name
           FROM sales_products
          WHERE product_id = product_list.product_id;
      END;

      IF w_product_available_stock - product_list.quantity < 0
      THEN
         w_status := 'E';
         w_errm := 'Product ' || w_product_name || ' Out of Stock!';
         RAISE EXCEPTION USING MESSAGE = w_errm;
      END IF;

      w_last_balance_update := LEAST (w_last_balance_update, p_invoice_date);
      w_last_transaction_date :=
         GREATEST (w_last_transaction_date, p_invoice_date);

      UPDATE sales_products_inventory_status
         SET total_sales_amount =
                  total_sales_amount
                + (product_list.total_price - product_list.discount_amount),
             product_total_sales =
                product_total_sales + product_list.quantity,
             product_available_stock =
                product_available_stock - product_list.quantity,
             cost_of_good_sold =
                  cost_of_good_sold
                + (product_list.purchase_rate * product_list.quantity),
             last_sale_date = w_last_transaction_date,
             inv_balance_upto_date = w_last_balance_update,
             is_balance_updated = FALSE
       WHERE     product_id = product_list.product_id
             AND branch_code = p_branch_code;

      UPDATE sales_products
         SET total_sales_amount =
                  total_sales_amount
                + (product_list.total_price - product_list.discount_amount),
             product_total_sales =
                product_total_sales + product_list.quantity,
             product_available_stock =
                product_available_stock - product_list.quantity,
             product_last_sale_date = w_last_transaction_date
       WHERE product_id = product_list.product_id;
       
       -----update for SR stage------
       UPDATE delar_srstage_inventory_status
        SET total_sales_amount =
                 total_sales_amount
               + (product_list.total_price - product_list.discount_amount),
            product_total_sales =
               product_total_sales + product_list.quantity,
            product_available_stock =
               product_available_stock - product_list.quantity,
            cost_of_good_sold =
                 cost_of_good_sold
               + (product_list.purchase_rate * product_list.quantity),
            last_sale_date = w_last_transaction_date,
            inv_balance_upto_date = w_last_balance_update
      WHERE branch_code = p_branch_code
      and employee_id=p_employee_id
      AND product_id = product_list.product_id;
           
UPDATE delar_srstage_details
        SET sales_amount =
                 sales_amount
               + (product_list.total_price - product_list.discount_amount),
            sales_quantity =
               sales_quantity + product_list.quantity,
            sales_discount_amount =sales_discount_amount+product_list.discount_amount,
             total_price=total_price+product_list.product_price,
           discount_rate=  product_list.discount_rate
      WHERE branch_code = p_branch_code
      and employee_id=p_employee_id
      and invoice_date=p_invoice_date
      AND product_id = product_list.product_id;
      
   END LOOP;

   w_due_amount := w_bill_amount - p_pay_amount;

   IF w_due_amount < 0
   THEN
      w_advance_pay := p_pay_amount - w_bill_amount;
      w_due_amount := 0;
   END IF;

   w_bill_amount :=
      COALESCE (w_bill_amount, 0) - COALESCE (p_invoice_discount, 0);

   INSERT INTO sales_sales_master (invoice_number,
                                   center_code,
                                   invoice_date,
                                   customer_id,
                                   customer_name,
                                   customer_phone,
                                   customer_address,
                                   employee_id,
                                   payment_document,
                                   tran_type_code,
                                   total_quantity,
                                   returned_quantity,
                                   returned_amount,
                                   total_bill_amount,
                                   bill_amount,
                                   pay_amount,
                                   due_amount,
                                   advance_pay,
                                   total_discount_rate,
                                   total_discount_amount,
                                   invoice_discount,
                                   status,
                                   invoice_comments,
                                   branch_code,
                                   app_user_id,
                                   app_data_time,
                                   latitude,
                                   longitude)
           VALUES (
                     p_invoice_number,
                     COALESCE (p_center_code, '0'),
                     p_invoice_date,
                     P_customer_id,
                     P_customer_name,
                     P_customer_phone,
                     p_customer_address,
                     p_employee_id,
                     p_payment_document,
                     p_tran_type_code,
                     w_total_order_quantity,
                     0,
                     0,
                     w_total_bill_amount,
                     w_bill_amount,
                     p_pay_amount,
                     w_due_amount,
                     w_advance_pay,
                     p_discount_rate,
                       COALESCE (p_discount_amount, 0)
                     + COALESCE (p_invoice_discount, 0),
                     COALESCE (p_invoice_discount, 0),
                     'I',
                     NULL,
                     p_branch_code,
                     p_app_user_id,
                     current_timestamp,
                     p_latitude,
                     p_longitude);

   BEGIN
      SELECT *
        INTO w_status, w_errm, w_batch_number
        FROM fn_sales_sales_tran_table_insert (p_branch_code,
                                               COALESCE (p_center_code, '0'),
                                               p_app_user_id,
                                               p_customer_phone,
                                               p_account_number,
                                               w_bill_amount,
                                               p_pay_amount,
                                               p_invoice_discount,
                                               p_bill_receive_gl,
                                               p_bill_due_gl,
                                               w_invoice_discount_gl,
                                               'SALES',
                                               p_tran_type_code,
                                               p_invoice_date,
                                               p_employee_id,
                                               p_invoice_number);

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      END IF;
   END;

   BEGIN
      SELECT *
        INTO w_status, w_errm, w_batch_number
        FROM fn_finance_post_tran (p_branch_code,
                                   COALESCE (p_center_code, '0'),
                                   p_app_user_id,
                                   p_tran_type_code,
                                   p_invoice_date,
                                   'Sales Posting',
                                   'SALES');

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      ELSE
         UPDATE sales_sales_master
            SET tran_batch_number = w_batch_number
          WHERE     invoice_number = p_invoice_number
                AND invoice_date = p_invoice_date;
      END IF;
   END;

   DELETE FROM sales_sales_details_temp s
         WHERE s.app_user_id = p_app_user_id;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_sales_post(p_branch_code integer, p_center_code character, p_app_user_id character, p_invoice_number character, p_customer_phone character, p_customer_id character, p_customer_name character, p_customer_address character, p_account_number character, p_employee_id character, p_pay_amount numeric, p_invoice_discount numeric, p_tran_type_code character, p_bill_receive_gl character, p_bill_due_gl character, p_payment_document character, p_discount_rate numeric, p_discount_amount numeric, p_invoice_date date, p_latitude numeric, p_longitude numeric, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_sales_return(integer, character, character, date, character, integer, numeric, character, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_sales_return(p_branch_code integer, p_app_user_id character, p_invoice_number character, p_invoice_date date, p_product_id character, p_returned_quantity integer, p_returned_price numeric, p_return_reason character, p_return_date date, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                     VARCHAR;
   w_errm                       VARCHAR;
   product_list                 RECORD;
   w_invoice_date               DATE;
   w_tran_batch_number          INTEGER;
   w_invoice_status             VARCHAR;
   w_customer_phone             VARCHAR;
   w_tran_gl_code               VARCHAR := '0';
   w_cash_gl_code               VARCHAR := '0';
   w_customer_id                VARCHAR := '0';
   w_contra_gl_code             VARCHAR := '0';
   w_account_ledger_code        VARCHAR := '0';
   w_invoice_discount_gl        VARCHAR := '0';
   w_serial_no                  INTEGER := 0;
   w_tran_amount                NUMERIC (22, 2) := 0;
   w_profitloss_amount          NUMERIC (22, 2) := 0;
   w_tran_naration              VARCHAR;
   w_debit_credit               VARCHAR;
   w_center_code                VARCHAR;
   w_total_return_amount        NUMERIC (22, 2) := 0;
   w_total_pay_amount           NUMERIC (22, 2) := 0;
   w_total_due_amount           NUMERIC (22, 2) := 0;
   w_total_discount_amount      NUMERIC (22, 2) := 0;
   w_account_number             VARCHAR := '0';
   w_client_account             VARCHAR := '0';
   w_return_voucher             VARCHAR;
   w_invoice_number             VARCHAR;
   w_batch_number               INTEGER;
   w_sql_statements             VARCHAR;
   w_counter                    INTEGER;
   w_loss_adjustment_ledger     VARCHAR;
   w_profit_adjustment_ledger   VARCHAR;
   w_last_balance_update        DATE;
   w_last_transaction_date      DATE;


   cur_all_products CURSOR FOR
      SELECT quantity quantity,
             s.purchase_rate,
             s.discount_amount,
             s.total_price total_price,
             pay_amount,
             due_amount,
             s.product_id,
             s.client_id,
             s.branch_code,
             p.product_sales_gl,
             p.product_sales_ret_gl,
             p.product_profit_gl,
             p.product_loss_gl,
             s.returned_quantity,
             s.status,
             s.purchase_rate * quantity total_purchase_amount
        FROM sales_sales_details s, sales_products p, sales_sales_master m
       WHERE     p.product_id = s.product_id
             AND s.invoice_number = m.invoice_number
             AND s.branch_code = p_branch_code
             AND s.app_user_id = p_app_user_id
             AND s.invoice_number = p_invoice_number;

   cur_products CURSOR FOR
      SELECT p_returned_quantity quantity,
             s.purchase_rate,
             s.discount_amount,
             p_returned_price total_price,
             s.product_id,
             s.client_id,
             s.branch_code,
             p.product_sales_gl,
             p.product_sales_ret_gl,
             p.product_profit_gl,
             p.product_loss_gl,
             s.returned_quantity,
             s.status,
             s.purchase_rate * p_returned_quantity total_purchase_amount
        FROM sales_sales_details s, sales_products p
       WHERE     p.product_id = s.product_id
             AND s.branch_code = p_branch_code
             AND s.app_user_id = p_app_user_id
             AND s.invoice_number = p_invoice_number
             AND s.product_id = p_product_id;
BEGIN
   BEGIN
      SELECT customer_id,
             center_code,
             invoice_date,
             tran_batch_number,
             status,
             customer_phone,
             invoice_number,
             pay_amount,
             due_amount
        INTO STRICT w_customer_id,
                    w_center_code,
                    w_invoice_date,
                    w_tran_batch_number,
                    w_invoice_status,
                    w_customer_phone,
                    w_invoice_number,
                    w_total_pay_amount,
                    w_total_due_amount
        FROM sales_sales_master
       WHERE     invoice_number = p_invoice_number
             AND branch_code = p_branch_code;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         RAISE EXCEPTION USING MESSAGE = 'Invalid Invoice Number!';
   END;

   BEGIN
      SELECT DISTINCT account_number
        INTO w_client_account
        FROM finance_transaction_details
       WHERE     batch_number = w_tran_batch_number
             AND transaction_date = w_invoice_date
             AND account_number <> '0';
   EXCEPTION
      WHEN OTHERS
      THEN
         w_status := 'E';
         w_errm := SQLERRM;
         RAISE EXCEPTION USING MESSAGE = w_errm;
   END;

   BEGIN
      SELECT account_ledger_code
        INTO STRICT w_account_ledger_code
        FROM finance_accounts_balance
       WHERE account_number = w_client_account;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         RAISE EXCEPTION
         USING MESSAGE = 'Invalid Account Number ' || w_account_number || '!';
   END;

   BEGIN
      SELECT count (emi_reference_no)
        INTO w_counter
        FROM sales_emi_setup
       WHERE emi_reference_no = p_invoice_number AND emi_cancel_by IS NULL;
   END;

   IF w_counter > 0
   THEN
      w_status := 'E';
      w_errm := 'EMI Setup Exist for This Invoice!';
      RAISE EXCEPTION USING MESSAGE = w_errm;
   END IF;

   w_return_voucher :=
      fn_get_inventory_number (106,
                               1,
                               'IRT',
                               'Invoice Return Number');

   IF w_invoice_status = 'C'
   THEN
      w_status := 'E';
      w_errm := 'You can not return the canceled invoice!';
      RAISE EXCEPTION USING MESSAGE = w_errm;
   END IF;

   IF w_invoice_status = 'R'
   THEN
      w_status := 'E';
      w_errm := 'Invoice already returned!';
      RAISE EXCEPTION USING MESSAGE = w_errm;
   END IF;

   IF p_product_id != 'ALL'
   THEN
      OPEN cur_products;
   ELSE
      OPEN cur_all_products;
   END IF;

   LOOP
      IF p_product_id != 'ALL'
      THEN
         FETCH cur_products INTO product_list;
      ELSE
         FETCH cur_all_products INTO product_list;
      END IF;

      EXIT WHEN NOT FOUND;

      IF product_list.status = 'R'
      THEN
         w_status := 'E';
         w_errm := 'Invoice already returned!';
         RAISE EXCEPTION USING MESSAGE = w_errm;
      END IF;

      w_tran_amount := product_list.total_purchase_amount;

      IF w_tran_amount > 0
      THEN
         w_tran_gl_code := product_list.product_sales_gl;
         w_tran_naration := 'Invoice Return for ' || p_invoice_number;
         w_serial_no := w_serial_no + 1;
         w_debit_credit := 'D';
         w_account_number := '0';
         w_contra_gl_code := w_account_ledger_code;

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      w_center_code,
                      p_return_date,
                      w_serial_no,
                      w_account_number,
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      'SALES_RETURN',
                      w_tran_amount,
                      0,
                      w_customer_phone,
                      '',
                      NULL,
                      p_invoice_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);

         --w_tran_gl_code := product_list.product_sales_ret_gl;
         w_serial_no := w_serial_no + 1;
         w_debit_credit := 'C';
         w_account_number := w_client_account;
         w_tran_gl_code := '0';
         w_contra_gl_code := product_list.product_sales_gl;
         w_tran_amount :=
            product_list.total_price - product_list.discount_amount;

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      w_center_code,
                      p_return_date,
                      w_serial_no,
                      w_account_number,
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      'SALES_RETURN',
                      w_tran_amount,
                      0,
                      w_customer_phone,
                      '',
                      NULL,
                      p_invoice_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END IF;

      w_profitloss_amount :=
         (product_list.total_price - product_list.total_purchase_amount);

      w_total_discount_amount :=
         w_total_discount_amount + product_list.discount_amount;

      IF w_profitloss_amount > 0
      THEN
         w_tran_gl_code := product_list.product_profit_gl;
         w_tran_amount := w_profitloss_amount;
         w_tran_naration := 'Profit Reverse for Invoice ' || p_invoice_number;
         w_serial_no := w_serial_no + 1;
         w_debit_credit := 'D';
      ELSIF w_profitloss_amount < 0
      THEN
         w_tran_gl_code := product_list.product_loss_gl;
         w_tran_amount := abs (w_profitloss_amount);
         w_tran_naration := 'Loss Reverse for Invoice ' || p_invoice_number;
         w_serial_no := w_serial_no + 1;
         w_debit_credit := 'C';
      ELSE
         w_tran_amount = 0;
      END IF;

      IF w_tran_amount > 0
      THEN
         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      w_center_code,
                      p_return_date,
                      w_serial_no,
                      '0',
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      'SALES_RETURN',
                      w_tran_amount,
                      0,
                      w_customer_phone,
                      '',
                      NULL,
                      p_invoice_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END IF;

      INSERT INTO sales_sales_return_details (sales_invoice,
                                              client_id,
                                              sales_date,
                                              product_id,
                                              return_invoice,
                                              return_date,
                                              status,
                                              tran_type_code,
                                              tran_batch_number,
                                              returned_quantity,
                                              return_amount,
                                              purchase_value,
                                              return_reason,
                                              branch_code,
                                              center_code,
                                              app_user_id,
                                              app_data_time)
           VALUES (p_invoice_number,
                   product_list.client_id,
                   w_invoice_date,
                   product_list.product_id,
                   w_return_voucher,
                   p_return_date,
                   'R',
                   NULL,
                   NULL,
                   product_list.quantity,
                   product_list.total_price,
                   product_list.total_purchase_amount,
                   p_return_reason,
                   p_branch_code,
                   w_center_code,
                   p_app_user_id,
                   current_timestamp);

      SELECT inv_balance_upto_date,
             COALESCE (last_sales_return_date, p_return_date) last_sales_return_date
        INTO STRICT w_last_balance_update, w_last_transaction_date
        FROM sales_products_inventory_status
       WHERE     product_id = product_list.product_id
             AND branch_code = p_branch_code;

      w_last_balance_update := LEAST (w_last_balance_update, p_return_date);
      w_last_transaction_date :=
         GREATEST (w_last_transaction_date, p_return_date);

      UPDATE sales_products_inventory_status
         SET product_available_stock =
                  product_available_stock
                + (product_list.quantity - product_list.returned_quantity),
             total_sales_amount =
                total_sales_amount - product_list.total_price,
             product_total_sales =
                  product_total_sales
                - (product_list.quantity - product_list.returned_quantity),
             cost_of_good_sold =
                cost_of_good_sold - product_list.total_purchase_amount,
             total_sales_return =
                total_sales_return + product_list.returned_quantity,
             last_sales_return_date = w_last_transaction_date,
             inv_balance_upto_date = w_last_balance_update,
             is_balance_updated = FALSE
       WHERE     product_id = product_list.product_id
             AND branch_code = p_branch_code;

      UPDATE sales_products
         SET product_available_stock =
                  product_available_stock
                + (product_list.quantity - product_list.returned_quantity),
             total_sales_amount =
                total_sales_amount - product_list.total_price,
             product_total_sales =
                  product_total_sales
                - (product_list.quantity - product_list.returned_quantity)
       WHERE product_id = product_list.product_id;

      UPDATE sales_sales_details
         SET returned_quantity =
                  returned_quantity
                + (product_list.quantity - product_list.returned_quantity),
             STATUS =
                (CASE
                    WHEN quantity = product_list.quantity THEN 'R'
                    ELSE 'P'
                 END)
       WHERE     invoice_number = p_invoice_number
             AND branch_code = p_branch_code
             AND product_id = product_list.product_id;

      BEGIN
         UPDATE sales_sales_master
            SET STATUS = 'P',
                returned_quantity =
                     returned_quantity
                   + (product_list.quantity - product_list.returned_quantity),
                returned_amount = returned_amount + product_list.total_price
          WHERE     invoice_number = p_invoice_number
                AND branch_code = p_branch_code;
      END;
   END LOOP;

   IF w_total_discount_amount > 0
   THEN
      BEGIN
         BEGIN
            SELECT invoice_discount_gl
              INTO STRICT w_invoice_discount_gl
              FROM sales_application_settings;
         EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
               RAISE EXCEPTION
               USING MESSAGE = 'Discount Ledger is Not Configured!';
         END;

         w_debit_credit := 'C';
         w_tran_amount := w_total_discount_amount;
         w_tran_naration := 'Discount Reverse for ' || p_invoice_number;
         w_serial_no := w_serial_no + 1;
         w_tran_gl_code := w_invoice_discount_gl;
         w_contra_gl_code := '0';

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      w_center_code,
                      p_return_date,
                      w_serial_no,
                      '0',
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      'SALES_RETURN',
                      w_tran_amount,
                      0,
                      w_customer_phone,
                      '',
                      NULL,
                      p_invoice_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END;
   END IF;

   BEGIN
      SELECT *
        INTO w_status, w_errm, w_batch_number
        FROM fn_finance_post_tran (p_branch_code,
                                   w_center_code,
                                   p_app_user_id,
                                   'SALES_RETURN',
                                   p_return_date,
                                   p_return_reason,
                                   'SALES_RETURN');

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      ELSE
         BEGIN
            UPDATE sales_sales_master
               SET STATUS =
                      (CASE
                          WHEN total_quantity = returned_quantity THEN 'R'
                          ELSE 'P'
                       END)
             WHERE     invoice_number = p_invoice_number
                   AND branch_code = p_branch_code;
         END;

         BEGIN
            UPDATE sales_sales_return_details
               SET tran_batch_number = w_batch_number
             WHERE     return_invoice = w_return_voucher
                   AND branch_code = p_branch_code;
         END;
      END IF;
   END;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_sales_return(p_branch_code integer, p_app_user_id character, p_invoice_number character, p_invoice_date date, p_product_id character, p_returned_quantity integer, p_returned_price numeric, p_return_reason character, p_return_date date, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_sales_tran_table_insert(integer, character, character, character, character, numeric, numeric, numeric, character, character, character, character, character, date, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_sales_tran_table_insert(p_branch_code integer, p_center_code character, p_app_user_id character, p_customer_phone character, p_account_number character, p_bill_amount numeric, p_pay_amount numeric, p_discount_amount numeric, p_bill_receive_gl character, p_bill_due_gl character, p_discount_ledger character, p_transaction_type character, p_payment_type character, p_transaction_date date, p_employee_id character, p_document_number character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_error_message             VARCHAR;
   w_debit_credit              VARCHAR;
   w_batch_serial              INTEGER;
   w_tran_amount               NUMERIC (22, 2) := 0;
   w_total_debit_amount        NUMERIC (22, 2) := 0;
   w_total_credit_amount       NUMERIC (22, 2) := 0;
   w_total_order_amount        NUMERIC (22, 2) := 0;
   w_total_discount_amount     NUMERIC (22, 2) := 0;
   w_tran_naration             VARCHAR;
   tran_list                   RECORD;
   w_tran_gl_code              VARCHAR := '0';
   w_contra_gl_code            VARCHAR := '0';
   w_cash_contra_gl_code       VARCHAR := '0';
   w_serial_no                 INTEGER := 0;
   w_status                    VARCHAR;
   w_errm                      VARCHAR;
   w_tran_debit_account_type   VARCHAR;
   w_client_id                 VARCHAR;
   w_account_number            VARCHAR;
BEGIN
   IF p_transaction_type IN ('SALES', 'ORDER')
   THEN
      w_debit_credit := 'C';
   ELSE
      w_debit_credit := 'C';
   END IF;

   w_total_discount_amount := COALESCE (p_discount_amount, 0);

   FOR tran_list
      IN (SELECT *
          FROM (  SELECT sum (tran_amount) tran_amount,
                         sum (product_actual_profit) product_actual_profit,
                         sum (discount_amount) discount_amount,
                         sum (purchase_tran_amount) purchase_tran_amount,
                         tran_gl_code,
                         product_profit_gl,
                         product_loss_gl,
                         tran_naration
                    FROM (  SELECT (p.product_current_rate * s.quantity)
                                      purchase_tran_amount,
                                   (s.total_price)
                                      tran_amount,
                                   s.discount_amount
                                      discount_amount,
                                   (CASE
                                       WHEN p_transaction_type = 'STOCK'
                                       THEN
                                          product_stock_gl
                                       WHEN p_transaction_type = 'SALES'
                                       THEN
                                          product_sales_gl
                                       WHEN p_transaction_type = 'ORDER'
                                       THEN
                                          product_order_gl
                                       WHEN p_transaction_type = 'PROFIT'
                                       THEN
                                          product_profit_gl
                                       WHEN p_transaction_type = 'LOSS'
                                       THEN
                                          product_loss_gl
                                    END)
                                      tran_gl_code,
                                   substr (
                                         initcap (p_transaction_type)
                                      || ' for '
                                      || p.product_name,
                                      0,
                                      100)
                                      tran_naration,
                                     (  s.total_price
                                      - (p.product_current_rate * s.quantity))
                                   - discount_amount
                                      profit_without_discount,
                                   (  s.total_price
                                    - (p.product_current_rate * s.quantity))
                                      product_actual_profit,
                                   product_profit_gl,
                                   product_loss_gl
                              FROM sales_sales_details_temp s, sales_products p
                             WHERE     p.product_id = s.product_id
                                   AND s.app_user_id = p_app_user_id
                          ORDER BY s.id) o
                GROUP BY tran_gl_code,
                         tran_naration,
                         product_profit_gl,
                         product_loss_gl) s)
   LOOP
      ---- Product Sales Leg

      w_tran_gl_code := tran_list.tran_gl_code;
      w_cash_contra_gl_code := w_tran_gl_code;
      w_debit_credit := 'C';
      w_tran_amount := tran_list.purchase_tran_amount;

      -- RAISE EXCEPTION USING MESSAGE = tran_list.purchase_tran_amount;

      w_tran_naration := tran_list.tran_naration;
      w_serial_no := w_serial_no + 1;

      w_total_discount_amount :=
         w_total_discount_amount + tran_list.discount_amount;

      IF p_pay_amount = p_bill_amount
      THEN
         w_contra_gl_code := p_bill_receive_gl;
      END IF;

      IF w_tran_amount > 0
      THEN
         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      p_center_code,
                      p_transaction_date,
                      w_serial_no,
                      '0',
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      p_transaction_type,
                      w_tran_amount,
                      0,
                      p_employee_id,
                      '',
                      NULL,
                      p_document_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END IF;

      ---- Product Profit/Loss Leg

      IF tran_list.product_actual_profit > 0
      THEN
         w_tran_gl_code := tran_list.product_profit_gl;
         w_tran_amount := tran_list.product_actual_profit;
         w_tran_naration :=
            'Profit Posting for Invoice ' || p_document_number;
         w_serial_no := w_serial_no + 1;
         w_debit_credit := 'C';
      ELSIF tran_list.product_actual_profit < 0
      THEN
         w_tran_gl_code := tran_list.product_loss_gl;
         w_tran_amount := abs (tran_list.product_actual_profit);
         w_tran_naration := 'Loss Posting for Invoice ' || p_document_number;
         w_serial_no := w_serial_no + 1;
         w_debit_credit := 'D';
      ELSE
         w_tran_amount = 0;
      END IF;

      IF w_tran_amount > 0
      THEN
         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      p_center_code,
                      p_transaction_date,
                      w_serial_no,
                      '0',
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      p_transaction_type,
                      w_tran_amount,
                      0,
                      p_employee_id,
                      '',
                      NULL,
                      p_document_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END IF;
   END LOOP;

   IF w_total_discount_amount > 0
   THEN
      BEGIN
         w_debit_credit := 'D';
         w_tran_amount := w_total_discount_amount;
         w_tran_naration :=
            'Discount for ' || p_transaction_type || ' ' || p_document_number;
         w_serial_no := w_serial_no + 1;
         w_tran_gl_code := p_discount_ledger;
         w_contra_gl_code := '0';

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      p_center_code,
                      p_transaction_date,
                      w_serial_no,
                      '0',
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      p_transaction_type,
                      w_tran_amount,
                      0.00,
                      p_customer_phone,
                      NULL,
                      NULL,
                      p_document_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END;
   END IF;

   -- cash debit

   IF p_pay_amount > 0
   THEN
      BEGIN
         w_debit_credit := 'D';
         w_tran_amount := p_pay_amount;
         w_tran_naration :=
               'Payment Receive for '
            || p_transaction_type
            || ' '
            || p_document_number;
         w_serial_no := w_serial_no + 1;

         IF CHAR_LENGTH (w_tran_debit_account_type) > 0
         THEN
            w_account_number := p_account_number;
            w_tran_gl_code := '0';
         ELSE
            w_tran_gl_code := p_bill_receive_gl;
            w_account_number := '0';
            w_contra_gl_code := w_cash_contra_gl_code;
         END IF;

         --RAISE EXCEPTION USING MESSAGE = p_pay_amount||' TY '||p_payment_type||' AC '||w_account_number;

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      p_center_code,
                      p_transaction_date,
                      w_serial_no,
                      w_account_number,
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      p_transaction_type,
                      w_tran_amount,
                      0.00,
                      p_customer_phone,
                      NULL,
                      NULL,
                      p_document_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END;
   END IF;

   IF p_pay_amount > 0
   THEN
      BEGIN
         w_debit_credit := 'C';
         w_tran_amount := p_pay_amount;
         w_tran_naration :=
               'Payment Receive for '
            || p_transaction_type
            || ' '
            || p_document_number;
         w_serial_no := w_serial_no + 1;

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      p_center_code,
                      p_transaction_date,
                      w_serial_no,
                      p_account_number,
                      '0',
                      w_contra_gl_code,
                      w_debit_credit,
                      p_transaction_type,
                      w_tran_amount,
                      0.00,
                      p_customer_phone,
                      NULL,
                      NULL,
                      p_document_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END;
   END IF;

   IF p_bill_amount > 0
   THEN
      BEGIN
         w_debit_credit := 'D';
         w_tran_amount := p_bill_amount;
         w_tran_naration :=
               'Bill Payment for Purchase '
            || p_transaction_type
            || ' '
            || p_document_number;
         w_serial_no = w_serial_no + 1;

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      p_center_code,
                      p_transaction_date,
                      w_serial_no,
                      p_account_number,
                      '0',
                      w_contra_gl_code,
                      w_debit_credit,
                      p_transaction_type,
                      w_tran_amount,
                      0.00,
                      p_customer_phone,
                      NULL,
                      NULL,
                      p_document_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END;
   END IF;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_sales_tran_table_insert(p_branch_code integer, p_center_code character, p_app_user_id character, p_customer_phone character, p_account_number character, p_bill_amount numeric, p_pay_amount numeric, p_discount_amount numeric, p_bill_receive_gl character, p_bill_due_gl character, p_discount_ledger character, p_transaction_type character, p_payment_type character, p_transaction_date date, p_employee_id character, p_document_number character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_stock_authorization(integer, character, character, character, numeric, numeric, numeric, character, character, date, character, character, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_stock_authorization(p_branch_code integer, p_app_user_id character, p_supplier_id character, p_account_number character, p_bill_amount numeric, p_pay_amount numeric, p_discount_amount numeric, p_bill_payment_gl character, p_transaction_type character, p_stock_date date, p_stock_id character, p_approve_reject character, p_voucher_number character, p_payment_comments character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_error_message             VARCHAR;
   w_batch_serial              INTEGER;
   w_tran_amount               NUMERIC (22, 2) := 0;
   w_total_product_price       NUMERIC (22, 2) := 0;
   w_discount_amount           NUMERIC (22, 2) := 0;
   w_product_current_rate      NUMERIC (22, 2) := 0;
   w_total_product             INTEGER;
   w_product_available_stock   INTEGER;
   w_tran_naration             VARCHAR;
   product_list                RECORD;
   w_tran_gl_code              VARCHAR := '0';
   w_serial_no                 INTEGER := 0;
   w_status                    VARCHAR;
   w_errm                      VARCHAR;
   w_batch_number              INTEGER;
   w_product_id                VARCHAR;
   w_last_balance_update       DATE;
   w_last_transaction_date     DATE;
BEGIN
   IF p_approve_reject = 'A'
   THEN
      SELECT sum (t.total_price), sum (t.quantity), sum (t.discount_amount)
        INTO w_total_product_price, w_total_product, w_discount_amount
        FROM sales_stockdetails t, sales_products p
       WHERE p.product_id = t.product_id AND stock_id = p_stock_id;

      w_discount_amount := p_discount_amount;
      w_total_product_price := p_bill_amount;

      FOR product_list IN (SELECT *
                             FROM sales_stockdetails s
                            WHERE s.stock_id = p_stock_id)
      LOOP
         BEGIN
            SELECT product_id, product_current_rate, product_available_stock
              INTO STRICT w_product_id,
                          w_product_current_rate,
                          w_product_available_stock
              FROM sales_products
             WHERE product_id = product_list.product_id;

            IF w_product_available_stock < 0
            THEN
               RAISE EXCEPTION
               USING MESSAGE = 'Available stock can not be less then zero!';
            END IF;

            BEGIN
               w_product_current_rate :=
                  round (
                     (  (  (  w_product_current_rate
                            * w_product_available_stock)
                         + product_list.total_price)
                      / (w_product_available_stock + product_list.quantity)),
                     2);
            EXCEPTION
               WHEN OTHERS
               THEN
                  w_product_current_rate := w_product_current_rate;
            END;

            UPDATE sales_products
               SET product_total_stock =
                      product_total_stock + product_list.quantity,
                   product_available_stock =
                      product_available_stock + product_list.quantity,
                   total_purchase_amount =
                      total_purchase_amount + product_list.total_price,
                   product_last_stock_date = p_stock_date,
                   product_current_rate = w_product_current_rate
             WHERE product_id = product_list.product_id;
         EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
               RAISE EXCEPTION USING MESSAGE = 'Invalid Product Code!';
         END;

         BEGIN
            SELECT product_id, inv_balance_upto_date, last_stock_date
              INTO STRICT w_product_id,
                          w_last_balance_update,
                          w_last_transaction_date
              FROM sales_products_inventory_status
             WHERE     product_id = product_list.product_id
                   AND branch_code = p_branch_code;

            w_last_balance_update :=
               LEAST (w_last_balance_update, p_stock_date);
            w_last_transaction_date :=
               GREATEST (w_last_transaction_date, p_stock_date);

            UPDATE sales_products_inventory_status
               SET product_total_stock =
                      product_total_stock + product_list.quantity,
                   product_available_stock =
                      product_available_stock + product_list.quantity,
                   total_purchase_amount =
                      total_purchase_amount + product_list.total_price,
                   last_stock_date = w_last_transaction_date,
                   inv_balance_upto_date = w_last_balance_update,
                   is_balance_updated = FALSE
             WHERE     product_id = product_list.product_id
                   AND branch_code = p_branch_code;
         EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
               INSERT INTO sales_products_inventory_status (
                              product_id,
                              product_total_stock,
                              total_order_quantity,
                              product_total_sales,
                              total_stock_return,
                              total_sales_return,
                              product_total_damage,
                              product_available_stock,
                              last_stock_date,
                              last_order_date,
                              last_sale_date,
                              last_stock_return_date,
                              last_sales_return_date,
                              inv_balance_upto_date,
                              total_purchase_amount,
                              product_purchase_rate,
                              total_sales_amount,
                              sales_return_amount,
                              total_damage_amount,
                              damage_receive_amount,
                              cost_of_good_sold,
                              stock_return_amount,
                              total_discount_pay,
                              total_discount_receive,
                              branch_code,
                              is_balance_updated,
                              app_user_id,
                              app_data_time)
                    VALUES (product_list.product_id,
                            product_list.quantity,
                            0,
                            0,
                            0,
                            0,
                            0,
                            product_list.quantity,
                            p_stock_date,
                            NULL,
                            NULL,
                            NULL,
                            NULL,
                            p_stock_date - 1,
                            product_list.total_price,
                            0,
                            0,
                            0,
                            0.00,
                            0.00,
                            0.00,
                            0.00,
                            0.00,
                            0.00,
                            p_branch_code,
                            FALSE,
                            p_app_user_id,
                            current_timestamp);
         END;
      END LOOP;

      BEGIN
         INSERT INTO sales_stockmaster (stock_id,
                                        supplier_id,
                                        stock_date,
                                        voucher_number,
                                        show_room,
                                        status,
                                        tran_type_code,
                                        payment_comments,
                                        total_quantity,
                                        returned_quantity,
                                        returned_amount,
                                        cancel_quantity,
                                        cancel_amount,
                                        total_price,
                                        total_pay,
                                        due_amount,
                                        comments,
                                        branch_code,
                                        app_user_id,
                                        app_data_time)
            SELECT stock_id,
                   p_supplier_id,
                   p_stock_date,
                   p_voucher_number,
                   show_room,
                   'S',
                   p_transaction_type,
                   p_payment_comments,
                   total_quantity,
                   returned_quantity,
                   returned_amount,
                   cancel_quantity,
                   cancel_amount,
                   total_price,
                   p_pay_amount,
                   w_total_product_price - p_pay_amount,
                   comments,
                   p_branch_code,
                   app_user_id,
                   app_data_time
              FROM sales_stockmasterauthq
             WHERE stock_id = p_stock_id;
      END;

      IF p_bill_amount > 0
      THEN
         BEGIN
            SELECT *
              INTO w_status, w_errm, w_batch_number
              FROM fn_sales_stock_tran_table_insert (p_branch_code,
                                                     p_app_user_id,
                                                     p_supplier_id,
                                                     p_account_number,
                                                     w_total_product_price,
                                                     p_pay_amount,
                                                     p_bill_payment_gl,
                                                     'STOCK',
                                                     p_transaction_type,
                                                     p_stock_date,
                                                     p_stock_id);

            IF w_status = 'E'
            THEN
               RAISE EXCEPTION USING MESSAGE = w_errm;
            END IF;
         END;

         BEGIN
            SELECT *
              INTO w_status, w_errm, w_batch_number
              FROM fn_finance_post_tran (p_branch_code,
                                         '0',
                                         p_app_user_id,
                                         p_transaction_type,
                                         p_stock_date,
                                         'Stock Posting',
                                         'STOCK');

            IF w_status = 'E' AND w_batch_number = 0
            THEN
               RAISE EXCEPTION USING MESSAGE = w_errm;
            ELSE
               UPDATE sales_stockmaster
                  SET tran_batch_number = w_batch_number, status = 'S'
                WHERE stock_id = p_stock_id;

               UPDATE sales_stockdetails
                  SET status = 'S', supplier_id = p_supplier_id
                WHERE stock_id = p_stock_id;

               DELETE FROM sales_stockmasterauthq
                     WHERE stock_id = p_stock_id;
            END IF;
         END;
      ELSE
         UPDATE sales_stockmaster
            SET tran_batch_number = w_batch_number, status = 'S'
          WHERE stock_id = p_stock_id;

         UPDATE sales_stockdetails
            SET status = 'S', supplier_id = p_supplier_id
          WHERE stock_id = p_stock_id;

         DELETE FROM sales_stockmasterauthq
               WHERE stock_id = p_stock_id;
      END IF;
   ELSE
      UPDATE sales_stockdetails
         SET status = 'J'
       WHERE stock_id = p_stock_id;

      UPDATE sales_stockmasterauthq
         SET status = 'J'
       WHERE stock_id = p_stock_id;
   END IF;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_stock_authorization(p_branch_code integer, p_app_user_id character, p_supplier_id character, p_account_number character, p_bill_amount numeric, p_pay_amount numeric, p_discount_amount numeric, p_bill_payment_gl character, p_transaction_type character, p_stock_date date, p_stock_id character, p_approve_reject character, p_voucher_number character, p_payment_comments character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_stock_cancel(integer, character, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_stock_cancel(p_branch_code integer, p_app_user_id character, p_stock_id character, p_cancel_reason character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                  VARCHAR;
   w_errm                    VARCHAR;
   product_list              RECORD;
   product_return_list       RECORD;
   product_return_details    RECORD;
   w_stock_date              DATE;
   w_tran_batch_number       INTEGER;
   w_stock_status            VARCHAR;
   w_last_balance_update     DATE;
   w_last_transaction_date   DATE;
BEGIN
   BEGIN
      SELECT stock_date, tran_batch_number, status
        INTO w_stock_date, w_tran_batch_number, w_stock_status
        FROM sales_stockmaster
       WHERE stock_id = p_stock_id;
   END;

   IF w_stock_status = 'C'
   THEN
      w_status := 'E';
      w_errm := 'Batch already canceled!';
      RAISE EXCEPTION USING MESSAGE = w_errm;
   END IF;


   FOR product_list IN (SELECT *
                          FROM sales_stockdetails s
                         WHERE s.stock_id = p_stock_id)
   LOOP
      w_last_transaction_date := product_list.stock_date;

      SELECT inv_balance_upto_date
       INTO STRICT w_last_balance_update
       FROM sales_products_inventory_status
      WHERE     product_id = product_list.product_id
            AND branch_code = p_branch_code;

      w_last_balance_update :=
         LEAST (w_last_balance_update, w_last_transaction_date);
      w_last_transaction_date :=
         GREATEST (w_last_transaction_date, w_last_transaction_date);

      UPDATE sales_products_inventory_status
         SET product_total_stock =
                  product_total_stock
                - (product_list.quantity - product_list.returned_quantity),
             product_available_stock =
                  product_available_stock
                - (product_list.quantity - product_list.returned_quantity),
             total_purchase_amount =
                total_purchase_amount - product_list.total_price,
             inv_balance_upto_date = w_last_balance_update,
             is_balance_updated = FALSE
       WHERE     product_id = product_list.product_id
             AND branch_code = p_branch_code;

      UPDATE sales_products
         SET product_total_stock =
                  product_total_stock
                - (product_list.quantity - product_list.returned_quantity),
             product_available_stock =
                  product_available_stock
                - (product_list.quantity - product_list.returned_quantity),
             total_purchase_amount =
                total_purchase_amount - product_list.total_price
       WHERE product_id = product_list.product_id;

      UPDATE sales_stockdetails
         SET STATUS = 'C'
       WHERE     stock_id = p_stock_id
             AND branch_code = p_branch_code
             AND product_id = product_list.product_id;
   END LOOP;

   BEGIN
      FOR product_return_list IN (SELECT DISTINCT stock_id,
                                                  return_date,
                                                  tran_batch_number,
                                                  branch_code
                                    FROM sales_stock_return_details
                                   WHERE stock_id = p_stock_id)
      LOOP
         SELECT *
         INTO w_status, w_errm
         FROM fn_finance_post_tran_cancel (
                 product_return_list.branch_code,
                 p_app_user_id,
                 product_return_list.return_date,
                 product_return_list.tran_batch_number,
                 p_cancel_reason);

         IF w_status = 'E'
         THEN
            RAISE EXCEPTION USING MESSAGE = w_errm;
         ELSE
            FOR product_return_details IN (SELECT product_id,
                                                  returned_quantity,
                                                  return_amount,
                                                  branch_code
                                             FROM sales_stock_return_details
                                            WHERE stock_id = p_stock_id)
            LOOP
               UPDATE sales_products_inventory_status
                  SET product_available_stock =
                           product_available_stock
                         - (product_return_details.returned_quantity),
                      total_stock_return =
                           total_stock_return
                         + (product_return_details.returned_quantity),
                      last_stock_return_date = current_date,
                      total_stock_return_amount =
                           total_stock_return_amount
                         + product_return_details.return_amount
                WHERE     product_id = product_return_details.product_id
                      AND branch_code = product_return_details.branch_code;

               UPDATE sales_products
                  SET total_stock_return =
                           total_stock_return
                         - product_return_details.returned_quantity,
                      total_stock_return_amount =
                           total_stock_return_amount
                         - product_return_details.return_amount
                WHERE product_id = product_return_details.product_id;

               UPDATE sales_stock_return_details
                  SET status = 'C'
                WHERE     product_id = product_return_details.product_id
                      AND stock_id = p_stock_id
                      AND branch_code = p_branch_code;
            END LOOP;
         END IF;
      END LOOP;
   END;

   BEGIN
      SELECT *
        INTO w_status, w_errm
        FROM fn_finance_post_tran_cancel (p_branch_code,
                                          p_app_user_id,
                                          w_stock_date,
                                          w_tran_batch_number,
                                          p_cancel_reason);

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      ELSE
         BEGIN
            UPDATE sales_stockmaster
               SET STATUS = 'C'
             WHERE stock_id = p_stock_id;
         END;
      END IF;
   END;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_stock_cancel(p_branch_code integer, p_app_user_id character, p_stock_id character, p_cancel_reason character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_stock_return(integer, character, character, date, character, integer, character, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_stock_return(p_branch_code integer, p_app_user_id character, p_stock_id character, p_stock_date date, p_product_id character, p_returned_quantity integer, p_return_reason character, p_return_date date, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                  VARCHAR;
   w_errm                    VARCHAR;
   product_list              RECORD;
   w_stock_date              DATE;
   w_tran_batch_number       INTEGER;
   w_stock_status            VARCHAR;
   w_supplier_phone          VARCHAR;
   w_tran_gl_code            VARCHAR := '0';
   w_account_ledger_code     VARCHAR := '0';
   w_contra_gl_code          VARCHAR := '0';
   w_serial_no               INTEGER := 0;
   w_tran_amount             NUMERIC (22, 2) := 0;
   w_tran_naration           VARCHAR;
   w_debit_credit            VARCHAR;
   w_total_return_amount     NUMERIC (22, 2) := 0;
   w_account_number          VARCHAR := 0;
   w_supplier_account        VARCHAR := '0';
   w_return_voucher          VARCHAR;
   w_stock_voucher_number    VARCHAR;
   w_batch_number            INTEGER;
   w_sql_statements          VARCHAR;
   w_supplier_id             VARCHAR;
   w_last_balance_update     DATE;
   w_last_transaction_date   DATE;

   cur_all_products CURSOR FOR
      SELECT s.quantity,
             s.quantity * s.purces_price total_price,
             s.purces_price,
             s.product_id,
             s.branch_code,
             p.product_stock_gl,
             s.returned_quantity
        FROM sales_stockdetails s, sales_products p
       WHERE     p.product_id = s.product_id
             AND s.branch_code = p_branch_code
             AND s.app_user_id = p_app_user_id
             AND s.stock_id = p_stock_id;

   cur_products CURSOR FOR
      SELECT p_returned_quantity quantity,
             p_returned_quantity * s.purces_price total_price,
             s.purces_price,
             s.product_id,
             s.branch_code,
             p.product_stock_gl,
             s.returned_quantity
        FROM sales_stockdetails s, sales_products p
       WHERE     p.product_id = s.product_id
             AND s.branch_code = p_branch_code
             AND s.app_user_id = p_app_user_id
             AND s.stock_id = p_stock_id
             AND s.product_id = p_product_id;
BEGIN
   BEGIN
      SELECT supplier_id,
             stock_date,
             tran_batch_number,
             status,
             voucher_number
        INTO w_supplier_id,
             w_stock_date,
             w_tran_batch_number,
             w_stock_status,
             w_stock_voucher_number
        FROM sales_stockmaster
       WHERE stock_id = p_stock_id AND branch_code = p_branch_code;
   END;

   IF w_stock_status = 'R'
   THEN
      RAISE EXCEPTION USING MESSAGE = 'Transaction already returned!';
   END IF;

   w_return_voucher :=
      fn_get_inventory_number (30016,
                               1,
                               'RT',
                               'Stock Return Voucher Number',
                               8);

   BEGIN
      SELECT DISTINCT account_number
        INTO w_supplier_account
        FROM finance_transaction_details
       WHERE     batch_number = w_tran_batch_number
             AND transaction_date = w_stock_date
             AND branch_code = p_branch_code
             AND account_number <> '0';
   EXCEPTION
      WHEN OTHERS
      THEN
         w_status := 'E';
         w_errm := SQLERRM;
         RAISE EXCEPTION USING MESSAGE = w_errm;
   END;

   BEGIN
      SELECT account_ledger_code
        INTO STRICT w_account_ledger_code
        FROM finance_accounts_balance
       WHERE account_number = w_supplier_account;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         RAISE EXCEPTION
         USING MESSAGE =
                  'Invalid Account Number ' || w_supplier_account || '!';
   END;

   IF w_stock_status = 'C'
   THEN
      w_status := 'E';
      w_errm := 'You can not return the canceled batch!';
      RAISE EXCEPTION USING MESSAGE = w_errm;
   END IF;


   IF p_product_id != 'ALL'
   THEN
      OPEN cur_products;
   ELSE
      OPEN cur_all_products;
   END IF;

   LOOP
      IF p_product_id != 'ALL'
      THEN
         FETCH cur_products INTO product_list;
      ELSE
         FETCH cur_all_products INTO product_list;
      END IF;

      EXIT WHEN NOT FOUND;


      --w_tran_gl_code := product_list.product_stock_gl;
      w_tran_amount := product_list.total_price;
      w_total_return_amount :=
         w_total_return_amount + product_list.total_price;
      w_tran_naration := 'Stock Return for ' || p_stock_id;
      w_serial_no := w_serial_no + 1;
      w_debit_credit := 'C';
      w_account_number := w_supplier_account;
      w_tran_gl_code := '0';
      w_contra_gl_code := product_list.product_stock_gl;

      INSERT INTO finance_transaction_table (branch_code,
                                             center_code,
                                             transaction_date,
                                             batch_serial,
                                             account_number,
                                             tran_gl_code,
                                             contra_gl_code,
                                             tran_debit_credit,
                                             tran_type,
                                             tran_amount,
                                             available_balance,
                                             tran_person_phone,
                                             tran_person_name,
                                             tran_document_prefix,
                                             tran_document_number,
                                             tran_sign_verified,
                                             system_posted_tran,
                                             transaction_narration,
                                             app_user_id,
                                             app_data_time)
           VALUES (p_branch_code,
                   '0',
                   p_return_date,
                   w_serial_no,
                   w_account_number,
                   w_tran_gl_code,
                   w_contra_gl_code,
                   w_debit_credit,
                   'STOCK_RETURN',
                   w_tran_amount,
                   0,
                   w_supplier_phone,
                   '',
                   NULL,
                   p_stock_id,
                   FALSE,
                   TRUE,
                   w_tran_naration,
                   p_app_user_id,
                   current_timestamp);

      BEGIN
         w_debit_credit := 'D';
         w_tran_amount := w_total_return_amount;
         w_tran_naration := 'Stock Return for ' || p_stock_id;
         w_serial_no = w_serial_no + 1;
         w_contra_gl_code := w_account_ledger_code;
         w_account_number := '0';
         w_tran_gl_code := product_list.product_stock_gl;

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      '0',
                      p_return_date,
                      w_serial_no,
                      w_account_number,
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      'STOCK_RETURN',
                      w_tran_amount,
                      0.00,
                      w_supplier_phone,
                      NULL,
                      NULL,
                      p_stock_id,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END;

      INSERT INTO sales_stock_return_details (supplier_id,
                                              stock_id,
                                              stock_voucher,
                                              product_id,
                                              tran_type_code,
                                              tran_batch_number,
                                              returned_quantity,
                                              return_amount,
                                              return_voucher,
                                              return_reason,
                                              branch_code,
                                              app_user_id,
                                              app_data_time,
                                              stock_date,
                                              return_date)
           VALUES (w_supplier_id,
                   p_stock_id,
                   w_stock_voucher_number,
                   product_list.product_id,
                   NULL,
                   NULL,
                   product_list.quantity,
                   product_list.total_price,
                   w_return_voucher,
                   p_return_reason,
                   product_list.branch_code,
                   p_app_user_id,
                   current_timestamp,
                   w_stock_date,
                   p_return_date);

      SELECT inv_balance_upto_date,
             COALESCE (last_stock_date, p_return_date) product_last_stock_date
        INTO STRICT w_last_balance_update, w_last_transaction_date
        FROM sales_products_inventory_status
       WHERE     product_id = product_list.product_id
             AND branch_code = p_branch_code;

      w_last_balance_update := LEAST (w_last_balance_update, p_return_date);
      w_last_transaction_date :=
         GREATEST (w_last_transaction_date, p_return_date);


      UPDATE sales_products_inventory_status
         SET product_available_stock =
                product_available_stock - (product_list.quantity),
             total_purchase_amount =
                total_purchase_amount - product_list.total_price,
             total_stock_return =
                total_stock_return + (product_list.quantity),
             last_stock_return_date = w_last_transaction_date,
             inv_balance_upto_date = w_last_balance_update,
             stock_return_amount =
                stock_return_amount + product_list.total_price,
             is_balance_updated = FALSE
       WHERE     product_id = product_list.product_id
             AND branch_code = p_branch_code;

      UPDATE sales_products
         SET product_available_stock =
                  product_available_stock
                - (product_list.quantity - product_list.quantity),
             total_purchase_amount =
                total_purchase_amount - product_list.total_price,
             total_stock_return =
                  total_stock_return
                + (product_list.quantity - product_list.quantity),
             product_last_return_date = w_last_transaction_date,
             stock_return_amount =
                stock_return_amount + product_list.total_price
       WHERE product_id = product_list.product_id;

      UPDATE sales_stockdetails
         SET returned_quantity =
                  returned_quantity
                + (product_list.quantity - product_list.returned_quantity),
             return_date = p_return_date,
             STATUS =
                (CASE
                    WHEN quantity = product_list.quantity THEN 'R'
                    ELSE 'P'
                 END)
       WHERE     stock_id = p_stock_id
             AND branch_code = p_branch_code
             AND product_id = product_list.product_id;

      BEGIN
         UPDATE sales_stockmaster
            SET STATUS = 'P',
                returned_quantity =
                     returned_quantity
                   + (product_list.quantity - product_list.returned_quantity),
                returned_amount = returned_amount + product_list.total_price
          WHERE stock_id = p_stock_id AND branch_code = p_branch_code;
      END;
   END LOOP;

   BEGIN
      SELECT *
        INTO w_status, w_errm, w_batch_number
        FROM fn_finance_post_tran (p_branch_code,
                                   '0',
                                   p_app_user_id,
                                   'STOCK_RETURN',
                                   p_return_date,
                                   p_return_reason,
                                   'STOCK_RETURN');

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      ELSE
         BEGIN
            UPDATE sales_stockmaster
               SET STATUS =
                      (CASE
                          WHEN total_quantity = returned_quantity THEN 'R'
                          ELSE 'P'
                       END)
             WHERE stock_id = p_stock_id AND branch_code = p_branch_code;
         END;

         BEGIN
            UPDATE sales_stock_return_details
               SET tran_batch_number = w_batch_number
             WHERE     return_voucher = w_return_voucher
                   AND branch_code = p_branch_code;
         END;
      END IF;
   END;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_stock_return(p_branch_code integer, p_app_user_id character, p_stock_id character, p_stock_date date, p_product_id character, p_returned_quantity integer, p_return_reason character, p_return_date date, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_stock_return_by_product(integer, character, character, character, character, integer, numeric, character, date); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_stock_return_by_product(p_branch_code integer, p_app_user_id character, p_supplier_id character, p_account_number character, p_product_id character, p_returned_quantity integer, p_returned_price numeric, p_return_reason character, p_return_date date, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_status                  VARCHAR;
   w_errm                    VARCHAR;
   product_list              RECORD;
   w_stock_date              DATE;
   w_tran_batch_number       INTEGER;
   w_stock_status            VARCHAR;
   w_supplier_phone          VARCHAR;
   w_tran_gl_code            VARCHAR := '0';
   w_account_ledger_code     VARCHAR := '0';
   w_contra_gl_code          VARCHAR := '0';
   w_serial_no               INTEGER := 0;
   w_tran_amount             NUMERIC (22, 2) := 0;
   w_tran_narration          VARCHAR;
   w_debit_credit            VARCHAR;
   w_total_return_amount     NUMERIC (22, 2) := 0;
   w_account_number          VARCHAR := '0';
   w_supplier_account        VARCHAR := '0';
   w_return_voucher          VARCHAR;
   w_stock_voucher_number    VARCHAR;
   w_batch_number            INTEGER;
   w_sql_statements          VARCHAR;
   w_parent_delar            INTEGER;
   w_customer_phone          VARCHAR := '';
   w_last_balance_update     DATE;
   w_last_transaction_date   DATE;
BEGIN
   BEGIN
      SELECT account_number, account_ledger_code
        INTO STRICT w_supplier_account, w_account_ledger_code
        FROM finance_accounts_balance
       WHERE account_number = p_account_number;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         RAISE EXCEPTION
         USING MESSAGE = 'Invalid Supplier ID' || p_supplier_id || '!';
   END;

   w_return_voucher :=
      fn_get_inventory_number (30016,
                               1,
                               'RT',
                               'Stock Return Voucher Number',
                               8);

   FOR product_list IN (SELECT product_id,
                               product_name,
                               product_model,
                               p_returned_quantity quantity,
                               p_returned_price total_price,
                               p.product_stock_gl,
                               p.product_stock_ret_gl,
                               p.product_profit_gl,
                               p.product_loss_gl
                          FROM sales_products p
                         WHERE product_id = p_product_id)
   LOOP
      w_tran_gl_code := product_list.product_stock_gl;
      w_tran_amount := product_list.total_price;
      w_tran_narration :=
            'Stock Return for '
         || product_list.product_name
         || ' '
         || product_list.product_model;
      w_serial_no := w_serial_no + 1;
      w_debit_credit := 'C';
      w_contra_gl_code := w_account_ledger_code;
      w_account_number := '0';

      IF w_tran_amount > 0
      THEN
         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      '0',
                      p_return_date,
                      w_serial_no,
                      w_account_number,
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      'STOCK_RETURN',
                      w_tran_amount,
                      0,
                      w_customer_phone,
                      '',
                      NULL,
                      w_return_voucher,
                      FALSE,
                      TRUE,
                      w_tran_narration,
                      p_app_user_id,
                      current_timestamp);

         w_serial_no := w_serial_no + 1;
         w_debit_credit := 'D';
         w_account_number := w_supplier_account;
         w_tran_gl_code := '0';
         w_contra_gl_code := product_list.product_stock_gl;

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      '0',
                      p_return_date,
                      w_serial_no,
                      w_account_number,
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      'STOCK_RETURN',
                      w_tran_amount,
                      0,
                      w_customer_phone,
                      '',
                      NULL,
                      w_return_voucher,
                      FALSE,
                      TRUE,
                      w_tran_narration,
                      p_app_user_id,
                      current_timestamp);
      END IF;

      INSERT INTO sales_stock_return_details (stock_id,
                                              supplier_id,
                                              stock_voucher,
                                              product_id,
                                              tran_type_code,
                                              tran_batch_number,
                                              returned_quantity,
                                              return_amount,
                                              return_voucher,
                                              return_reason,
                                              branch_code,
                                              app_user_id,
                                              app_data_time,
                                              stock_date,
                                              return_date)
           VALUES ('',
                   p_supplier_id,
                   w_stock_voucher_number,
                   product_list.product_id,
                   NULL,
                   NULL,
                   product_list.quantity,
                   product_list.total_price,
                   w_return_voucher,
                   p_return_reason,
                   p_branch_code,
                   p_app_user_id,
                   current_timestamp,
                   w_stock_date,
                   p_return_date);

      SELECT inv_balance_upto_date,
             COALESCE (last_stock_return_date, p_return_date) last_stock_return_date
        INTO STRICT w_last_balance_update, w_last_transaction_date
        FROM sales_products_inventory_status
       WHERE     product_id = product_list.product_id
             AND branch_code = p_branch_code;

      w_last_balance_update := LEAST (w_last_balance_update, p_return_date);
      w_last_transaction_date :=
         GREATEST (w_last_transaction_date, p_return_date);

      UPDATE sales_products_inventory_status
         SET product_available_stock =
                product_available_stock - (product_list.quantity),
             total_purchase_amount =
                total_purchase_amount - product_list.total_price,
             total_stock_return =
                total_stock_return + (product_list.quantity),
             last_stock_return_date = w_last_transaction_date,
             inv_balance_upto_date = w_last_balance_update,
             stock_return_amount =
                stock_return_amount + product_list.total_price,
             is_balance_updated = FALSE
       WHERE     product_id = product_list.product_id
             AND branch_code = p_branch_code;

      UPDATE sales_products
         SET product_available_stock =
                  product_available_stock
                - (product_list.quantity - product_list.quantity),
             total_purchase_amount =
                total_purchase_amount - product_list.total_price,
             total_stock_return =
                  total_stock_return
                + (product_list.quantity - product_list.quantity),
             product_last_return_date = w_last_transaction_date,
             stock_return_amount =
                stock_return_amount + product_list.total_price
       WHERE product_id = product_list.product_id;
   END LOOP;

   BEGIN
      SELECT *
        INTO w_status, w_errm, w_batch_number
        FROM fn_finance_post_tran (p_branch_code,
                                   '0',
                                   p_app_user_id,
                                   'STOCK_RETURN',
                                   p_return_date,
                                   p_return_reason,
                                   'STOCK_RETURN');

      IF w_status = 'E'
      THEN
         RAISE EXCEPTION USING MESSAGE = w_errm;
      ELSE
         BEGIN
            UPDATE sales_stock_return_details
               SET tran_batch_number = w_batch_number
             WHERE     return_voucher = w_return_voucher
                   AND branch_code = p_branch_code;
         END;
      END IF;
   END;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_stock_return_by_product(p_branch_code integer, p_app_user_id character, p_supplier_id character, p_account_number character, p_product_id character, p_returned_quantity integer, p_returned_price numeric, p_return_reason character, p_return_date date, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: fn_sales_stock_submit(date, integer, character, integer, integer, character, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_stock_submit(p_stock_date date, p_branch_code integer, p_app_user_id character, p_supplier_id integer, p_show_room_id integer, p_voucher_number character, p_comments character, OUT o_status character, OUT o_errm character, OUT o_stock_id character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_message               VARCHAR;
   w_stock_id              VARCHAR;
   w_total_product_price   NUMERIC (22, 2);
   w_total_product         NUMERIC (22, 2);
   w_discount_amount       NUMERIC (22, 2);
   w_voucher_number        VARCHAR;
   w_status                VARCHAR;
   w_errm                  VARCHAR;
BEGIN
   w_stock_id :=
      fn_get_inventory_number (30015,
                               100,
                               'ST',
                               'Stock Voucher Number',
                               8);

   INSERT INTO sales_stockdetails (stock_id,
                                   supplier_id,
                                   product_id,
                                   purces_price,
                                   total_price,
                                   discount_amount,
                                   status,
                                   quantity,
                                   returned_quantity,
                                   return_date,
                                   stock_date,
                                   comments,
                                   app_user_id,
                                   app_data_time,
                                   branch_code)
      SELECT w_stock_id,
             p_supplier_id,
             t.product_id,
             t.purces_price,
             t.total_price,
             t.discount_amount,
             'W' status,
             t.quantity,
             0  returned_quantity,
             NULL return_date,
             p_stock_date stock_date,
             t.comments,
             t.app_user_id,
             t.app_data_time,
             p_branch_code
        FROM sales_stockdetailstemp t, sales_products p
       WHERE p.product_id = t.product_id AND t.app_user_id = p_app_user_id;

   SELECT sum (t.total_price), sum (t.quantity), sum (t.discount_amount)
     INTO w_total_product_price, w_total_product, w_discount_amount
     FROM sales_stockdetailstemp t, sales_products p
    WHERE p.product_id = t.product_id AND t.app_user_id = p_app_user_id;

   INSERT INTO sales_stockmasterauthq (stock_id,
                                       supplier_id,
                                       stock_date,
                                       voucher_number,
                                       show_room,
                                       status,
                                       tran_type_code,
                                       payment_comments,
                                       total_quantity,
                                       returned_quantity,
                                       returned_amount,
                                       cancel_quantity,
                                       cancel_amount,
                                       total_price,
                                       discount_amount,
                                       total_pay,
                                       due_amount,
                                       comments,
                                       branch_code,
                                       app_user_id,
                                       app_data_time)
        VALUES (w_stock_id,
                p_supplier_id,
                p_stock_date,
                p_voucher_number,
                p_show_room_id,
                'W',
                'CS',
                NULL,
                w_total_product,
                0,
                0,
                0,
                0,
                w_total_product_price,
                w_discount_amount,
                0,
                w_total_product_price,
                p_comments,
                p_branch_code,
                p_app_user_id,
                current_timestamp);

   DELETE FROM sales_stockdetailstemp
         WHERE app_user_id = p_app_user_id;

   o_stock_id := w_stock_id;
   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_stock_submit(p_stock_date date, p_branch_code integer, p_app_user_id character, p_supplier_id integer, p_show_room_id integer, p_voucher_number character, p_comments character, OUT o_status character, OUT o_errm character, OUT o_stock_id character) OWNER TO delarship;

--
-- Name: fn_sales_stock_tran_table_insert(integer, character, character, character, numeric, numeric, character, character, character, date, character); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.fn_sales_stock_tran_table_insert(p_branch_code integer, p_app_user_id character, p_customer_phone character, p_account_number character, p_bill_amount numeric, p_pay_amount numeric, p_bill_payment_gl character, p_transaction_type character, p_payment_type character, p_transaction_date date, p_document_number character, OUT o_status character, OUT o_errm character) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
   w_error_message         VARCHAR;
   w_debit_credit          VARCHAR;
   w_batch_serial          INTEGER;
   w_tran_amount           NUMERIC (22, 2) := 0;
   w_total_debit_amount    NUMERIC (22, 2) := 0;
   w_total_credit_amount   NUMERIC (22, 2) := 0;
   w_total_order_amount    NUMERIC (22, 2) := 0;
   w_tran_naration         VARCHAR;
   tran_list               RECORD;
   w_tran_gl_code          VARCHAR := '0';
   w_contra_gl_code        VARCHAR := '0';
   w_serial_no             INTEGER := 0;
   w_status                VARCHAR;
   w_errm                  VARCHAR;
BEGIN
   IF p_transaction_type IN ('STOCK', 'ORDER')
   THEN
      w_debit_credit := 'D';
   ELSE
      w_debit_credit := 'C';
   END IF;

   FOR tran_list
      IN (SELECT *
          FROM (  SELECT sum (tran_amount) tran_amount,
                         tran_gl_code,
                         tran_naration
                    FROM (  SELECT (s.total_price - s.discount_amount)
                                      tran_amount,
                                   (CASE
                                       WHEN p_transaction_type = 'STOCK'
                                       THEN
                                          product_stock_gl
                                       WHEN p_transaction_type = 'SALES'
                                       THEN
                                          product_sales_gl
                                       WHEN p_transaction_type = 'ORDER'
                                       THEN
                                          product_order_gl
                                       WHEN p_transaction_type = 'PROFIT'
                                       THEN
                                          product_profit_gl
                                       WHEN p_transaction_type = 'LOSS'
                                       THEN
                                          product_loss_gl
                                    END)
                                      tran_gl_code,
                                   substr (
                                         initcap (p_transaction_type)
                                      || ' for '
                                      || initcap (p.product_name),
                                      0,
                                      100)
                                      tran_naration
                              FROM sales_stockdetails s, sales_products p
                             WHERE     p.product_id = s.product_id
                                   AND s.stock_id = p_document_number
                          ORDER BY s.id) o
                GROUP BY tran_gl_code, tran_naration) s)
   LOOP
      w_tran_gl_code := tran_list.tran_gl_code;
      w_tran_amount := tran_list.tran_amount;
      w_tran_naration := tran_list.tran_naration;
      w_serial_no := w_serial_no + 1;

      IF w_tran_amount > 0
      THEN
         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      '0',
                      p_transaction_date,
                      w_serial_no,
                      '0',
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      p_payment_type,
                      w_tran_amount,
                      0,
                      p_customer_phone,
                      p_app_user_id,
                      NULL,
                      p_document_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END IF;
   END LOOP;

   SELECT parent_code
     INTO w_contra_gl_code
     FROM finance_general_ledger
    WHERE reporting_gl_code = w_tran_gl_code;

   IF p_bill_amount > 0
   THEN
      BEGIN
         w_debit_credit := 'C';
         w_tran_amount := p_bill_amount;
         w_tran_naration := 'Purchase bill for ' || p_document_number;
         w_serial_no := w_serial_no + 1;

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      '0',
                      p_transaction_date,
                      w_serial_no,
                      p_account_number,
                      '0',
                      w_contra_gl_code,
                      w_debit_credit,
                      p_payment_type,
                      w_tran_amount,
                      0.00,
                      p_customer_phone,
                      NULL,
                      NULL,
                      p_document_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END;
   END IF;


   IF p_pay_amount > 0 AND p_bill_amount > 0
   THEN
      BEGIN
         w_debit_credit := 'C';
         w_tran_amount := p_pay_amount;
         w_tran_naration := 'Purchase payment for ' || p_document_number;
         w_serial_no := w_serial_no + 1;
         w_tran_gl_code := p_bill_payment_gl;

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      '0',
                      p_transaction_date,
                      w_serial_no,
                      '0',
                      w_tran_gl_code,
                      w_contra_gl_code,
                      w_debit_credit,
                      p_payment_type,
                      w_tran_amount,
                      0.00,
                      p_customer_phone,
                      NULL,
                      NULL,
                      p_document_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END;
   END IF;


   IF p_pay_amount > 0 AND p_bill_amount > 0
   THEN
      BEGIN
         w_debit_credit := 'D';
         w_tran_amount := p_pay_amount;
         w_tran_naration := 'Purchase Payment for ' || p_document_number;
         w_serial_no = w_serial_no + 1;

         INSERT INTO finance_transaction_table (branch_code,
                                                center_code,
                                                transaction_date,
                                                batch_serial,
                                                account_number,
                                                tran_gl_code,
                                                contra_gl_code,
                                                tran_debit_credit,
                                                tran_type,
                                                tran_amount,
                                                available_balance,
                                                tran_person_phone,
                                                tran_person_name,
                                                tran_document_prefix,
                                                tran_document_number,
                                                tran_sign_verified,
                                                system_posted_tran,
                                                transaction_narration,
                                                app_user_id,
                                                app_data_time)
              VALUES (p_branch_code,
                      '0',
                      p_transaction_date,
                      w_serial_no,
                      p_account_number,
                      '0',
                      w_contra_gl_code,
                      w_debit_credit,
                      p_payment_type,
                      w_tran_amount,
                      0.00,
                      p_customer_phone,
                      NULL,
                      NULL,
                      p_document_number,
                      FALSE,
                      TRUE,
                      w_tran_naration,
                      p_app_user_id,
                      current_timestamp);
      END;
   END IF;

   o_status := 'S';
   o_errm := '';
EXCEPTION
   WHEN OTHERS
   THEN
      IF w_status = 'E'
      THEN
         o_status := w_status;
         o_errm := w_errm;
      ELSE
         o_status := 'E';
         o_errm := SQLERRM;
      END IF;
END;
$$;


ALTER FUNCTION public.fn_sales_stock_tran_table_insert(p_branch_code integer, p_app_user_id character, p_customer_phone character, p_account_number character, p_bill_amount numeric, p_pay_amount numeric, p_bill_payment_gl character, p_transaction_type character, p_payment_type character, p_transaction_date date, p_document_number character, OUT o_status character, OUT o_errm character) OWNER TO delarship;

--
-- Name: gn_get_number_to_pct(numeric, numeric); Type: FUNCTION; Schema: public; Owner: delarship
--

CREATE FUNCTION public.gn_get_number_to_pct(p_obtain_marks numeric, p_total_marks numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
   RETURN round ((p_obtain_marks / p_total_marks) * 100, 2);
END;
$$;


ALTER FUNCTION public.gn_get_number_to_pct(p_obtain_marks numeric, p_total_marks numeric) OWNER TO delarship;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: appauth_application_log; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_application_log (
    id integer NOT NULL,
    program_name character varying(200),
    account_number character varying(20),
    error_message character varying(500),
    error_time timestamp with time zone NOT NULL,
    app_user_id character varying(20)
);


ALTER TABLE public.appauth_application_log OWNER TO delarship;

--
-- Name: appauth_application_log_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_application_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_application_log_id_seq OWNER TO delarship;

--
-- Name: appauth_application_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_application_log_id_seq OWNED BY public.appauth_application_log.id;


--
-- Name: appauth_branch; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_branch (
    branch_code integer NOT NULL,
    branch_name character varying(200) NOT NULL,
    manager_id character varying(20),
    opening_date date,
    closing_date date,
    branch_address character varying(500) NOT NULL,
    manager_phone character varying(200) NOT NULL,
    current_business_day date,
    previous_business_day date,
    business_clossing_in_progress boolean NOT NULL,
    business_day_close_by character varying(20),
    status character varying(2),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    country_id character varying(20),
    district_id character varying(20),
    division_id character varying(20),
    union_id character varying(20),
    upozila_id character varying(20)
);


ALTER TABLE public.appauth_branch OWNER TO delarship;

--
-- Name: appauth_dashboard_matrix; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_dashboard_matrix (
    id integer NOT NULL,
    matrix_key character varying(100) NOT NULL,
    matrix_value character varying(100) NOT NULL
);


ALTER TABLE public.appauth_dashboard_matrix OWNER TO delarship;

--
-- Name: appauth_dashboard_matrix_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_dashboard_matrix_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_dashboard_matrix_id_seq OWNER TO delarship;

--
-- Name: appauth_dashboard_matrix_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_dashboard_matrix_id_seq OWNED BY public.appauth_dashboard_matrix.id;


--
-- Name: appauth_employees; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_employees (
    employee_id character varying(20) NOT NULL,
    employee_name character varying(100) NOT NULL,
    employee_sex character varying(20),
    father_name character varying(100),
    mother_name character varying(200),
    joining_date date,
    present_address character varying(300),
    permanent_address character varying(300),
    birth_date date,
    nid_number character varying(20),
    employee_religion character varying(20),
    blood_group character varying(4),
    employee_education character varying(20),
    marital_status character varying(2),
    mobile_num character varying(20) NOT NULL,
    alternate_phone character varying(200),
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    account_number character varying(13),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    branch_code integer,
    employee_designation character varying(200)
);


ALTER TABLE public.appauth_employees OWNER TO delarship;

--
-- Name: appauth_eodsod_process; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_eodsod_process (
    id integer NOT NULL,
    process_name character varying(200),
    function_name character varying(200),
    process_status character varying(1),
    process_date date,
    start_time timestamp with time zone NOT NULL,
    end_time timestamp with time zone NOT NULL,
    error_message character varying(500),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    branch_code integer
);


ALTER TABLE public.appauth_eodsod_process OWNER TO delarship;

--
-- Name: appauth_eodsod_process_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_eodsod_process_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_eodsod_process_id_seq OWNER TO delarship;

--
-- Name: appauth_eodsod_process_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_eodsod_process_id_seq OWNED BY public.appauth_eodsod_process.id;


--
-- Name: appauth_eodsod_process_list; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_eodsod_process_list (
    id integer NOT NULL,
    process_name character varying(200),
    function_name character varying(200),
    serial_number integer,
    is_enable boolean NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.appauth_eodsod_process_list OWNER TO delarship;

--
-- Name: appauth_eodsod_process_list_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_eodsod_process_list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_eodsod_process_list_id_seq OWNER TO delarship;

--
-- Name: appauth_eodsod_process_list_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_eodsod_process_list_id_seq OWNED BY public.appauth_eodsod_process_list.id;


--
-- Name: appauth_global_parameters; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_global_parameters (
    id integer NOT NULL,
    company_code character varying(20),
    company_name character varying(200),
    company_address character varying(200),
    head_office_code integer,
    application_title character varying(200),
    cash_gl_code character varying(13),
    current_business_day date,
    previous_business_day date,
    business_clossing_in_progress boolean NOT NULL,
    business_day_close_by integer,
    is_friday_holiday boolean,
    is_saturday_holiday boolean,
    is_sunday_holiday boolean,
    is_monday_holiday boolean,
    is_tuesday_holiday boolean,
    is_wednesday_holiday boolean,
    is_thursday_holiday boolean
);


ALTER TABLE public.appauth_global_parameters OWNER TO delarship;

--
-- Name: appauth_global_parameters_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_global_parameters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_global_parameters_id_seq OWNER TO delarship;

--
-- Name: appauth_global_parameters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_global_parameters_id_seq OWNED BY public.appauth_global_parameters.id;


--
-- Name: appauth_holiday_list; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_holiday_list (
    id integer NOT NULL,
    holiday_date date NOT NULL,
    holiday_description character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.appauth_holiday_list OWNER TO delarship;

--
-- Name: appauth_holiday_list_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_holiday_list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_holiday_list_id_seq OWNER TO delarship;

--
-- Name: appauth_holiday_list_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_holiday_list_id_seq OWNED BY public.appauth_holiday_list.id;


--
-- Name: appauth_inventory_number; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_inventory_number (
    id integer NOT NULL,
    inv_code integer NOT NULL,
    branch_code integer NOT NULL,
    inv_prefix character varying(3) NOT NULL,
    inv_length integer,
    last_used_number integer NOT NULL,
    inv_naration character varying(200) NOT NULL,
    app_user_id character varying(20)
);


ALTER TABLE public.appauth_inventory_number OWNER TO delarship;

--
-- Name: appauth_inventory_number_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_inventory_number_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_inventory_number_id_seq OWNER TO delarship;

--
-- Name: appauth_inventory_number_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_inventory_number_id_seq OWNED BY public.appauth_inventory_number.id;


--
-- Name: appauth_loc_country; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_loc_country (
    country_id character varying(20) NOT NULL,
    country_name character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.appauth_loc_country OWNER TO delarship;

--
-- Name: appauth_loc_district; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_loc_district (
    district_id character varying(20) NOT NULL,
    district_name character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    division_id character varying(20)
);


ALTER TABLE public.appauth_loc_district OWNER TO delarship;

--
-- Name: appauth_loc_division; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_loc_division (
    division_id character varying(20) NOT NULL,
    division_name character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    country_id character varying(20)
);


ALTER TABLE public.appauth_loc_division OWNER TO delarship;

--
-- Name: appauth_loc_region; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_loc_region (
    region_id character varying(20) NOT NULL,
    region_name character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    union_id character varying(20)
);


ALTER TABLE public.appauth_loc_region OWNER TO delarship;

--
-- Name: appauth_loc_union; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_loc_union (
    union_id character varying(20) NOT NULL,
    union_name character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    upozila_id character varying(20)
);


ALTER TABLE public.appauth_loc_union OWNER TO delarship;

--
-- Name: appauth_loc_upazila; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_loc_upazila (
    upozila_id character varying(20) NOT NULL,
    upozila_name character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    district_id character varying(20)
);


ALTER TABLE public.appauth_loc_upazila OWNER TO delarship;

--
-- Name: appauth_query_table; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_query_table (
    id integer NOT NULL,
    int_column1 integer,
    int_column2 integer,
    int_column3 integer,
    int_column4 integer,
    int_column5 integer,
    int_column6 integer,
    int_column7 integer,
    int_column8 integer,
    int_column9 integer,
    int_column10 integer,
    chr_column1 character varying(200),
    chr_column2 character varying(200),
    chr_column3 character varying(200),
    chr_column4 character varying(200),
    chr_column5 character varying(200),
    chr_column6 character varying(200),
    chr_column7 character varying(200),
    chr_column8 character varying(200),
    chr_column9 character varying(200),
    chr_column10 character varying(200),
    dec_column1 numeric(22,2),
    dec_column2 numeric(22,2),
    dec_column3 numeric(22,2),
    dec_column4 numeric(22,2),
    dec_column5 numeric(22,2),
    dec_column6 numeric(22,2),
    dec_column7 numeric(22,2),
    dec_column8 numeric(22,2),
    dec_column9 numeric(22,2),
    dec_column10 numeric(22,2),
    dat_column1 date,
    dat_column2 date,
    dat_column3 date,
    dat_column4 date,
    dat_column5 date,
    bool_column1 boolean,
    bool_column2 boolean,
    bool_column3 boolean,
    bool_column4 boolean,
    bool_column5 boolean,
    app_user_id character varying(20)
);


ALTER TABLE public.appauth_query_table OWNER TO delarship;

--
-- Name: appauth_query_table_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_query_table_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_query_table_id_seq OWNER TO delarship;

--
-- Name: appauth_query_table_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_query_table_id_seq OWNED BY public.appauth_query_table.id;


--
-- Name: appauth_report_configuration; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_report_configuration (
    id integer NOT NULL,
    server_name character varying(200) NOT NULL,
    server_ip character varying(200) NOT NULL,
    report_url character varying(200) NOT NULL,
    company_file_path character varying(200) NOT NULL,
    company_info_report character varying(200) NOT NULL
);


ALTER TABLE public.appauth_report_configuration OWNER TO delarship;

--
-- Name: appauth_report_configuration_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_report_configuration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_report_configuration_id_seq OWNER TO delarship;

--
-- Name: appauth_report_configuration_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_report_configuration_id_seq OWNED BY public.appauth_report_configuration.id;


--
-- Name: appauth_report_parameter; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_report_parameter (
    id integer NOT NULL,
    app_user_id character varying(20),
    report_name character varying(100) NOT NULL,
    parameter_name character varying(100) NOT NULL,
    parameter_values character varying(300)
);


ALTER TABLE public.appauth_report_parameter OWNER TO delarship;

--
-- Name: appauth_report_parameter_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_report_parameter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_report_parameter_id_seq OWNER TO delarship;

--
-- Name: appauth_report_parameter_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_report_parameter_id_seq OWNED BY public.appauth_report_parameter.id;


--
-- Name: appauth_report_parameter_mapping; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_report_parameter_mapping (
    id integer NOT NULL,
    report_name character varying(100) NOT NULL,
    parameter_name character varying(100) NOT NULL,
    parameter_values character varying(300)
);


ALTER TABLE public.appauth_report_parameter_mapping OWNER TO delarship;

--
-- Name: appauth_report_parameter_mapping_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_report_parameter_mapping_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_report_parameter_mapping_id_seq OWNER TO delarship;

--
-- Name: appauth_report_parameter_mapping_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_report_parameter_mapping_id_seq OWNED BY public.appauth_report_parameter_mapping.id;


--
-- Name: appauth_report_table_group; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_report_table_group (
    id integer NOT NULL,
    report_column1 character varying(500),
    report_column2 character varying(500),
    report_column3 character varying(500),
    report_column4 character varying(500),
    report_column5 character varying(500),
    report_column6 character varying(500),
    report_column7 character varying(500),
    report_column8 character varying(500),
    report_column9 character varying(500),
    report_column10 character varying(500),
    report_column11 character varying(500),
    report_column12 character varying(500),
    report_column13 character varying(500),
    report_column14 character varying(500),
    report_column15 character varying(500),
    report_column16 character varying(500),
    report_column17 character varying(500),
    report_column18 character varying(500),
    report_column19 character varying(500),
    report_column20 character varying(500),
    app_user_id character varying(20),
    app_data_time timestamp with time zone
);


ALTER TABLE public.appauth_report_table_group OWNER TO delarship;

--
-- Name: appauth_report_table_group_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_report_table_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_report_table_group_id_seq OWNER TO delarship;

--
-- Name: appauth_report_table_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_report_table_group_id_seq OWNED BY public.appauth_report_table_group.id;


--
-- Name: appauth_report_table_tabular; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_report_table_tabular (
    id integer NOT NULL,
    report_column1 character varying(500),
    report_column2 character varying(500),
    report_column3 character varying(500),
    report_column4 character varying(500),
    report_column5 character varying(500),
    report_column6 character varying(500),
    report_column7 character varying(500),
    report_column8 character varying(500),
    report_column9 character varying(500),
    report_column10 character varying(500),
    report_column11 character varying(500),
    report_column12 character varying(500),
    report_column13 character varying(500),
    report_column14 character varying(500),
    report_column15 character varying(500),
    report_column16 character varying(500),
    report_column17 character varying(500),
    report_column18 character varying(500),
    report_column19 character varying(500),
    report_column20 character varying(500),
    app_user_id character varying(20),
    app_data_time timestamp with time zone,
    report_column21 character varying(500),
    report_column22 character varying(500),
    report_column23 character varying(500),
    report_column24 character varying(500),
    report_column25 character varying(500),
    report_column26 character varying(500),
    report_column27 character varying(500),
    report_column28 character varying(500),
    report_column29 character varying(500),
    report_column30 character varying(500),
    report_column31 character varying(500),
    report_column32 character varying(500),
    report_column33 character varying(500),
    report_column34 character varying(500),
    report_column35 character varying(500),
    report_column36 character varying(500),
    report_column37 character varying(500),
    report_column38 character varying(500),
    report_column39 character varying(500),
    report_column40 character varying(500),
    report_column41 character varying(500),
    report_column42 character varying(500),
    report_column43 character varying(500),
    report_column44 character varying(500),
    report_column45 character varying(500),
    report_column46 character varying(500),
    report_column47 character varying(500),
    report_column48 character varying(500),
    report_column49 character varying(500),
    report_column50 character varying(500),
    report_column51 character varying(500),
    report_column52 character varying(500),
    report_column53 character varying(500),
    report_column54 character varying(500),
    report_column55 character varying(500),
    report_column56 character varying(500),
    report_column57 character varying(500),
    report_column58 character varying(500),
    report_column59 character varying(500),
    report_column60 character varying(500)
);


ALTER TABLE public.appauth_report_table_tabular OWNER TO delarship;

--
-- Name: appauth_report_table_tabular_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.appauth_report_table_tabular_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.appauth_report_table_tabular_id_seq OWNER TO delarship;

--
-- Name: appauth_report_table_tabular_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.appauth_report_table_tabular_id_seq OWNED BY public.appauth_report_table_tabular.id;


--
-- Name: appauth_user_settings; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.appauth_user_settings (
    app_user_id character varying(20) NOT NULL,
    branch_code integer NOT NULL,
    django_user_id integer,
    employee_name character varying(200),
    reset_user_password boolean,
    lock_user boolean,
    password_expire_date timestamp with time zone,
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    account_number character varying(13),
    general_account character varying(13),
    cash_gl_code character varying(13),
    head_office_admin boolean NOT NULL,
    daily_debit_limit numeric(22,2) NOT NULL,
    daily_credit_limit numeric(22,2) NOT NULL,
    employee_id character varying(20)
);


ALTER TABLE public.appauth_user_settings OWNER TO delarship;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO delarship;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_group_id_seq OWNER TO delarship;

--
-- Name: auth_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.auth_group_id_seq OWNED BY public.auth_group.id;


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.auth_group_permissions (
    id integer NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO delarship;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_group_permissions_id_seq OWNER TO delarship;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.auth_group_permissions_id_seq OWNED BY public.auth_group_permissions.id;


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO delarship;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_permission_id_seq OWNER TO delarship;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.auth_permission_id_seq OWNED BY public.auth_permission.id;


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO delarship;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.auth_user_groups (
    id integer NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO delarship;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_user_groups_id_seq OWNER TO delarship;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.auth_user_groups_id_seq OWNED BY public.auth_user_groups.id;


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_user_id_seq OWNER TO delarship;

--
-- Name: auth_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.auth_user_id_seq OWNED BY public.auth_user.id;


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.auth_user_user_permissions (
    id integer NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO delarship;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_user_user_permissions_id_seq OWNER TO delarship;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.auth_user_user_permissions_id_seq OWNED BY public.auth_user_user_permissions.id;


--
-- Name: delar_application_settings; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_application_settings (
    id integer NOT NULL,
    sales_price_editable boolean NOT NULL,
    sales_discount_rate_editable boolean NOT NULL,
    sales_discount_amount_editable boolean NOT NULL
);


ALTER TABLE public.delar_application_settings OWNER TO delarship;

--
-- Name: delar_application_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_application_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_application_settings_id_seq OWNER TO delarship;

--
-- Name: delar_application_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_application_settings_id_seq OWNED BY public.delar_application_settings.id;


--
-- Name: delar_center; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_center (
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    branch_center_code character varying(20) NOT NULL,
    center_name character varying(100) NOT NULL,
    center_referred_by character varying(200),
    center_address character varying(300) NOT NULL,
    center_open_date date,
    center_phone_number character varying(200) NOT NULL,
    center_day character varying(20),
    center_status character varying(20),
    center_close_by character varying(20) NOT NULL,
    center_closure_date date,
    center_search_text character varying(500) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    center_employee_id character varying(20),
    center_region_id character varying(20)
);


ALTER TABLE public.delar_center OWNER TO delarship;

--
-- Name: delar_client_center_trf_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_client_center_trf_hist (
    id integer NOT NULL,
    client_id character varying(100) NOT NULL,
    old_center_code character varying(100) NOT NULL,
    new_center_code character varying(100) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.delar_client_center_trf_hist OWNER TO delarship;

--
-- Name: delar_client_center_trf_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_client_center_trf_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_client_center_trf_hist_id_seq OWNER TO delarship;

--
-- Name: delar_client_center_trf_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_client_center_trf_hist_id_seq OWNED BY public.delar_client_center_trf_hist.id;


--
-- Name: delar_clients_inventory_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_clients_inventory_hist (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    client_id character varying(20) NOT NULL,
    product_id character varying(20) NOT NULL,
    inv_balance_date date,
    product_total_stock integer,
    total_order_quantity integer,
    product_total_sales integer,
    total_stock_return integer,
    total_sales_return integer,
    product_total_damage integer,
    product_available_stock integer,
    product_purchase_rate numeric(22,2) NOT NULL,
    total_purchase_amount numeric(22,2) NOT NULL,
    total_purchase_balance numeric(22,2) NOT NULL,
    total_sales_amount numeric(22,2) NOT NULL,
    total_sales_balance numeric(22,2) NOT NULL,
    stock_return_amount numeric(22,2) NOT NULL,
    sales_return_amount numeric(22,2) NOT NULL,
    total_damage_amount numeric(22,2) NOT NULL,
    cost_of_good_sold numeric(22,2) NOT NULL,
    cost_of_good_sold_balance numeric(22,2) NOT NULL,
    total_discount_receive numeric(22,2) NOT NULL,
    total_discount_pay numeric(22,2) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    packet_payment_value numeric(22,2) NOT NULL,
    packet_receive_value numeric(22,2) NOT NULL,
    total_packet_payment integer,
    total_packet_receive integer
);


ALTER TABLE public.delar_clients_inventory_hist OWNER TO delarship;

--
-- Name: delar_clients_inventory_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_clients_inventory_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_clients_inventory_hist_id_seq OWNER TO delarship;

--
-- Name: delar_clients_inventory_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_clients_inventory_hist_id_seq OWNED BY public.delar_clients_inventory_hist.id;


--
-- Name: delar_clients_inventory_status; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_clients_inventory_status (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    client_id character varying(20) NOT NULL,
    product_id character varying(20) NOT NULL,
    product_total_stock integer,
    total_order_quantity integer,
    product_total_sales integer,
    total_stock_return integer,
    total_sales_return integer,
    product_total_damage integer,
    product_available_stock integer,
    product_purchase_rate numeric(22,2) NOT NULL,
    last_stock_date date,
    last_order_date date,
    last_sale_date date,
    last_stock_return_date date,
    last_sales_return_date date,
    last_damage_date date,
    inv_balance_upto_date date,
    total_purchase_amount numeric(22,2) NOT NULL,
    total_sales_amount numeric(22,2) NOT NULL,
    stock_return_amount numeric(22,2) NOT NULL,
    sales_return_amount numeric(22,2) NOT NULL,
    total_damage_amount numeric(22,2) NOT NULL,
    damage_receive_amount numeric(22,2) NOT NULL,
    cost_of_good_sold numeric(22,2) NOT NULL,
    total_discount_receive numeric(22,2) NOT NULL,
    total_discount_pay numeric(22,2) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    packet_payment_value numeric(22,2) NOT NULL,
    packet_receive_value numeric(22,2) NOT NULL,
    total_packet_payment integer,
    total_packet_receive integer
);


ALTER TABLE public.delar_clients_inventory_status OWNER TO delarship;

--
-- Name: delar_clients_inventory_status_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_clients_inventory_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_clients_inventory_status_id_seq OWNER TO delarship;

--
-- Name: delar_clients_inventory_status_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_clients_inventory_status_id_seq OWNED BY public.delar_clients_inventory_status.id;


--
-- Name: delar_clients_security_info; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_clients_security_info (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    client_id character varying(20) NOT NULL,
    phone_number character varying(15) NOT NULL,
    credit_limit numeric(22,2) NOT NULL,
    tin_number character varying(200) NOT NULL,
    trade_licence_number character varying(200),
    guarantor_number character varying(15),
    cheque_number character varying(200),
    cheque_amount numeric(22,2) NOT NULL,
    cheque_date character varying(200),
    bank_name character varying(200),
    branch_name character varying(200),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.delar_clients_security_info OWNER TO delarship;

--
-- Name: delar_clients_security_info_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_clients_security_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_clients_security_info_id_seq OWNER TO delarship;

--
-- Name: delar_clients_security_info_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_clients_security_info_id_seq OWNED BY public.delar_clients_security_info.id;


--
-- Name: delar_employee_center_permit; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_employee_center_permit (
    id integer NOT NULL,
    branch_code character varying(20),
    employee_id character varying(20) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.delar_employee_center_permit OWNER TO delarship;

--
-- Name: delar_employee_center_permit_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_employee_center_permit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_employee_center_permit_id_seq OWNER TO delarship;

--
-- Name: delar_employee_center_permit_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_employee_center_permit_id_seq OWNED BY public.delar_employee_center_permit.id;


--
-- Name: delar_products_packet_mapping; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_products_packet_mapping (
    id integer NOT NULL,
    product_id character varying(20) NOT NULL,
    packet_product_id character varying(20) NOT NULL,
    quantity_ratio integer,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.delar_products_packet_mapping OWNER TO delarship;

--
-- Name: delar_products_packet_mapping_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_products_packet_mapping_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_products_packet_mapping_id_seq OWNER TO delarship;

--
-- Name: delar_products_packet_mapping_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_products_packet_mapping_id_seq OWNED BY public.delar_products_packet_mapping.id;


--
-- Name: delar_sales_return_packet; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_sales_return_packet (
    id integer NOT NULL,
    branch_code character varying(20),
    client_id character varying(20),
    product_id character varying(30) NOT NULL,
    return_invoice character varying(20),
    return_date date NOT NULL,
    tran_type_code character varying(13),
    tran_batch_number integer,
    receive_quantity integer NOT NULL,
    receive_value numeric(22,2) NOT NULL,
    status character varying(2),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    employee_id character varying(20)
);


ALTER TABLE public.delar_sales_return_packet OWNER TO delarship;

--
-- Name: delar_sales_return_packet_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_sales_return_packet_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_sales_return_packet_id_seq OWNER TO delarship;

--
-- Name: delar_sales_return_packet_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_sales_return_packet_id_seq OWNED BY public.delar_sales_return_packet.id;


--
-- Name: delar_srstage_details; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_srstage_details (
    id integer NOT NULL,
    branch_code integer,
    employee_id character varying(20) NOT NULL,
    invoice_number character varying(20),
    invoice_date date,
    product_id character varying(10),
    product_price numeric(22,2),
    quantity integer,
    return_quantity integer,
    sales_quantity integer,
    sales_amount numeric(22,2),
    sales_discount_amount numeric(22,2),
    total_price numeric(22,2) NOT NULL,
    profit_amount numeric(22,2),
    discount_rate numeric(22,2),
    discount_amount numeric(22,2),
    status character varying(2),
    comments text,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.delar_srstage_details OWNER TO delarship;

--
-- Name: delar_srstage_details_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_srstage_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_srstage_details_id_seq OWNER TO delarship;

--
-- Name: delar_srstage_details_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_srstage_details_id_seq OWNED BY public.delar_srstage_details.id;


--
-- Name: delar_srstage_details_temp; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_srstage_details_temp (
    id integer NOT NULL,
    employee_id character varying(20) NOT NULL,
    invoice_number character varying(20),
    product_id character varying(10) NOT NULL,
    product_model character varying(100),
    product_name character varying(200) NOT NULL,
    product_bar_code character varying(200),
    product_price numeric(22,2),
    quantity integer NOT NULL,
    total_price numeric(22,2) NOT NULL,
    profit_amount numeric(22,2),
    discount_rate numeric(22,2),
    discount_amount numeric(22,2),
    status character varying(2),
    comments text,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    details_branch_code character varying(20),
    sales_account_number character varying(20),
    serial_no integer,
    service_card_no character varying(200),
    service_end_date date,
    service_start_date date,
    service_type character varying(10)
);


ALTER TABLE public.delar_srstage_details_temp OWNER TO delarship;

--
-- Name: delar_srstage_details_temp_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_srstage_details_temp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_srstage_details_temp_id_seq OWNER TO delarship;

--
-- Name: delar_srstage_details_temp_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_srstage_details_temp_id_seq OWNED BY public.delar_srstage_details_temp.id;


--
-- Name: delar_srstage_inventory_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_srstage_inventory_hist (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    employee_id character varying(20) NOT NULL,
    product_id character varying(20) NOT NULL,
    inv_balance_date date,
    product_total_stock integer,
    total_order_quantity integer,
    product_total_sales integer,
    total_stock_return integer,
    total_sales_return integer,
    product_total_damage integer,
    product_available_stock integer,
    product_purchase_rate numeric(22,2) NOT NULL,
    total_purchase_amount numeric(22,2) NOT NULL,
    total_purchase_balance numeric(22,2) NOT NULL,
    total_sales_amount numeric(22,2) NOT NULL,
    total_sales_balance numeric(22,2) NOT NULL,
    stock_return_amount numeric(22,2) NOT NULL,
    sales_return_amount numeric(22,2) NOT NULL,
    total_damage_amount numeric(22,2) NOT NULL,
    cost_of_good_sold numeric(22,2) NOT NULL,
    cost_of_good_sold_balance numeric(22,2) NOT NULL,
    total_discount_receive numeric(22,2) NOT NULL,
    total_discount_pay numeric(22,2) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    packet_payment_value numeric(22,2) NOT NULL,
    packet_receive_value numeric(22,2) NOT NULL,
    total_packet_payment integer,
    total_packet_receive integer
);


ALTER TABLE public.delar_srstage_inventory_hist OWNER TO delarship;

--
-- Name: delar_srstage_inventory_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_srstage_inventory_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_srstage_inventory_hist_id_seq OWNER TO delarship;

--
-- Name: delar_srstage_inventory_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_srstage_inventory_hist_id_seq OWNED BY public.delar_srstage_inventory_hist.id;


--
-- Name: delar_srstage_inventory_status; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_srstage_inventory_status (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    employee_id character varying(20) NOT NULL,
    product_id character varying(20) NOT NULL,
    product_total_stock integer,
    total_order_quantity integer,
    product_total_sales integer,
    total_stock_return integer,
    total_sales_return integer,
    product_total_damage integer,
    product_available_stock integer,
    product_purchase_rate numeric(22,2) NOT NULL,
    last_stock_date date,
    last_order_date date,
    last_sale_date date,
    last_stock_return_date date,
    last_sales_return_date date,
    last_damage_date date,
    inv_balance_upto_date date,
    total_purchase_amount numeric(22,2) NOT NULL,
    total_sales_amount numeric(22,2) NOT NULL,
    stock_return_amount numeric(22,2) NOT NULL,
    sales_return_amount numeric(22,2) NOT NULL,
    total_damage_amount numeric(22,2) NOT NULL,
    damage_receive_amount numeric(22,2) NOT NULL,
    cost_of_good_sold numeric(22,2) NOT NULL,
    total_discount_receive numeric(22,2) NOT NULL,
    total_discount_pay numeric(22,2) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    packet_payment_value numeric(22,2) NOT NULL,
    packet_receive_value numeric(22,2) NOT NULL,
    total_packet_payment integer,
    total_packet_receive integer
);


ALTER TABLE public.delar_srstage_inventory_status OWNER TO delarship;

--
-- Name: delar_srstage_inventory_status_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_srstage_inventory_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_srstage_inventory_status_id_seq OWNER TO delarship;

--
-- Name: delar_srstage_inventory_status_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_srstage_inventory_status_id_seq OWNED BY public.delar_srstage_inventory_status.id;


--
-- Name: delar_srstage_inventory_sum; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_srstage_inventory_sum (
    id integer NOT NULL,
    employee_id character varying(20) NOT NULL,
    product_total_stock integer,
    total_order_quantity integer,
    product_total_sales integer,
    total_stock_return integer,
    total_sales_return integer,
    product_total_damage integer,
    product_available_stock integer,
    total_packet_receive integer,
    total_packet_payment integer,
    total_purchase_amount numeric(22,2) NOT NULL,
    total_sales_amount numeric(22,2) NOT NULL,
    total_return_amount numeric(22,2) NOT NULL,
    stock_return_amount numeric(22,2) NOT NULL,
    sales_return_amount numeric(22,2) NOT NULL,
    cost_of_good_sold numeric(22,2) NOT NULL,
    total_discount_receive numeric(22,2) NOT NULL,
    total_discount_pay numeric(22,2) NOT NULL,
    packet_receive_value numeric(22,2) NOT NULL,
    packet_payment_value numeric(22,2) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    total_damage_amount numeric(22,2) NOT NULL
);


ALTER TABLE public.delar_srstage_inventory_sum OWNER TO delarship;

--
-- Name: delar_srstage_inventory_sum_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_srstage_inventory_sum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_srstage_inventory_sum_id_seq OWNER TO delarship;

--
-- Name: delar_srstage_inventory_sum_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_srstage_inventory_sum_id_seq OWNED BY public.delar_srstage_inventory_sum.id;


--
-- Name: delar_srstage_master; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_srstage_master (
    id integer NOT NULL,
    branch_code integer,
    invoice_number character varying(20),
    invoice_date date NOT NULL,
    employee_id character varying(20) NOT NULL,
    total_quantity integer NOT NULL,
    returned_quantity integer,
    total_sales_quantity integer,
    total_sales_amount numeric(22,2),
    total_sales_discount_amount numeric(22,2),
    total_bill_amount numeric(22,2) NOT NULL,
    bill_amount numeric(22,2) NOT NULL,
    pay_amount numeric(22,2) NOT NULL,
    due_amount numeric(22,2) NOT NULL,
    advance_pay numeric(22,2) NOT NULL,
    status character varying(2),
    invoice_comments text,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.delar_srstage_master OWNER TO delarship;

--
-- Name: delar_srstage_master_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_srstage_master_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_srstage_master_id_seq OWNER TO delarship;

--
-- Name: delar_srstage_master_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_srstage_master_id_seq OWNED BY public.delar_srstage_master.id;


--
-- Name: delar_stock_return_packet; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.delar_stock_return_packet (
    id integer NOT NULL,
    branch_code character varying(20),
    supplier_id character varying(20),
    product_id character varying(30) NOT NULL,
    return_invoice character varying(20),
    return_date date NOT NULL,
    tran_type_code character varying(13),
    tran_batch_number integer,
    payment_quantity integer NOT NULL,
    payment_value numeric(22,2) NOT NULL,
    status character varying(2),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.delar_stock_return_packet OWNER TO delarship;

--
-- Name: delar_stock_return_packet_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.delar_stock_return_packet_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delar_stock_return_packet_id_seq OWNER TO delarship;

--
-- Name: delar_stock_return_packet_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.delar_stock_return_packet_id_seq OWNED BY public.delar_stock_return_packet.id;


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO delarship;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_admin_log_id_seq OWNER TO delarship;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.django_admin_log_id_seq OWNED BY public.django_admin_log.id;


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO delarship;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_content_type_id_seq OWNER TO delarship;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.django_content_type_id_seq OWNED BY public.django_content_type.id;


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.django_migrations (
    id integer NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO delarship;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_migrations_id_seq OWNER TO delarship;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.django_migrations_id_seq OWNED BY public.django_migrations.id;


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO delarship;

--
-- Name: ecom_application_settings; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_application_settings (
    id integer NOT NULL,
    application_title character varying(50) NOT NULL,
    support_phone character varying(50) NOT NULL,
    support_email character varying(50) NOT NULL,
    copyright_info character varying(50) NOT NULL,
    twitter_link character varying(50) NOT NULL,
    facebook_link character varying(50) NOT NULL,
    youtube_link character varying(50) NOT NULL,
    instagram_link character varying(50) NOT NULL,
    seo_keywords character varying(400) NOT NULL
);


ALTER TABLE public.ecom_application_settings OWNER TO delarship;

--
-- Name: ecom_application_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.ecom_application_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ecom_application_settings_id_seq OWNER TO delarship;

--
-- Name: ecom_application_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.ecom_application_settings_id_seq OWNED BY public.ecom_application_settings.id;


--
-- Name: ecom_delivery_address; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_delivery_address (
    id integer NOT NULL,
    customer character varying(15) NOT NULL,
    full_name character varying(200),
    mobile character varying(15),
    email character varying(200),
    address_1 character varying(300),
    address_2 character varying(300),
    distric_id character varying(6),
    upazilla_id character varying(6),
    zip_code character varying(10),
    use_count integer
);


ALTER TABLE public.ecom_delivery_address OWNER TO delarship;

--
-- Name: ecom_delivery_address_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.ecom_delivery_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ecom_delivery_address_id_seq OWNER TO delarship;

--
-- Name: ecom_delivery_address_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.ecom_delivery_address_id_seq OWNED BY public.ecom_delivery_address.id;


--
-- Name: ecom_ecom_slider; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_ecom_slider (
    id integer NOT NULL,
    title character varying(100) NOT NULL,
    second_title character varying(200),
    button_up_title character varying(80),
    button_one_label character varying(50),
    button_one_icon character varying(300),
    button_one_url character varying(300),
    button_two_label character varying(50),
    button_two_icon character varying(300),
    button_two_url character varying(300),
    image character varying(100),
    status integer NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.ecom_ecom_slider OWNER TO delarship;

--
-- Name: ecom_ecom_slider_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.ecom_ecom_slider_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ecom_ecom_slider_id_seq OWNER TO delarship;

--
-- Name: ecom_ecom_slider_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.ecom_ecom_slider_id_seq OWNED BY public.ecom_ecom_slider.id;


--
-- Name: ecom_order_details; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_order_details (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    order_number character varying(20),
    product_id character varying(10),
    serial_no integer,
    product_price numeric(22,2),
    order_quantity integer NOT NULL,
    deliver_quantity integer NOT NULL,
    total_price numeric(22,2) NOT NULL,
    deliver_price numeric(22,2),
    discount_rate numeric(22,2),
    discount_amount numeric(22,2),
    profit_amount numeric(22,2),
    status character varying(2),
    comments text,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.ecom_order_details OWNER TO delarship;

--
-- Name: ecom_order_details_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.ecom_order_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ecom_order_details_id_seq OWNER TO delarship;

--
-- Name: ecom_order_details_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.ecom_order_details_id_seq OWNED BY public.ecom_order_details.id;


--
-- Name: ecom_order_master; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_order_master (
    branch_code integer NOT NULL,
    order_number character varying(20) NOT NULL,
    delivery_charge character varying(20),
    order_date timestamp with time zone NOT NULL,
    customer_id character varying(20),
    account_number character varying(200),
    customer_name character varying(200),
    customer_phone character varying(20),
    customer_address character varying(500),
    executive_phone character varying(20),
    coupon_code character varying(20),
    total_quantity integer NOT NULL,
    returned_quantity integer,
    bill_amount numeric(22,2) NOT NULL,
    discount_amount numeric(22,2) NOT NULL,
    payment_method character varying(20),
    pay_amount numeric(22,2) NOT NULL,
    due_amount numeric(22,2) NOT NULL,
    advance_pay numeric(22,2) NOT NULL,
    status character varying(2),
    order_comments text,
    latitude numeric(22,12),
    longitude numeric(22,12),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    delivery_address_id integer
);


ALTER TABLE public.ecom_order_master OWNER TO delarship;

--
-- Name: ecom_pagemodel; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_pagemodel (
    id integer NOT NULL,
    title character varying(50) NOT NULL,
    content text NOT NULL,
    publish_status integer,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.ecom_pagemodel OWNER TO delarship;

--
-- Name: ecom_pagemodel_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.ecom_pagemodel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ecom_pagemodel_id_seq OWNER TO delarship;

--
-- Name: ecom_pagemodel_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.ecom_pagemodel_id_seq OWNED BY public.ecom_pagemodel.id;


--
-- Name: ecom_product_categories; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_product_categories (
    categories_id character varying(20) NOT NULL,
    categories_name character varying(200) NOT NULL,
    image_class_name character varying(200) NOT NULL,
    status character varying(5),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.ecom_product_categories OWNER TO delarship;

--
-- Name: ecom_product_group_list; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_product_group_list (
    group_id character varying(20) NOT NULL,
    group_name character varying(200) NOT NULL,
    status character varying(5),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    categories_id character varying(20),
    subcategories_id character varying(20)
);


ALTER TABLE public.ecom_product_group_list OWNER TO delarship;

--
-- Name: ecom_product_images; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_product_images (
    id integer NOT NULL,
    image character varying(100),
    image_serial integer NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    product_id character varying(20) NOT NULL
);


ALTER TABLE public.ecom_product_images OWNER TO delarship;

--
-- Name: ecom_product_images_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.ecom_product_images_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ecom_product_images_id_seq OWNER TO delarship;

--
-- Name: ecom_product_images_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.ecom_product_images_id_seq OWNED BY public.ecom_product_images.id;


--
-- Name: ecom_product_sub_categories; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_product_sub_categories (
    subcategories_id character varying(20) NOT NULL,
    subcategories_name character varying(200) NOT NULL,
    status character varying(5),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    categories_id character varying(20)
);


ALTER TABLE public.ecom_product_sub_categories OWNER TO delarship;

--
-- Name: ecom_products; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_products (
    product_id character varying(20) NOT NULL,
    product_name character varying(200) NOT NULL,
    product_model character varying(200),
    product_group character varying(200),
    product_price numeric(22,2),
    discount_amount numeric(22,2),
    product_old_price numeric(22,2),
    product_description text,
    product_feature character varying(500),
    product_specification character varying(1000),
    product_keyword character varying(400),
    product_viewcount integer,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    category_id character varying(20) NOT NULL,
    product_brand_id character varying(20) NOT NULL,
    sub_category_id character varying(20) NOT NULL
);


ALTER TABLE public.ecom_products OWNER TO delarship;

--
-- Name: ecom_user_chart; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_user_chart (
    id integer NOT NULL,
    product_id character varying(20) NOT NULL,
    product_name character varying(200) NOT NULL,
    product_model character varying(200),
    product_group character varying(200),
    product_quantity integer,
    product_price numeric(22,2),
    discount_amount numeric(22,2),
    product_old_price numeric(22,2),
    total_bill_amount numeric(22,2),
    product_photo1 character varying(100),
    product_description character varying(500),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.ecom_user_chart OWNER TO delarship;

--
-- Name: ecom_user_chart_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.ecom_user_chart_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ecom_user_chart_id_seq OWNER TO delarship;

--
-- Name: ecom_user_chart_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.ecom_user_chart_id_seq OWNED BY public.ecom_user_chart.id;


--
-- Name: ecom_user_coupon; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_user_coupon (
    webuser_phone character varying(20) NOT NULL,
    coupon_code character varying(20) NOT NULL,
    maximum_amount numeric(22,2),
    maximum_pct numeric(22,2),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.ecom_user_coupon OWNER TO delarship;

--
-- Name: ecom_user_profile; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_user_profile (
    id integer NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    fname character varying(35) NOT NULL,
    lname character varying(35) NOT NULL,
    app_user_id_id integer NOT NULL
);


ALTER TABLE public.ecom_user_profile OWNER TO delarship;

--
-- Name: ecom_user_profile_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.ecom_user_profile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ecom_user_profile_id_seq OWNER TO delarship;

--
-- Name: ecom_user_profile_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.ecom_user_profile_id_seq OWNED BY public.ecom_user_profile.id;


--
-- Name: ecom_web_user_info; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.ecom_web_user_info (
    webuser_phone character varying(20) NOT NULL,
    webuser_name character varying(200),
    webuser_email character varying(200),
    webuser_location1 character varying(200),
    webuser_location2 character varying(200),
    webuser_location3 character varying(200),
    webuser_current_address character varying(200),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.ecom_web_user_info OWNER TO delarship;

--
-- Name: emp_sales_comission; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.emp_sales_comission (
    employee_id character varying(20),
    sales_month text,
    sales_quantity bigint,
    total_price numeric
);


ALTER TABLE public.emp_sales_comission OWNER TO delarship;

--
-- Name: finance_account_charges; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_account_charges (
    id integer NOT NULL,
    charges_code character varying(13) NOT NULL,
    charges_name character varying(200) NOT NULL,
    account_number character varying(13) NOT NULL,
    charge_amount numeric(22,2),
    charge_date date,
    narration character varying(300),
    tran_branch_code integer,
    tran_batch_number integer,
    tran_batch_date date,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_account_charges OWNER TO delarship;

--
-- Name: finance_account_charges_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_account_charges_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_account_charges_id_seq OWNER TO delarship;

--
-- Name: finance_account_charges_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_account_charges_id_seq OWNED BY public.finance_account_charges.id;


--
-- Name: finance_account_type; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_account_type (
    account_type_code character varying(13) NOT NULL,
    account_type_name character varying(200) NOT NULL,
    account_type_short_name character varying(20) NOT NULL,
    maximum_credit_limit numeric(22,2) NOT NULL,
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    account_ledger_code character varying(13),
    expense_ledger character varying(13),
    income_ledger character varying(13),
    payable_ledger character varying(13),
    receivable_ledger character varying(13)
);


ALTER TABLE public.finance_account_type OWNER TO delarship;

--
-- Name: finance_accounts_balance; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_accounts_balance (
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    client_id character varying(15),
    products_code character varying(13),
    account_type character varying(13),
    account_number character varying(13) NOT NULL,
    account_title character varying(200),
    phone_number character varying(15),
    account_address character varying(200),
    account_ledger_code character varying(13),
    is_account_active boolean NOT NULL,
    account_opening_date date NOT NULL,
    account_closing_date date,
    last_transaction_date date,
    last_balance_update date,
    last_monbal_update date,
    is_balance_updated boolean NOT NULL,
    credit_limit numeric(22,2) NOT NULL,
    total_debit_amount numeric(22,2) NOT NULL,
    total_credit_amount numeric(22,2) NOT NULL,
    account_balance numeric(22,2) NOT NULL,
    unauth_debit_amount numeric(22,2) NOT NULL,
    unauth_credit_amount numeric(22,2) NOT NULL,
    account_comments character varying(300),
    is_deleted boolean NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_accounts_balance OWNER TO delarship;

--
-- Name: finance_accounts_balance_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_accounts_balance_hist (
    id integer NOT NULL,
    account_number character varying(13),
    transaction_date date,
    total_debit_sum numeric(22,2) NOT NULL,
    total_credit_sum numeric(22,2) NOT NULL,
    account_balance numeric(22,2) NOT NULL,
    cum_debit_sum numeric(22,2) NOT NULL,
    cum_credit_sum numeric(22,2) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    branch_code integer
);


ALTER TABLE public.finance_accounts_balance_hist OWNER TO delarship;

--
-- Name: finance_accounts_balance_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_accounts_balance_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_accounts_balance_hist_id_seq OWNER TO delarship;

--
-- Name: finance_accounts_balance_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_accounts_balance_hist_id_seq OWNED BY public.finance_accounts_balance_hist.id;


--
-- Name: finance_accounts_balmon_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_accounts_balmon_hist (
    id integer NOT NULL,
    transaction_month integer,
    transaction_year integer,
    account_number character varying(13),
    total_debit_sum numeric(22,2) NOT NULL,
    total_credit_sum numeric(22,2) NOT NULL,
    account_balance numeric(22,2) NOT NULL,
    cum_debit_sum numeric(22,2) NOT NULL,
    cum_credit_sum numeric(22,2) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    branch_code integer
);


ALTER TABLE public.finance_accounts_balmon_hist OWNER TO delarship;

--
-- Name: finance_accounts_balmon_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_accounts_balmon_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_accounts_balmon_hist_id_seq OWNER TO delarship;

--
-- Name: finance_accounts_balmon_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_accounts_balmon_hist_id_seq OWNED BY public.finance_accounts_balmon_hist.id;


--
-- Name: finance_application_settings; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_application_settings (
    id integer NOT NULL,
    cash_gl_code character varying(13) NOT NULL,
    asset_main_gl character varying(13) NOT NULL,
    liabilities_main_gl character varying(13) NOT NULL,
    income_main_gl character varying(13) NOT NULL,
    expenses_main_gl character varying(13) NOT NULL,
    profit_and_loss_ledger character varying(13) NOT NULL,
    past_year_adj_ledger character varying(13) NOT NULL,
    transaction_doc_required boolean,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_application_settings OWNER TO delarship;

--
-- Name: finance_application_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_application_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_application_settings_id_seq OWNER TO delarship;

--
-- Name: finance_application_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_application_settings_id_seq OWNED BY public.finance_application_settings.id;


--
-- Name: finance_cash_and_bank_ledger; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_cash_and_bank_ledger (
    id integer NOT NULL,
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    branch_code integer NOT NULL,
    gl_code character varying(13) NOT NULL,
    is_balance_updated boolean NOT NULL,
    last_balance_update date,
    last_transaction_date date
);


ALTER TABLE public.finance_cash_and_bank_ledger OWNER TO delarship;

--
-- Name: finance_cash_and_bank_ledger_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_cash_and_bank_ledger_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_cash_and_bank_ledger_id_seq OWNER TO delarship;

--
-- Name: finance_cash_and_bank_ledger_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_cash_and_bank_ledger_id_seq OWNED BY public.finance_cash_and_bank_ledger.id;


--
-- Name: finance_cash_transaction; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_cash_transaction (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    transaction_date date NOT NULL,
    batch_number integer NOT NULL,
    day_serial_no integer NOT NULL,
    receive_payment character varying(2) NOT NULL,
    transaction_amount numeric(22,2) NOT NULL,
    transaction_narration character varying(200),
    auth_by character varying(20),
    auth_on timestamp with time zone,
    cancel_by character varying(20),
    cancel_on timestamp with time zone,
    cancel_remarks character varying(200),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_cash_transaction OWNER TO delarship;

--
-- Name: finance_cash_transaction_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_cash_transaction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_cash_transaction_id_seq OWNER TO delarship;

--
-- Name: finance_cash_transaction_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_cash_transaction_id_seq OWNED BY public.finance_cash_transaction.id;


--
-- Name: finance_charges; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_charges (
    charges_id character varying(13) NOT NULL,
    charges_code character varying(13) NOT NULL,
    charges_name character varying(200) NOT NULL,
    actype_code character varying(13) NOT NULL,
    charge_type character varying(2) NOT NULL,
    charge_percentage numeric(22,2) NOT NULL,
    charge_from_amount numeric(22,2) NOT NULL,
    charge_upto_amount numeric(22,2) NOT NULL,
    charge_amount numeric(22,2) NOT NULL,
    account_opening_charge boolean NOT NULL,
    account_closing_charge boolean NOT NULL,
    member_admission_fee boolean NOT NULL,
    loan_application_fee boolean NOT NULL,
    loan_insurance_fee boolean NOT NULL,
    pass_book_fee boolean NOT NULL,
    penal_charge boolean NOT NULL,
    others_fee boolean NOT NULL,
    status character varying(2),
    effective_from_date date,
    effective_upto_date date,
    comments character varying(300),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    charges_ledger_code character varying(13)
);


ALTER TABLE public.finance_charges OWNER TO delarship;

--
-- Name: finance_client_account_mapping; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_client_account_mapping (
    id integer NOT NULL,
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    account_type_code character varying(13) NOT NULL,
    client_type_code character varying(20) NOT NULL
);


ALTER TABLE public.finance_client_account_mapping OWNER TO delarship;

--
-- Name: finance_client_account_mapping_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_client_account_mapping_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_client_account_mapping_id_seq OWNER TO delarship;

--
-- Name: finance_client_account_mapping_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_client_account_mapping_id_seq OWNED BY public.finance_client_account_mapping.id;


--
-- Name: finance_client_type; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_client_type (
    client_type_code character varying(20) NOT NULL,
    client_type_name character varying(200) NOT NULL,
    is_account_required boolean NOT NULL,
    transaction_screen character varying(200),
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_client_type OWNER TO delarship;

--
-- Name: finance_deposit_closing; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_deposit_closing (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    client_id character varying(20) NOT NULL,
    account_number character varying(13),
    closing_date date,
    closing_balance numeric(22,2),
    cancel_amount numeric(22,2),
    tran_batch_number integer,
    closing_doc_num character varying(50),
    narration character varying(200) NOT NULL,
    cancel_by character varying(20),
    cancel_on timestamp with time zone,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_deposit_closing OWNER TO delarship;

--
-- Name: finance_deposit_closing_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_deposit_closing_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_deposit_closing_id_seq OWNER TO delarship;

--
-- Name: finance_deposit_closing_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_deposit_closing_id_seq OWNED BY public.finance_deposit_closing.id;


--
-- Name: finance_deposit_payment; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_deposit_payment (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    client_id character varying(20) NOT NULL,
    account_number character varying(13),
    payment_date date,
    payment_amount numeric(22,2),
    cancel_amount numeric(22,2),
    tran_batch_number integer,
    payment_doc_num character varying(50),
    dep_entry_day_sl integer,
    narration character varying(200) NOT NULL,
    cancel_by character varying(20),
    cancel_on timestamp with time zone,
    is_transfer boolean NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_deposit_payment OWNER TO delarship;

--
-- Name: finance_deposit_payment_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_deposit_payment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_deposit_payment_id_seq OWNER TO delarship;

--
-- Name: finance_deposit_payment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_deposit_payment_id_seq OWNED BY public.finance_deposit_payment.id;


--
-- Name: finance_deposit_receive; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_deposit_receive (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    client_id character varying(20) NOT NULL,
    account_number character varying(13),
    deposit_date date,
    deposit_amount numeric(22,2),
    cancel_amount numeric(22,2),
    tran_batch_number integer,
    deposit_doc_num character varying(50),
    dep_entry_day_sl integer,
    narration character varying(200) NOT NULL,
    is_transfer boolean NOT NULL,
    cancel_by character varying(20),
    cancel_on timestamp with time zone,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_deposit_receive OWNER TO delarship;

--
-- Name: finance_deposit_receive_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_deposit_receive_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_deposit_receive_id_seq OWNER TO delarship;

--
-- Name: finance_deposit_receive_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_deposit_receive_id_seq OWNED BY public.finance_deposit_receive.id;


--
-- Name: finance_deposit_transfer; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_deposit_transfer (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    from_client_id character varying(20) NOT NULL,
    from_account_number character varying(13),
    to_client_id character varying(20) NOT NULL,
    to_account_number character varying(13),
    transaction_date date,
    transaction_amount numeric(22,2),
    cancel_amount numeric(22,2),
    tran_batch_number integer,
    transaction_doc_num character varying(50),
    narration character varying(200) NOT NULL,
    cancel_by character varying(20),
    cancel_on timestamp with time zone,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_deposit_transfer OWNER TO delarship;

--
-- Name: finance_deposit_transfer_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_deposit_transfer_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_deposit_transfer_id_seq OWNER TO delarship;

--
-- Name: finance_deposit_transfer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_deposit_transfer_id_seq OWNED BY public.finance_deposit_transfer.id;


--
-- Name: finance_document_register; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_document_register (
    id integer NOT NULL,
    branch_code character varying(20) NOT NULL,
    doc_number character varying(200) NOT NULL,
    tran_type character varying(200) NOT NULL
);


ALTER TABLE public.finance_document_register OWNER TO delarship;

--
-- Name: finance_document_register_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_document_register_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_document_register_id_seq OWNER TO delarship;

--
-- Name: finance_document_register_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_document_register_id_seq OWNED BY public.finance_document_register.id;


--
-- Name: finance_general_ledger; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_general_ledger (
    gl_code character varying(13) NOT NULL,
    gl_name character varying(200) NOT NULL,
    reporting_gl_code character varying(13) NOT NULL,
    income_gl boolean NOT NULL,
    expense_gl boolean NOT NULL,
    assets_gl boolean NOT NULL,
    liabilities_gl boolean NOT NULL,
    is_leaf_node boolean NOT NULL,
    debit_allowed boolean NOT NULL,
    credit_allowed boolean NOT NULL,
    maintain_by_system boolean NOT NULL,
    sundry_flag boolean NOT NULL,
    is_bank_account boolean NOT NULL,
    sundry_max_amount numeric(22,2) NOT NULL,
    gl_comments text,
    closer_date timestamp with time zone,
    auth_by character varying(20),
    auth_on timestamp with time zone,
    cancel_by character varying(20),
    cancel_on timestamp with time zone,
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    parent_code character varying(13)
);


ALTER TABLE public.finance_general_ledger OWNER TO delarship;

--
-- Name: finance_led_rec_pay_bal_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_led_rec_pay_bal_hist (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    transaction_date date,
    gl_code character varying(13) NOT NULL,
    total_debit_sum numeric(22,2) NOT NULL,
    total_credit_sum numeric(22,2) NOT NULL,
    gl_balance numeric(22,2) NOT NULL,
    cum_debit_sum numeric(22,2) NOT NULL,
    cum_credit_sum numeric(22,2) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_led_rec_pay_bal_hist OWNER TO delarship;

--
-- Name: finance_led_rec_pay_bal_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_led_rec_pay_bal_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_led_rec_pay_bal_hist_id_seq OWNER TO delarship;

--
-- Name: finance_led_rec_pay_bal_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_led_rec_pay_bal_hist_id_seq OWNED BY public.finance_led_rec_pay_bal_hist.id;


--
-- Name: finance_led_rec_pay_balmon_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_led_rec_pay_balmon_hist (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    gl_code character varying(13) NOT NULL,
    transaction_date date,
    transaction_month integer,
    transaction_year integer,
    transaction_year_month integer,
    total_debit_sum numeric(22,2) NOT NULL,
    total_credit_sum numeric(22,2) NOT NULL,
    gl_balance numeric(22,2) NOT NULL,
    cum_debit_sum numeric(22,2) NOT NULL,
    cum_credit_sum numeric(22,2) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_led_rec_pay_balmon_hist OWNER TO delarship;

--
-- Name: finance_led_rec_pay_balmon_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_led_rec_pay_balmon_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_led_rec_pay_balmon_hist_id_seq OWNER TO delarship;

--
-- Name: finance_led_rec_pay_balmon_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_led_rec_pay_balmon_hist_id_seq OWNED BY public.finance_led_rec_pay_balmon_hist.id;


--
-- Name: finance_ledger_balance; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_ledger_balance (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    total_debit_sum numeric(22,2) NOT NULL,
    total_credit_sum numeric(22,2) NOT NULL,
    gl_balance numeric(22,2) NOT NULL,
    unauth_debit_sum numeric(22,2) NOT NULL,
    unauth_credit_sum numeric(22,2) NOT NULL,
    transfer_debit_sum numeric(22,2) NOT NULL,
    transfer_credit_sum numeric(22,2) NOT NULL,
    last_transaction_date date,
    last_balance_update date,
    last_monbal_update date,
    is_balance_updated boolean NOT NULL,
    auth_by character varying(20),
    auth_on timestamp with time zone,
    cancel_by character varying(20),
    cancel_on timestamp with time zone,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    gl_code character varying(13),
    is_monbal_recpay_updated boolean NOT NULL,
    is_monbal_updated boolean NOT NULL,
    last_monbal_recpay_update date
);


ALTER TABLE public.finance_ledger_balance OWNER TO delarship;

--
-- Name: finance_ledger_balance_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_ledger_balance_hist (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    transaction_date date,
    gl_code character varying(13) NOT NULL,
    total_debit_sum numeric(22,2) NOT NULL,
    total_credit_sum numeric(22,2) NOT NULL,
    gl_balance numeric(22,2) NOT NULL,
    cum_debit_sum numeric(22,2) NOT NULL,
    cum_credit_sum numeric(22,2) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_ledger_balance_hist OWNER TO delarship;

--
-- Name: finance_ledger_balance_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_ledger_balance_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_ledger_balance_hist_id_seq OWNER TO delarship;

--
-- Name: finance_ledger_balance_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_ledger_balance_hist_id_seq OWNED BY public.finance_ledger_balance_hist.id;


--
-- Name: finance_ledger_balance_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_ledger_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_ledger_balance_id_seq OWNER TO delarship;

--
-- Name: finance_ledger_balance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_ledger_balance_id_seq OWNED BY public.finance_ledger_balance.id;


--
-- Name: finance_ledger_balmon_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_ledger_balmon_hist (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    gl_code character varying(13) NOT NULL,
    transaction_date date,
    transaction_month integer,
    transaction_year integer,
    transaction_year_month integer,
    total_debit_sum numeric(22,2) NOT NULL,
    total_credit_sum numeric(22,2) NOT NULL,
    gl_balance numeric(22,2) NOT NULL,
    cum_debit_sum numeric(22,2) NOT NULL,
    cum_credit_sum numeric(22,2) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_ledger_balmon_hist OWNER TO delarship;

--
-- Name: finance_ledger_balmon_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_ledger_balmon_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_ledger_balmon_hist_id_seq OWNER TO delarship;

--
-- Name: finance_ledger_balmon_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_ledger_balmon_hist_id_seq OWNED BY public.finance_ledger_balmon_hist.id;


--
-- Name: finance_ledger_report_balance; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_ledger_report_balance (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    gl_code character varying(13),
    ason_credit_sum numeric(22,2),
    ason_debit_sum numeric(22,2),
    ason_gl_balance numeric(22,2),
    asof_credit_sum numeric(22,2),
    asof_debit_sum numeric(22,2),
    asof_gl_balance numeric(22,2),
    this_month_credit_sum numeric(22,2),
    this_month_debit_sum numeric(22,2),
    this_month_gl_balance numeric(22,2),
    past_month_credit_sum numeric(22,2),
    past_month_debit_sum numeric(22,2),
    past_month_gl_balance numeric(22,2),
    this_quarter_credit_sum numeric(22,2),
    this_quarter_debit_sum numeric(22,2),
    this_quarter_gl_balance numeric(22,2),
    past_quarter_credit_sum numeric(22,2),
    past_quarter_debit_sum numeric(22,2),
    past_quarter_gl_balance numeric(22,2),
    this_halfyear_credit_sum numeric(22,2),
    this_halfyear_debit_sum numeric(22,2),
    this_halfyear_gl_balance numeric(22,2),
    past_halfyear_credit_sum numeric(22,2),
    past_halfyear_debit_sum numeric(22,2),
    past_halfyear_gl_balance numeric(22,2),
    this_year_credit_sum numeric(22,2),
    this_year_debit_sum numeric(22,2),
    this_year_gl_balance numeric(22,2),
    past_year_credit_sum numeric(22,2),
    past_year_debit_sum numeric(22,2),
    past_year_gl_balance numeric(22,2),
    this_period_credit_sum numeric(22,2),
    this_period_debit_sum numeric(22,2),
    this_period_gl_balance numeric(22,2),
    app_user_id character varying(20)
);


ALTER TABLE public.finance_ledger_report_balance OWNER TO delarship;

--
-- Name: finance_ledger_report_balance_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_ledger_report_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_ledger_report_balance_id_seq OWNER TO delarship;

--
-- Name: finance_ledger_report_balance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_ledger_report_balance_id_seq OWNED BY public.finance_ledger_report_balance.id;


--
-- Name: finance_ledger_report_param; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_ledger_report_param (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    gl_code character varying(13),
    gl_level integer,
    gl_name character varying(100),
    reporting_gl_code character varying(100),
    parent_code character varying(100),
    gl_level_class character varying(200),
    income_gl boolean NOT NULL,
    expense_gl boolean NOT NULL,
    assets_gl boolean NOT NULL,
    liabilities_gl boolean NOT NULL,
    is_leaf_node boolean NOT NULL,
    maintain_by_system boolean NOT NULL,
    sundry_flag boolean NOT NULL,
    app_user_id character varying(20)
);


ALTER TABLE public.finance_ledger_report_param OWNER TO delarship;

--
-- Name: finance_ledger_report_param_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_ledger_report_param_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_ledger_report_param_id_seq OWNER TO delarship;

--
-- Name: finance_ledger_report_param_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_ledger_report_param_id_seq OWNED BY public.finance_ledger_report_param.id;


--
-- Name: finance_ledger_transaction_type; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_ledger_transaction_type (
    id integer NOT NULL,
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    gl_code character varying(13) NOT NULL,
    tran_type_id character varying(13) NOT NULL
);


ALTER TABLE public.finance_ledger_transaction_type OWNER TO delarship;

--
-- Name: finance_ledger_transaction_type_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_ledger_transaction_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_ledger_transaction_type_id_seq OWNER TO delarship;

--
-- Name: finance_ledger_transaction_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_ledger_transaction_type_id_seq OWNED BY public.finance_ledger_transaction_type.id;


--
-- Name: finance_tran_telbal_details; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_tran_telbal_details (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    org_teller_id character varying(20),
    res_teller_id character varying(20),
    tran_debit_credit character varying(2) NOT NULL,
    transaction_date date NOT NULL,
    tran_amount numeric(22,2) NOT NULL,
    cancel_amount numeric(22,2),
    available_balance numeric(22,2),
    auth_by character varying(20),
    auth_on timestamp with time zone,
    cancel_by character varying(20),
    cancel_on timestamp with time zone,
    cancel_remarks character varying(200),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_tran_telbal_details OWNER TO delarship;

--
-- Name: finance_tran_telbal_details_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_tran_telbal_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_tran_telbal_details_id_seq OWNER TO delarship;

--
-- Name: finance_tran_telbal_details_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_tran_telbal_details_id_seq OWNED BY public.finance_tran_telbal_details.id;


--
-- Name: finance_transaction_details; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_transaction_details (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    transaction_date date NOT NULL,
    batch_number integer NOT NULL,
    batch_serial integer NOT NULL,
    tran_type character varying(13) NOT NULL,
    account_number character varying(13) NOT NULL,
    tran_gl_code character varying(13) NOT NULL,
    contra_gl_code character varying(13) NOT NULL,
    tran_debit_credit character varying(2) NOT NULL,
    tran_amount numeric(22,2) NOT NULL,
    cancel_amount numeric(22,2),
    available_balance numeric(22,2),
    charge_amount numeric(22,2),
    charge_code character varying(20),
    tran_document_prefix character varying(10),
    tran_document_number character varying(10),
    tran_person_phone character varying(15),
    tran_person_name character varying(200),
    tran_sign_verified boolean,
    system_posted_tran boolean,
    transaction_narration character varying(200),
    auth_by character varying(20),
    auth_on timestamp with time zone,
    cancel_by character varying(20),
    cancel_on timestamp with time zone,
    cancel_remarks character varying(200),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_transaction_details OWNER TO delarship;

--
-- Name: finance_transaction_details_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_transaction_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_transaction_details_id_seq OWNER TO delarship;

--
-- Name: finance_transaction_details_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_transaction_details_id_seq OWNED BY public.finance_transaction_details.id;


--
-- Name: finance_transaction_ibr; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_transaction_ibr (
    transaction_id character varying(20) NOT NULL,
    org_branch_code integer,
    res_branch_code integer,
    transaction_date date,
    org_batch_number integer NOT NULL,
    res_batch_number integer NOT NULL,
    org_gl_code character varying(13) NOT NULL,
    res_gl_code character varying(13) NOT NULL,
    tran_status character varying(2) NOT NULL,
    tran_amount numeric(22,2) NOT NULL,
    cancel_amount numeric(22,2),
    transaction_narration character varying(200),
    auth_by character varying(20),
    auth_on timestamp with time zone,
    cancel_by character varying(20),
    cancel_on timestamp with time zone,
    cancel_remarks character varying(200),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_transaction_ibr OWNER TO delarship;

--
-- Name: finance_transaction_master; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_transaction_master (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    transaction_date date NOT NULL,
    batch_number integer NOT NULL,
    tran_type character varying(13) NOT NULL,
    total_credit_amount numeric(22,2) NOT NULL,
    total_debit_amount numeric(22,2) NOT NULL,
    tran_source_table character varying(50) NOT NULL,
    tran_source_key character varying(100) NOT NULL,
    transaction_narration character varying(200),
    system_posted_tran boolean,
    auth_by character varying(20),
    auth_on timestamp with time zone,
    cancel_by character varying(20),
    cancel_on timestamp with time zone,
    cancel_remarks character varying(200),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_transaction_master OWNER TO delarship;

--
-- Name: finance_transaction_master_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_transaction_master_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_transaction_master_id_seq OWNER TO delarship;

--
-- Name: finance_transaction_master_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_transaction_master_id_seq OWNED BY public.finance_transaction_master.id;


--
-- Name: finance_transaction_table; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_transaction_table (
    id integer NOT NULL,
    branch_code integer,
    center_code character varying(20),
    transaction_date date NOT NULL,
    batch_serial integer NOT NULL,
    account_number character varying(13) NOT NULL,
    tran_gl_code character varying(13) NOT NULL,
    contra_gl_code character varying(13),
    tran_debit_credit character varying(2) NOT NULL,
    tran_screen character varying(20),
    tran_type character varying(13) NOT NULL,
    tran_amount numeric(22,2) NOT NULL,
    charge_amount numeric(22,2),
    charge_code character varying(20),
    available_balance numeric(22,2) NOT NULL,
    tran_person_phone character varying(15),
    tran_person_name character varying(200),
    tran_document_prefix character varying(10),
    tran_document_number character varying(10),
    tran_sign_verified boolean,
    system_posted_tran boolean,
    transaction_narration character varying(200),
    tran_balance_check_required boolean,
    tran_auth_required boolean,
    back_date_transaction character varying(1),
    auth_by character varying(20),
    auth_on timestamp with time zone,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_transaction_table OWNER TO delarship;

--
-- Name: finance_transaction_table_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_transaction_table_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_transaction_table_id_seq OWNER TO delarship;

--
-- Name: finance_transaction_table_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_transaction_table_id_seq OWNED BY public.finance_transaction_table.id;


--
-- Name: finance_transaction_telbal; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_transaction_telbal (
    branch_code integer NOT NULL,
    teller_id character varying(20) NOT NULL,
    cash_od_allowed boolean,
    credit_limit_amount numeric(22,2) NOT NULL,
    debit_limit_amount numeric(22,2) NOT NULL,
    total_credit_amount numeric(22,2) NOT NULL,
    total_debit_amount numeric(22,2) NOT NULL,
    cash_balance numeric(22,2) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_transaction_telbal OWNER TO delarship;

--
-- Name: finance_transaction_type; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_transaction_type (
    tran_type_id character varying(13) NOT NULL,
    tran_type_code character varying(13) NOT NULL,
    tran_type_name character varying(200) NOT NULL,
    default_debit_credit character varying(1),
    debit_allowed boolean NOT NULL,
    credit_allowed boolean NOT NULL,
    is_account_required boolean NOT NULL,
    is_document_required boolean NOT NULL,
    transaction_screen character varying(200),
    transaction_table character varying(200),
    transaction_from_table character varying(200),
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone,
    credit_gl_code character varying(13),
    debit_gl_code character varying(13),
    tran_account_type character varying(13),
    tran_debit_account_type character varying(13),
    transaction_client_type character varying(20)
);


ALTER TABLE public.finance_transaction_type OWNER TO delarship;

--
-- Name: finance_transfer_tran; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.finance_transfer_tran (
    id integer NOT NULL,
    transaction_date date NOT NULL,
    from_client_id character varying(13),
    from_client_name character varying(200),
    from_client_balance numeric(22,2) NOT NULL,
    from_account_number character varying(13) NOT NULL,
    to_client_id character varying(13),
    to_client_name character varying(200),
    to_client_balance numeric(22,2) NOT NULL,
    to_account_number character varying(13) NOT NULL,
    from_gl_code character varying(13),
    from_gl_name character varying(200),
    from_gl_balance numeric(22,2) NOT NULL,
    to_gl_code character varying(13),
    to_gl_name character varying(200),
    to_gl_balance numeric(22,2) NOT NULL,
    tran_type character varying(13) NOT NULL,
    tran_screen character varying(50) NOT NULL,
    tran_amount numeric(22,2) NOT NULL,
    tran_document_number character varying(100),
    tran_sign_verified boolean,
    system_posted_tran boolean,
    transaction_narration character varying(200),
    back_date_transaction character varying(1),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.finance_transfer_tran OWNER TO delarship;

--
-- Name: finance_transfer_tran_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.finance_transfer_tran_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.finance_transfer_tran_id_seq OWNER TO delarship;

--
-- Name: finance_transfer_tran_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.finance_transfer_tran_id_seq OWNED BY public.finance_transfer_tran.id;


--
-- Name: hrm_advance_salary; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_advance_salary (
    id integer NOT NULL,
    amount integer NOT NULL,
    remarks character varying(20),
    month_year date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    employee_id_id character varying(20)
);


ALTER TABLE public.hrm_advance_salary OWNER TO delarship;

--
-- Name: hrm_advance_salary_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_advance_salary_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_advance_salary_id_seq OWNER TO delarship;

--
-- Name: hrm_advance_salary_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_advance_salary_id_seq OWNED BY public.hrm_advance_salary.id;


--
-- Name: hrm_allowance_payment; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_allowance_payment (
    id integer NOT NULL,
    amount integer NOT NULL,
    remarks character varying(200),
    month_year date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    allowance_id_id character varying(20),
    employee_id_id character varying(20)
);


ALTER TABLE public.hrm_allowance_payment OWNER TO delarship;

--
-- Name: hrm_allowance_payment_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_allowance_payment_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_allowance_payment_id_seq OWNER TO delarship;

--
-- Name: hrm_allowance_payment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_allowance_payment_id_seq OWNED BY public.hrm_allowance_payment.id;


--
-- Name: hrm_attendance_card_log; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_attendance_card_log (
    id integer NOT NULL,
    log_time timestamp with time zone,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    employee_id character varying(20),
    shift_id character varying(20)
);


ALTER TABLE public.hrm_attendance_card_log OWNER TO delarship;

--
-- Name: hrm_attendance_card_log_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_attendance_card_log_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_attendance_card_log_id_seq OWNER TO delarship;

--
-- Name: hrm_attendance_card_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_attendance_card_log_id_seq OWNED BY public.hrm_attendance_card_log.id;


--
-- Name: hrm_attendance_log; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_attendance_log (
    id integer NOT NULL,
    attendance_date date,
    in_time timestamp with time zone,
    out_time timestamp with time zone,
    total_work_minute integer,
    work_start_time_sec integer,
    work_end_time_sec integer,
    work_start_grace_time_sec integer,
    work_end_time_grace_sec integer,
    refresh_start_time_sec integer,
    refresh_end_time_sec integer,
    is_late_entry boolean,
    is_early_exit boolean,
    late_entry_reason character varying(200),
    early_exit_reason character varying(200),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    early_exit_approve character varying(20),
    employee_id character varying(20),
    late_entry_approve character varying(20),
    shift_id character varying(20)
);


ALTER TABLE public.hrm_attendance_log OWNER TO delarship;

--
-- Name: hrm_attendance_log_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_attendance_log_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_attendance_log_id_seq OWNER TO delarship;

--
-- Name: hrm_attendance_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_attendance_log_id_seq OWNED BY public.hrm_attendance_log.id;


--
-- Name: hrm_attendance_schedule; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_attendance_schedule (
    schedule_id character varying(20) NOT NULL,
    schedule_date date NOT NULL,
    schedule_description character varying(500) NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    schedule_status character varying(2),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    employee_id character varying(20),
    shift_id character varying(20)
);


ALTER TABLE public.hrm_attendance_schedule OWNER TO delarship;

--
-- Name: hrm_bank_info; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_bank_info (
    bank_id character varying(20) NOT NULL,
    bank_name character varying(200) NOT NULL,
    bank_address character varying(200) NOT NULL,
    bank_phone character varying(200) NOT NULL,
    bank_email character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.hrm_bank_info OWNER TO delarship;

--
-- Name: hrm_business_unit; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_business_unit (
    branch_code character varying(20) NOT NULL,
    department_id character varying(20) NOT NULL,
    bunit_id character varying(20) NOT NULL,
    bunit_name character varying(200) NOT NULL,
    bunit_incharge character varying(20),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.hrm_business_unit OWNER TO delarship;

--
-- Name: hrm_company_information; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_company_information (
    company_id character varying(20) NOT NULL,
    company_name character varying(200) NOT NULL,
    office_address character varying(200),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    country_id character varying(20),
    district_id character varying(20),
    division_id character varying(20),
    upozila_id character varying(20)
);


ALTER TABLE public.hrm_company_information OWNER TO delarship;

--
-- Name: hrm_company_office; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_company_office (
    office_id character varying(20) NOT NULL,
    office_name character varying(200) NOT NULL,
    office_address character varying(200),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    country_id character varying(20),
    district_id character varying(20),
    division_id character varying(20),
    upozila_id character varying(20)
);


ALTER TABLE public.hrm_company_office OWNER TO delarship;

--
-- Name: hrm_department_info; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_department_info (
    department_id character varying(20) NOT NULL,
    department_name character varying(200) NOT NULL,
    total_employee integer,
    department_location character varying(200) NOT NULL,
    department_incharge character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.hrm_department_info OWNER TO delarship;

--
-- Name: hrm_education_degree; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_education_degree (
    degree_id character varying(20) NOT NULL,
    degree_name character varying(200) NOT NULL,
    degree_duration character varying(200),
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.hrm_education_degree OWNER TO delarship;

--
-- Name: hrm_employee_designation; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_employee_designation (
    desig_id character varying(20) NOT NULL,
    desig_name character varying(200) NOT NULL,
    attendance_bonus boolean NOT NULL,
    attendance_bonus_amt integer NOT NULL,
    production_bonus boolean NOT NULL,
    production_bonus_amt integer NOT NULL,
    sales_comission integer NOT NULL,
    ot_hour_allow boolean NOT NULL,
    ot_hour_rate numeric(22,2),
    stamp_ded_allow boolean NOT NULL,
    stamp_ded_amount integer NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.hrm_employee_designation OWNER TO delarship;

--
-- Name: hrm_employee_details; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_employee_details (
    employee_id character varying(20) NOT NULL,
    employee_name character varying(200) NOT NULL,
    employee_father_name character varying(200) NOT NULL,
    employee_mother_name character varying(200) NOT NULL,
    employee_blood_group character varying(5) NOT NULL,
    employee_sex character varying(5),
    employee_religion character varying(5) NOT NULL,
    employee_marital_status character varying(5),
    employee_national_id character varying(200),
    employee_present_address text,
    employee_permanent_address text,
    employee_phone_own character varying(15),
    employee_phone_office character varying(15),
    passport_no character varying(15),
    driving_licence character varying(15),
    employee_tin character varying(15),
    employee_phone_home character varying(15),
    email_personal character varying(30),
    employee_joining_date date,
    employee_date_of_birth date,
    employee_status character varying(5),
    eme_contact_name character varying(100),
    eme_contact_relation character varying(100),
    eme_contact_phone character varying(15),
    eme_contact_address character varying(100),
    office_id character varying(13) NOT NULL,
    email_official character varying(30),
    reporting_to character varying(30),
    card_number character varying(100),
    salary_bank_ac character varying(20),
    contract_start_date date,
    contract_exp_date date,
    last_inc_date date,
    next_inc_date date,
    service_end_date date,
    last_transfer_date date,
    next_transfer_date date,
    job_confirm_date date,
    pf_confirm_date date,
    gf_confirm_date date,
    wf_confirm_date date,
    last_promotion_date date,
    salary_gross integer,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    business_unit_id character varying(20),
    country_id character varying(20),
    current_shift character varying(20),
    department_id_id character varying(20),
    designation_id character varying(20),
    district_id character varying(20),
    division_id character varying(20),
    emptype_id character varying(20),
    office_location character varying(20),
    salary_bank character varying(20),
    salscale_id character varying(20),
    upozila_id character varying(20)
);


ALTER TABLE public.hrm_employee_details OWNER TO delarship;

--
-- Name: hrm_employee_document; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_employee_document (
    id integer NOT NULL,
    document_location character varying(100) NOT NULL,
    file_no character varying(20) NOT NULL,
    status character varying(2),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    document_type character varying(20),
    employee_id character varying(20)
);


ALTER TABLE public.hrm_employee_document OWNER TO delarship;

--
-- Name: hrm_employee_document_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_employee_document_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_employee_document_id_seq OWNER TO delarship;

--
-- Name: hrm_employee_document_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_employee_document_id_seq OWNED BY public.hrm_employee_document.id;


--
-- Name: hrm_employee_document_type; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_employee_document_type (
    document_type_id character varying(20) NOT NULL,
    document_type_name character varying(200) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.hrm_employee_document_type OWNER TO delarship;

--
-- Name: hrm_employee_experience; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_employee_experience (
    id integer NOT NULL,
    serial_no integer,
    company_name character varying(200) NOT NULL,
    company_address character varying(500) NOT NULL,
    company_type character varying(200),
    "position" character varying(200),
    department character varying(200),
    responsibility character varying(800),
    achievement character varying(200),
    phone_number character varying(200),
    email character varying(200),
    contact_person character varying(200),
    emp_id character varying(200),
    start_date date NOT NULL,
    end_date date NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    employee_id character varying(20)
);


ALTER TABLE public.hrm_employee_experience OWNER TO delarship;

--
-- Name: hrm_employee_experience_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_employee_experience_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_employee_experience_id_seq OWNER TO delarship;

--
-- Name: hrm_employee_experience_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_employee_experience_id_seq OWNED BY public.hrm_employee_experience.id;


--
-- Name: hrm_employee_holyday; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_employee_holyday (
    holiday_sl_no character varying(20) NOT NULL,
    holiday_from_date date,
    holiday_end_date date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    employee_id_id character varying(20),
    holiday_type_id character varying(20)
);


ALTER TABLE public.hrm_employee_holyday OWNER TO delarship;

--
-- Name: hrm_employee_nominee; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_employee_nominee (
    id integer NOT NULL,
    nominee_serial character varying(20),
    nominee_name character varying(100) NOT NULL,
    nominee_sex character varying(20) NOT NULL,
    nominee_father_name character varying(100) NOT NULL,
    nominee_mother_name character varying(20) NOT NULL,
    nominee_present_addr character varying(300) NOT NULL,
    nominee_permanent_addr character varying(300) NOT NULL,
    nominee_birth_date date,
    country_id character varying(13) NOT NULL,
    nominee_nid_num character varying(20) NOT NULL,
    nominee_religion character varying(20) NOT NULL,
    nominee_blood_group character varying(4) NOT NULL,
    nominee_mobile_num character varying(20) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    employee_id character varying(20)
);


ALTER TABLE public.hrm_employee_nominee OWNER TO delarship;

--
-- Name: hrm_employee_nominee_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_employee_nominee_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_employee_nominee_id_seq OWNER TO delarship;

--
-- Name: hrm_employee_nominee_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_employee_nominee_id_seq OWNED BY public.hrm_employee_nominee.id;


--
-- Name: hrm_employee_training; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_employee_training (
    id integer NOT NULL,
    institute_name character varying(200),
    training_name character varying(200),
    training_description character varying(200),
    from_date date,
    upto_date date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    employee_id character varying(20),
    schedule_id character varying(20)
);


ALTER TABLE public.hrm_employee_training OWNER TO delarship;

--
-- Name: hrm_employee_training_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_employee_training_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_employee_training_id_seq OWNER TO delarship;

--
-- Name: hrm_employee_training_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_employee_training_id_seq OWNED BY public.hrm_employee_training.id;


--
-- Name: hrm_employment_type; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_employment_type (
    emptype_id character varying(20) NOT NULL,
    emptype_name character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.hrm_employment_type OWNER TO delarship;

--
-- Name: hrm_extra_allowance; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_extra_allowance (
    allowance_id character varying(20) NOT NULL,
    allowance_name character varying(200) NOT NULL,
    allowance_amount numeric(22,2) NOT NULL,
    comments character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.hrm_extra_allowance OWNER TO delarship;

--
-- Name: hrm_holyday_info; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_holyday_info (
    holiday_sl_no character varying(20) NOT NULL,
    fiscal_year character varying(20) NOT NULL,
    holiday_from_date date,
    holiday_end_date date,
    holiday_desc character varying(200) NOT NULL,
    month character varying(20) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    holiday_type_id character varying(20)
);


ALTER TABLE public.hrm_holyday_info OWNER TO delarship;

--
-- Name: hrm_holyday_type; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_holyday_type (
    holiday_type_id character varying(20) NOT NULL,
    type_name character varying(100) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.hrm_holyday_type OWNER TO delarship;

--
-- Name: hrm_leave_application; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_leave_application (
    id integer NOT NULL,
    application_date date,
    from_date date,
    upto_date date,
    join_date date,
    approval_status character varying(10),
    leave_reason character varying(200),
    approval_comments character varying(200),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    application_to character varying(20),
    approve_by character varying(20),
    employee_id character varying(20),
    leave_id character varying(20)
);


ALTER TABLE public.hrm_leave_application OWNER TO delarship;

--
-- Name: hrm_leave_application_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_leave_application_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_leave_application_id_seq OWNER TO delarship;

--
-- Name: hrm_leave_application_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_leave_application_id_seq OWNED BY public.hrm_leave_application.id;


--
-- Name: hrm_leave_info; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_leave_info (
    leave_id character varying(20) NOT NULL,
    leave_name character varying(200) NOT NULL,
    prefix_name character varying(200) NOT NULL,
    leave_encasement character varying(10),
    holiday_check boolean NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.hrm_leave_info OWNER TO delarship;

--
-- Name: hrm_others_deduction; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_others_deduction (
    id integer NOT NULL,
    amount integer NOT NULL,
    remarks character varying(200),
    month_year date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    employee_id_id character varying(20)
);


ALTER TABLE public.hrm_others_deduction OWNER TO delarship;

--
-- Name: hrm_others_deduction_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_others_deduction_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_others_deduction_id_seq OWNER TO delarship;

--
-- Name: hrm_others_deduction_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_others_deduction_id_seq OWNED BY public.hrm_others_deduction.id;


--
-- Name: hrm_pay_bill; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_pay_bill (
    bill_id character varying(20) NOT NULL,
    bill_date date,
    bill_comments character varying(200) NOT NULL,
    bill_doc_detail character varying(200) NOT NULL,
    bill_amount numeric(22,2) NOT NULL,
    approval_amount numeric(22,2) NOT NULL,
    checked_status boolean,
    approve_status boolean,
    checked_date date,
    approve_date date,
    attached_file character varying(100) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    approve_by character varying(20),
    checked_by character varying(20),
    prepare_by character varying(20)
);


ALTER TABLE public.hrm_pay_bill OWNER TO delarship;

--
-- Name: hrm_salary_scale; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_salary_scale (
    salscale_id character varying(20) NOT NULL,
    salscale_name character varying(200) NOT NULL,
    total_salary numeric(22,2) NOT NULL,
    deduction_pct numeric(22,2) NOT NULL,
    total_deduction numeric(22,2) NOT NULL,
    comments character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.hrm_salary_scale OWNER TO delarship;

--
-- Name: hrm_salary_scale_bonous; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_salary_scale_bonous (
    salsdtlcale_id character varying(20) NOT NULL,
    bonus_id character varying(20) NOT NULL,
    bonus_name character varying(200) NOT NULL,
    bonus_pct numeric(22,2) NOT NULL,
    bonus_amount numeric(22,2) NOT NULL,
    comments character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    salscale_id character varying(20)
);


ALTER TABLE public.hrm_salary_scale_bonous OWNER TO delarship;

--
-- Name: hrm_salary_scale_details; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_salary_scale_details (
    salsdtlcale_id character varying(20) NOT NULL,
    salsdtlcale_name character varying(200) NOT NULL,
    salary_amount numeric(22,2) NOT NULL,
    deduction_pct numeric(22,2) NOT NULL,
    total_deduction numeric(22,2) NOT NULL,
    comments character varying(200) NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    salscale_id character varying(20)
);


ALTER TABLE public.hrm_salary_scale_details OWNER TO delarship;

--
-- Name: hrm_salary_sheet; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_salary_sheet (
    id integer NOT NULL,
    branch_code integer,
    dept_id character varying(20),
    desig_name character varying(200),
    employee_id character varying(200),
    employee_name character varying(200),
    total_atten character varying(20),
    salary_gross numeric(22,2),
    ot_hour numeric(22,2),
    ot_hour_rate numeric(22,2),
    ot_amount numeric(22,2),
    sales_comission numeric(22,2),
    total_advance numeric(22,2),
    others_allowance numeric(22,2),
    others_deduction numeric(22,2),
    stamp_ded_amount numeric(22,2),
    total_salary numeric(22,2),
    netpay numeric(23,2),
    month_year character varying(20),
    app_user_id character varying(20),
    app_data_time timestamp with time zone
);


ALTER TABLE public.hrm_salary_sheet OWNER TO delarship;

--
-- Name: hrm_salary_sheet_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_salary_sheet_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_salary_sheet_id_seq OWNER TO delarship;

--
-- Name: hrm_salary_sheet_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_salary_sheet_id_seq OWNED BY public.hrm_salary_sheet.id;


--
-- Name: hrm_shift_info; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_shift_info (
    shift_id character varying(20) NOT NULL,
    shift_name character varying(200) NOT NULL,
    total_work_minute integer,
    work_start_time_sec integer,
    work_end_time_sec integer,
    work_start_grace_time_sec integer,
    work_end_time_grace_sec integer,
    refresh_start_time_sec integer,
    refresh_end_time_sec integer,
    ot_time_start integer,
    ot_time_end integer,
    max_ot_hour integer,
    duty_gap_time integer,
    morning_ot_time integer,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    office_id character varying(20)
);


ALTER TABLE public.hrm_shift_info OWNER TO delarship;

--
-- Name: hrm_shift_info_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.hrm_shift_info_hist (
    id integer NOT NULL,
    shift_name character varying(200) NOT NULL,
    shift_effect_date date NOT NULL,
    office_id character varying(13) NOT NULL,
    total_work_minute integer,
    work_start_time_sec integer,
    work_end_time_sec integer,
    work_start_grace_time_sec integer,
    work_end_time_grace_sec integer,
    refresh_start_time_sec integer,
    refresh_end_time_sec integer,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    shift_id character varying(20)
);


ALTER TABLE public.hrm_shift_info_hist OWNER TO delarship;

--
-- Name: hrm_shift_info_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.hrm_shift_info_hist_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hrm_shift_info_hist_id_seq OWNER TO delarship;

--
-- Name: hrm_shift_info_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.hrm_shift_info_hist_id_seq OWNED BY public.hrm_shift_info_hist.id;


--
-- Name: sales_all_trandtl; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_all_trandtl (
    id integer NOT NULL,
    center_code character varying(20),
    center_name character varying(200),
    client_id character varying(200),
    client_name character varying(200),
    invoice_date date,
    invoice_number character varying(20),
    product_name character varying(200),
    product_model character varying(200),
    product_quantity character varying(200),
    product_price character varying(200),
    total_price integer,
    pay_amount integer,
    due_amount integer,
    instrepay_repay_amt integer,
    instrepay_repay_freq character varying(200),
    nof_installment integer,
    instrepay_tot_repay_amt integer,
    instrcv_inv_number character varying(200),
    instrcv_entry_date date,
    instrcv_instlmnt integer,
    instrcv_ref_num character varying(200),
    deposit_date date,
    deposit_amount integer,
    deposit_memo_num character varying(200),
    dpsrcv_date date,
    dpsrcv_amount integer,
    dpsrcv_memo_num character varying(200),
    app_user_id character varying(200),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_all_trandtl OWNER TO delarship;

--
-- Name: sales_all_trandtl_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_all_trandtl_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_all_trandtl_id_seq OWNER TO delarship;

--
-- Name: sales_all_trandtl_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_all_trandtl_id_seq OWNED BY public.sales_all_trandtl.id;


--
-- Name: sales_application_settings; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_application_settings (
    id integer NOT NULL,
    company_code character varying(10) NOT NULL,
    company_name character varying(300) NOT NULL,
    company_address character varying(300),
    company_mobile character varying(50),
    company_email character varying(100),
    company_logo character varying(100) NOT NULL,
    barcode_enable boolean NOT NULL,
    invoice_file_name character varying(200),
    invoice_line1 character varying(100),
    invoice_line2 character varying(100),
    invoice_line3 character varying(100),
    application_title character varying(200),
    quick_sales_entry_customer boolean NOT NULL,
    quick_payment_type character varying(20),
    quick_sales_client_id character varying(20),
    quick_sales_account_number character varying(20),
    quick_sales_client_name character varying(200),
    quick_sales_client_address character varying(200),
    emi_profit_receivable character varying(13) NOT NULL,
    emi_profit_receive character varying(13) NOT NULL,
    product_wise_ledger boolean NOT NULL,
    product_stock_gl character varying(13) NOT NULL,
    stock_due_gl character varying(13) NOT NULL,
    product_sales_gl character varying(13) NOT NULL,
    sales_due_gl character varying(13) NOT NULL,
    stock_ret_gl character varying(13) NOT NULL,
    sales_ret_gl character varying(13) NOT NULL,
    invoice_discount_gl character varying(13) NOT NULL,
    damage_gl character varying(13) NOT NULL,
    product_stock_parent_gl character varying(13) NOT NULL,
    product_sales_parent_gl character varying(13) NOT NULL,
    product_stock_ret_parent_gl character varying(13) NOT NULL,
    product_sales_ret_parent_gl character varying(13) NOT NULL,
    product_damage_parent_gl character varying(13) NOT NULL,
    profit_and_loss_ledger character varying(13) NOT NULL,
    profit_ledger character varying(13) NOT NULL,
    loss_ledger character varying(13) NOT NULL,
    stock_in_hand_ledger character varying(13) NOT NULL,
    cost_of_good_sold_ledger character varying(13) NOT NULL,
    sales_price_editable boolean NOT NULL,
    sales_discount_rate_editable boolean NOT NULL,
    sales_discount_amount_editable boolean NOT NULL,
    sales_executive_phone_editable boolean NOT NULL,
    payment_document_mandatory boolean NOT NULL,
    sales_payment_document_lebel character varying(100) NOT NULL,
    client_admission_fee_auto boolean NOT NULL,
    client_admission_fee numeric(22,2),
    client_admission_fee_ledger character varying(20),
    transaction_from_date date,
    transaction_doc_required boolean
);


ALTER TABLE public.sales_application_settings OWNER TO delarship;

--
-- Name: sales_application_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_application_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_application_settings_id_seq OWNER TO delarship;

--
-- Name: sales_application_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_application_settings_id_seq OWNED BY public.sales_application_settings.id;


--
-- Name: sales_client_balance; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_client_balance (
    id integer NOT NULL,
    client_id character varying(20) NOT NULL,
    account_number character varying(13) NOT NULL,
    total_purchase_amount numeric(22,2) NOT NULL,
    total_purchase_payment numeric(22,2) NOT NULL,
    total_purchase_quantity integer NOT NULL,
    total_sales_amount numeric(22,2) NOT NULL,
    total_sales_payment numeric(22,2) NOT NULL,
    total_sales_quantity integer NOT NULL,
    total_order_amount numeric(22,2) NOT NULL,
    total_order_payment numeric(22,2) NOT NULL,
    total_order_quantity integer NOT NULL,
    total_sales_return_amount numeric(22,2) NOT NULL,
    total_sales_return_quantity integer NOT NULL,
    total_order_return_amount numeric(22,2) NOT NULL,
    total_order_return_quantity integer NOT NULL,
    total_purchase_return_amount numeric(22,2) NOT NULL,
    total_purchase_return_quantity integer NOT NULL,
    total_damage_amount numeric(22,2) NOT NULL,
    total_damage_quantity integer NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_client_balance OWNER TO delarship;

--
-- Name: sales_client_balance_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_client_balance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_client_balance_id_seq OWNER TO delarship;

--
-- Name: sales_client_balance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_client_balance_id_seq OWNED BY public.sales_client_balance.id;


--
-- Name: sales_client_closing; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_client_closing (
    id integer NOT NULL,
    client_id character varying(100) NOT NULL,
    closing_date date NOT NULL,
    closing_reason character varying(200) NOT NULL,
    cancel_by character varying(20),
    cancel_date date,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_client_closing OWNER TO delarship;

--
-- Name: sales_client_closing_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_client_closing_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_client_closing_id_seq OWNER TO delarship;

--
-- Name: sales_client_closing_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_client_closing_id_seq OWNED BY public.sales_client_closing.id;


--
-- Name: sales_client_id_changes_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_client_id_changes_hist (
    id integer NOT NULL,
    old_client_id character varying(100) NOT NULL,
    new_client_id character varying(100) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_client_id_changes_hist OWNER TO delarship;

--
-- Name: sales_client_id_changes_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_client_id_changes_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_client_id_changes_hist_id_seq OWNER TO delarship;

--
-- Name: sales_client_id_changes_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_client_id_changes_hist_id_seq OWNED BY public.sales_client_id_changes_hist.id;


--
-- Name: sales_client_photo_sign; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_client_photo_sign (
    id integer NOT NULL,
    document_type character varying(2) NOT NULL,
    document_location character varying(100) NOT NULL,
    status character varying(2),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    client_id character varying(20) NOT NULL
);


ALTER TABLE public.sales_client_photo_sign OWNER TO delarship;

--
-- Name: sales_client_photo_sign_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_client_photo_sign_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_client_photo_sign_id_seq OWNER TO delarship;

--
-- Name: sales_client_photo_sign_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_client_photo_sign_id_seq OWNED BY public.sales_client_photo_sign.id;


--
-- Name: sales_client_profit_history; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_client_profit_history (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    profit_from_date date,
    profit_upto_date date,
    profit_from_account character varying(13) NOT NULL,
    profit_to_account character varying(13) NOT NULL,
    total_purchase_amount numeric(22,2) NOT NULL,
    total_sales_amount numeric(22,2) NOT NULL,
    total_customer_balance numeric(22,2) NOT NULL,
    total_supplier_balance numeric(22,2) NOT NULL,
    profit_or_loss_amount numeric(22,2) NOT NULL,
    transaction_date date NOT NULL,
    batch_number integer NOT NULL,
    bill_payment_batch integer NOT NULL,
    cancel_date date,
    cancel_user_id character varying(20),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    client_id character varying(20) NOT NULL
);


ALTER TABLE public.sales_client_profit_history OWNER TO delarship;

--
-- Name: sales_client_profit_history_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_client_profit_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_client_profit_history_id_seq OWNER TO delarship;

--
-- Name: sales_client_profit_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_client_profit_history_id_seq OWNED BY public.sales_client_profit_history.id;


--
-- Name: sales_clients; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_clients (
    client_id character varying(20) NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    client_name character varying(200) NOT NULL,
    client_type character varying(20) NOT NULL,
    client_referred_by character varying(15),
    client_father_name character varying(200) NOT NULL,
    client_mother_name character varying(200),
    client_blood_group character varying(5) NOT NULL,
    client_sex character varying(5),
    client_religion character varying(5) NOT NULL,
    client_marital_status character varying(5),
    client_national_id character varying(200),
    client_present_address text,
    client_permanent_address text,
    client_phone character varying(15),
    client_email character varying(30),
    client_joining_date date NOT NULL,
    client_education character varying(50),
    client_date_of_birth date,
    client_status character varying(5),
    client_monthly_income numeric(22,2),
    client_annual_income numeric(22,2),
    client_admit_fee numeric(22,2),
    client_admit_fee_batch integer,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    district_id character varying(20),
    closing_date date
);


ALTER TABLE public.sales_clients OWNER TO delarship;

--
-- Name: sales_delar_security_info; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_delar_security_info (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    phone_number character varying(15) NOT NULL,
    client_type_code character varying(20) NOT NULL,
    credit_limit numeric(22,2) NOT NULL,
    tin_number character varying(200) NOT NULL,
    trade_licence_number character varying(200),
    guarantor_number character varying(15),
    cheque_number character varying(200),
    cheque_amount numeric(22,2) NOT NULL,
    cheque_date character varying(200),
    bank_name character varying(200),
    branch_name character varying(200),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    client_id character varying(20) NOT NULL
);


ALTER TABLE public.sales_delar_security_info OWNER TO delarship;

--
-- Name: sales_delar_security_info_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_delar_security_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_delar_security_info_id_seq OWNER TO delarship;

--
-- Name: sales_delar_security_info_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_delar_security_info_id_seq OWNED BY public.sales_delar_security_info.id;


--
-- Name: sales_emi_history; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_emi_history (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    account_number character varying(13),
    emi_reference_no character varying(20) NOT NULL,
    emi_rate numeric(22,2),
    emi_inst_amount numeric(22,2),
    inst_receive_date date,
    inst_receive_amount numeric(22,2),
    total_installment_due integer,
    total_installment_payment integer,
    total_installment_overdue integer,
    total_installment_advance integer,
    total_emi_outstanding numeric(22,2),
    emi_principal_outstanding numeric(22,2),
    emi_profit_outstanding numeric(22,2),
    emi_total_payment numeric(22,2),
    emi_principal_payment numeric(22,2),
    emi_profit_payment numeric(22,2),
    total_advance_recover numeric(22,2),
    principal_advance_recover numeric(22,2),
    profit_advance_recover numeric(22,2),
    total_due_recover numeric(22,2),
    principal_due_recover numeric(22,2),
    profit_due_recover numeric(22,2),
    emi_total_overdue numeric(22,2),
    emi_principal_overdue numeric(22,2),
    emi_profit_overdue numeric(22,2),
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_emi_history OWNER TO delarship;

--
-- Name: sales_emi_history_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_emi_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_emi_history_id_seq OWNER TO delarship;

--
-- Name: sales_emi_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_emi_history_id_seq OWNED BY public.sales_emi_history.id;


--
-- Name: sales_emi_receive; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_emi_receive (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    client_id character varying(13),
    account_number character varying(13),
    emi_reference_no character varying(20) NOT NULL,
    receive_date date,
    entry_day_sl integer,
    receive_amount numeric(22,2),
    transaction_narration character varying(200),
    tran_batch_number integer,
    penalty_charge numeric(22,2),
    receive_document_number character varying(50),
    is_transfer boolean NOT NULL,
    emi_cancel_by character varying(20),
    emi_cancel_on date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_emi_receive OWNER TO delarship;

--
-- Name: sales_emi_receive_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_emi_receive_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_emi_receive_id_seq OWNER TO delarship;

--
-- Name: sales_emi_receive_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_emi_receive_id_seq OWNED BY public.sales_emi_receive.id;


--
-- Name: sales_emi_settings; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_emi_settings (
    id integer NOT NULL,
    emi_profit_receivable character varying(13) NOT NULL,
    emi_profit_receive character varying(13) NOT NULL,
    emi_fee_auto boolean NOT NULL,
    emi_fee numeric(22,2),
    emi_fee_ledger character varying(20),
    emi_fee_chargecd character varying(20),
    emi_down_payment boolean NOT NULL,
    emi_min_down_payment_pct numeric(22,2),
    emi_doc_fee_enable boolean NOT NULL,
    emi_doc_fee_ledger character varying(20),
    emi_insurance_readonly boolean NOT NULL,
    emi_insurance_enable boolean NOT NULL,
    emi_insurance_ledger character varying(20)
);


ALTER TABLE public.sales_emi_settings OWNER TO delarship;

--
-- Name: sales_emi_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_emi_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_emi_settings_id_seq OWNER TO delarship;

--
-- Name: sales_emi_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_emi_settings_id_seq OWNED BY public.sales_emi_settings.id;


--
-- Name: sales_emi_setup; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_emi_setup (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    client_id character varying(13),
    account_number character varying(13),
    emi_serial_number integer,
    emi_reference_no character varying(200) NOT NULL,
    emi_reference_date date,
    emi_reference_amount numeric(22,2) NOT NULL,
    emi_down_amount numeric(22,2),
    reference_due_amount numeric(22,2) NOT NULL,
    total_emi_amount numeric(22,2) NOT NULL,
    total_emi_due numeric(22,2) NOT NULL,
    emi_inst_amount numeric(22,2) NOT NULL,
    emi_inst_frequency character varying(10) NOT NULL,
    emi_inst_repay_from_date date,
    number_of_installment integer NOT NULL,
    installment_tot_repay_amt numeric(22,2),
    installment_exp_date date,
    installment_lastpay_date date,
    emi_rate numeric(22,2) NOT NULL,
    emi_profit_amount numeric(22,2),
    emi_fee_amount numeric(22,2),
    emi_ins_rate numeric(22,2),
    emi_ins_fee_amount numeric(22,2),
    emi_doc_fee_amount numeric(22,2),
    emi_setup_batch integer,
    emi_closer_date date,
    emi_reschedule_date date,
    last_emi_hist_update date,
    last_emi_payment_date date,
    is_balance_updated boolean NOT NULL,
    emi_cancel_by character varying(20),
    emi_cancel_on timestamp with time zone,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_emi_setup OWNER TO delarship;

--
-- Name: sales_emi_setup_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_emi_setup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_emi_setup_id_seq OWNER TO delarship;

--
-- Name: sales_emi_setup_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_emi_setup_id_seq OWNED BY public.sales_emi_setup.id;


--
-- Name: sales_fees_history; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_fees_history (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    client_id character varying(20),
    fee_type character varying(20) NOT NULL,
    fee_amount numeric(22,2),
    cancel_amount numeric(22,2),
    fee_collection_date date,
    transaction_narration character varying(200),
    fee_memo_number character varying(20),
    transaction_batch_number integer,
    cancel_by character varying(20),
    cancel_date date,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_fees_history OWNER TO delarship;

--
-- Name: sales_fees_history_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_fees_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_fees_history_id_seq OWNER TO delarship;

--
-- Name: sales_fees_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_fees_history_id_seq OWNED BY public.sales_fees_history.id;


--
-- Name: sales_nominee_information; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_nominee_information (
    id integer NOT NULL,
    nominee_serial character varying(20),
    nominee_name character varying(100) NOT NULL,
    nominee_sex character varying(20) NOT NULL,
    nominee_father_name character varying(100) NOT NULL,
    nominee_mother_name character varying(20) NOT NULL,
    nominee_present_addr character varying(300) NOT NULL,
    nominee_permanent_addr character varying(300) NOT NULL,
    nominee_birth_date date,
    nominee_nid_num character varying(20) NOT NULL,
    nominee_religion character varying(20) NOT NULL,
    nominee_blood_group character varying(4) NOT NULL,
    nominee_education character varying(20) NOT NULL,
    nominee_marital_status character varying(2) NOT NULL,
    nominee_mobile_num character varying(20) NOT NULL,
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    client_id character varying(20) NOT NULL
);


ALTER TABLE public.sales_nominee_information OWNER TO delarship;

--
-- Name: sales_nominee_information_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_nominee_information_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_nominee_information_id_seq OWNER TO delarship;

--
-- Name: sales_nominee_information_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_nominee_information_id_seq OWNED BY public.sales_nominee_information.id;


--
-- Name: sales_order_details; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_order_details (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    order_number character varying(20),
    order_date date,
    product_id character varying(10),
    serial_no integer,
    service_type character varying(10),
    service_start_date date,
    service_end_date date,
    service_card_no character varying(200),
    ordered_product_price numeric(22,2),
    product_price numeric(22,2),
    quantity integer NOT NULL,
    ordered_quantity integer,
    delivered_quantity integer,
    total_price numeric(22,2) NOT NULL,
    ordered_total_price numeric(22,2) NOT NULL,
    delivered_total_price numeric(22,2) NOT NULL,
    profit_amount numeric(22,2),
    discount_rate numeric(22,2),
    ordered_discount_rate numeric(22,2),
    delivered_discount_rate numeric(22,2),
    discount_amount numeric(22,2),
    ordered_discount_amount numeric(22,2),
    delivered_discount_amount numeric(22,2),
    status character varying(2),
    comments text,
    cancel_by character varying(20),
    cancel_on date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_order_details OWNER TO delarship;

--
-- Name: sales_order_details_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_order_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_order_details_id_seq OWNER TO delarship;

--
-- Name: sales_order_details_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_order_details_id_seq OWNED BY public.sales_order_details.id;


--
-- Name: sales_order_master; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_order_master (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    employee_id character varying(20) NOT NULL,
    order_number character varying(20),
    order_date date NOT NULL,
    customer_id character varying(20),
    account_number character varying(13),
    customer_name character varying(200),
    customer_phone character varying(20),
    customer_address character varying(500),
    executive_phone character varying(20),
    total_quantity integer NOT NULL,
    returned_quantity integer,
    total_bill_amount numeric(22,2) NOT NULL,
    bill_amount numeric(22,2) NOT NULL,
    pay_amount numeric(22,2) NOT NULL,
    due_amount numeric(22,2) NOT NULL,
    advance_pay numeric(22,2) NOT NULL,
    total_discount_rate numeric(22,2) NOT NULL,
    total_discount_amount numeric(22,2) NOT NULL,
    tran_type_code character varying(13),
    tran_batch_number integer,
    status character varying(2),
    order_comments text,
    latitude numeric(22,12),
    longitude numeric(22,12),
    cancel_by character varying(20),
    cancel_on date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    delivary_date date NOT NULL
);


ALTER TABLE public.sales_order_master OWNER TO delarship;

--
-- Name: sales_order_master_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_order_master_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_order_master_id_seq OWNER TO delarship;

--
-- Name: sales_order_master_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_order_master_id_seq OWNED BY public.sales_order_master.id;


--
-- Name: sales_product_damage_details; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_product_damage_details (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    product_id character varying(30) NOT NULL,
    supplier_id character varying(20) NOT NULL,
    damage_date date,
    tran_batch_number integer,
    damage_quantity integer NOT NULL,
    damage_amount numeric(22,2) NOT NULL,
    receive_amount numeric(22,2) NOT NULL,
    comments text,
    cancel_by character varying(20),
    cancel_on date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_product_damage_details OWNER TO delarship;

--
-- Name: sales_product_damage_details_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_product_damage_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_product_damage_details_id_seq OWNER TO delarship;

--
-- Name: sales_product_damage_details_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_product_damage_details_id_seq OWNED BY public.sales_product_damage_details.id;


--
-- Name: sales_product_offer_list; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_product_offer_list (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    product_id character varying(20) NOT NULL,
    product_name character varying(200) NOT NULL,
    client_type_code character varying(20) NOT NULL,
    sales_offer_type character varying(1),
    offer_from_quantity integer,
    offer_upto_quantity integer,
    offer_free_quantity integer,
    offer_from_amount numeric(22,2) NOT NULL,
    offer_upto_amount numeric(22,2) NOT NULL,
    offer_reduce_amount numeric(22,2) NOT NULL,
    sales_offer_fromdt date,
    sales_offer_uptodt date,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_product_offer_list OWNER TO delarship;

--
-- Name: sales_product_offer_list_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_product_offer_list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_product_offer_list_id_seq OWNER TO delarship;

--
-- Name: sales_product_offer_list_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_product_offer_list_id_seq OWNED BY public.sales_product_offer_list.id;


--
-- Name: sales_product_offer_package; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_product_offer_package (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    product_id character varying(20) NOT NULL,
    product_name character varying(200),
    client_type_code character varying(20) NOT NULL,
    offer_from_quantity integer,
    offer_upto_quantity integer,
    free_product_code character varying(20),
    free_product_name character varying(200) NOT NULL,
    offer_free_quantity integer,
    sales_offer_fromdt date,
    sales_offer_uptodt date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_product_offer_package OWNER TO delarship;

--
-- Name: sales_product_offer_package_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_product_offer_package_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_product_offer_package_id_seq OWNER TO delarship;

--
-- Name: sales_product_offer_package_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_product_offer_package_id_seq OWNED BY public.sales_product_offer_package.id;


--
-- Name: sales_product_price_list; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_product_price_list (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    product_id character varying(20) NOT NULL,
    product_name character varying(200) NOT NULL,
    client_type_code character varying(20) NOT NULL,
    product_sales_price numeric(22,2) NOT NULL,
    sales_discount_type character varying(1),
    sales_discount_percent numeric(22,2) NOT NULL,
    sales_discount_amount numeric(22,2) NOT NULL,
    sales_discount_fromdt date,
    sales_discount_uptodt date,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_product_price_list OWNER TO delarship;

--
-- Name: sales_product_price_list_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_product_price_list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_product_price_list_id_seq OWNER TO delarship;

--
-- Name: sales_product_price_list_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_product_price_list_id_seq OWNED BY public.sales_product_price_list.id;


--
-- Name: sales_products; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_products (
    product_id character varying(20) NOT NULL,
    product_name character varying(200) NOT NULL,
    product_model character varying(200),
    product_bar_code character varying(200),
    product_search_text character varying(400),
    product_current_rate numeric(22,2) NOT NULL,
    product_purces_price numeric(22,2) NOT NULL,
    product_sales_price numeric(22,2) NOT NULL,
    emi_sales_price numeric(22,2) NOT NULL,
    whole_sales_price numeric(22,2) NOT NULL,
    sales_discount_type character varying(1),
    sales_discount_percent numeric(22,2),
    sales_discount_maxamt numeric(22,2),
    sales_discount_minamt numeric(22,2),
    sales_discount_fromdt date,
    sales_discount_uptodt date,
    product_tax_rate numeric(22,2) NOT NULL,
    product_total_stock integer,
    product_total_sales integer,
    total_stock_return integer,
    total_sales_return integer,
    product_total_damage integer,
    product_available_stock integer,
    product_last_stock_date date,
    total_order_quantity integer,
    last_order_date date,
    product_last_sale_date date,
    product_last_return_date date,
    product_stock_alert integer,
    product_life_time integer,
    product_status character varying(2),
    total_purchase_amount numeric(22,2) NOT NULL,
    total_sales_amount numeric(22,2) NOT NULL,
    stock_return_amount numeric(22,2) NOT NULL,
    sales_return_amount numeric(22,2) NOT NULL,
    total_return_damage numeric(22,2) NOT NULL,
    product_narration character varying(200),
    update_unauth_product boolean NOT NULL,
    product_stock_gl character varying(13) NOT NULL,
    product_sales_gl character varying(13) NOT NULL,
    product_order_gl character varying(13),
    product_profit_gl character varying(13),
    product_loss_gl character varying(13),
    product_stock_ret_gl character varying(13) NOT NULL,
    product_sales_ret_gl character varying(13) NOT NULL,
    product_damage_gl character varying(13) NOT NULL,
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    brand_id character varying(20),
    product_group character varying(20)
);


ALTER TABLE public.sales_products OWNER TO delarship;

--
-- Name: sales_products_brand; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_products_brand (
    brand_id character varying(20) NOT NULL,
    brand_name character varying(200) NOT NULL,
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_products_brand OWNER TO delarship;

--
-- Name: sales_products_group; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_products_group (
    group_id character varying(20) NOT NULL,
    group_name character varying(200) NOT NULL,
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_products_group OWNER TO delarship;

--
-- Name: sales_products_inventory_hist; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_products_inventory_hist (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    product_id character varying(20) NOT NULL,
    inv_balance_date date,
    product_total_stock integer,
    total_order_quantity integer,
    product_total_sales integer,
    total_stock_return integer,
    total_sales_return integer,
    product_total_damage integer,
    product_available_stock integer,
    product_purchase_rate numeric(22,2) NOT NULL,
    total_purchase_amount numeric(22,2) NOT NULL,
    total_purchase_balance numeric(22,2) NOT NULL,
    total_sales_amount numeric(22,2) NOT NULL,
    total_sales_balance numeric(22,2) NOT NULL,
    stock_return_amount numeric(22,2) NOT NULL,
    sales_return_amount numeric(22,2) NOT NULL,
    total_damage_amount numeric(22,2) NOT NULL,
    cost_of_good_sold numeric(22,2) NOT NULL,
    cost_of_good_sold_balance numeric(22,2) NOT NULL,
    total_discount_receive numeric(22,2) NOT NULL,
    total_discount_pay numeric(22,2) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_products_inventory_hist OWNER TO delarship;

--
-- Name: sales_products_inventory_hist_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_products_inventory_hist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_products_inventory_hist_id_seq OWNER TO delarship;

--
-- Name: sales_products_inventory_hist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_products_inventory_hist_id_seq OWNED BY public.sales_products_inventory_hist.id;


--
-- Name: sales_products_inventory_status; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_products_inventory_status (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    product_id character varying(20) NOT NULL,
    product_total_stock integer,
    total_order_quantity integer,
    product_total_sales integer,
    total_stock_return integer,
    total_sales_return integer,
    product_total_damage integer,
    product_available_stock integer,
    product_purchase_rate numeric(22,2) NOT NULL,
    last_stock_date date,
    last_order_date date,
    last_sale_date date,
    last_stock_return_date date,
    last_sales_return_date date,
    last_damage_date date,
    inv_balance_upto_date date,
    total_purchase_amount numeric(22,2) NOT NULL,
    total_sales_amount numeric(22,2) NOT NULL,
    stock_return_amount numeric(22,2) NOT NULL,
    sales_return_amount numeric(22,2) NOT NULL,
    total_damage_amount numeric(22,2) NOT NULL,
    damage_receive_amount numeric(22,2) NOT NULL,
    cost_of_good_sold numeric(22,2) NOT NULL,
    total_discount_receive numeric(22,2) NOT NULL,
    total_discount_pay numeric(22,2) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    is_balance_updated boolean
);


ALTER TABLE public.sales_products_inventory_status OWNER TO delarship;

--
-- Name: sales_products_inventory_status_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_products_inventory_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_products_inventory_status_id_seq OWNER TO delarship;

--
-- Name: sales_products_inventory_status_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_products_inventory_status_id_seq OWNED BY public.sales_products_inventory_status.id;


--
-- Name: sales_products_price_type; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_products_price_type (
    id integer NOT NULL,
    tran_type_code character varying(20) NOT NULL,
    product_price character varying(20) NOT NULL
);


ALTER TABLE public.sales_products_price_type OWNER TO delarship;

--
-- Name: sales_products_price_type_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_products_price_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_products_price_type_id_seq OWNER TO delarship;

--
-- Name: sales_products_price_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_products_price_type_id_seq OWNED BY public.sales_products_price_type.id;


--
-- Name: sales_purchase_bill; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_purchase_bill (
    id integer NOT NULL,
    purchase_ord_no character varying(20),
    bill_date date NOT NULL,
    purchase_date date NOT NULL,
    supllier_id character varying(20) NOT NULL,
    bill_id character varying(20) NOT NULL,
    submission_date date NOT NULL,
    bill_amount numeric(22,2),
    payment_amount numeric(22,2),
    pending_amount numeric(22,2),
    remarks character varying(200) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_purchase_bill OWNER TO delarship;

--
-- Name: sales_purchase_bill_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_purchase_bill_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_purchase_bill_id_seq OWNER TO delarship;

--
-- Name: sales_purchase_bill_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_purchase_bill_id_seq OWNED BY public.sales_purchase_bill.id;


--
-- Name: sales_purchase_order_dtl; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_purchase_order_dtl (
    id integer NOT NULL,
    branch_code character varying(20),
    purchase_ord_no character varying(20),
    purchase_type character varying(20),
    purchase_date date NOT NULL,
    product_id character varying(20),
    unit_price numeric(22,2),
    g_total_price numeric(22,2),
    supplier_id character varying(20) NOT NULL,
    total_pur_qnty integer NOT NULL,
    discount_amount numeric(22,2),
    voucher_number character varying(20),
    show_room character varying(20),
    comments text,
    app_user_id character varying(20) NOT NULL,
    status character varying(2)
);


ALTER TABLE public.sales_purchase_order_dtl OWNER TO delarship;

--
-- Name: sales_purchase_order_dtl_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_purchase_order_dtl_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_purchase_order_dtl_id_seq OWNER TO delarship;

--
-- Name: sales_purchase_order_dtl_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_purchase_order_dtl_id_seq OWNED BY public.sales_purchase_order_dtl.id;


--
-- Name: sales_purchase_order_dtl_temp; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_purchase_order_dtl_temp (
    id integer NOT NULL,
    product_id character varying(20) NOT NULL,
    origin character varying(20),
    pur_qnty integer NOT NULL,
    unit_price numeric(22,2),
    total_price numeric(22,2),
    app_user_id character varying(20) NOT NULL,
    branch_code character varying(20),
    discount_amount numeric(22,2) NOT NULL
);


ALTER TABLE public.sales_purchase_order_dtl_temp OWNER TO delarship;

--
-- Name: sales_purchase_order_dtl_temp_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_purchase_order_dtl_temp_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_purchase_order_dtl_temp_id_seq OWNER TO delarship;

--
-- Name: sales_purchase_order_dtl_temp_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_purchase_order_dtl_temp_id_seq OWNED BY public.sales_purchase_order_dtl_temp.id;


--
-- Name: sales_purchase_order_mst; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_purchase_order_mst (
    id integer NOT NULL,
    branch_code character varying(20),
    purchase_ord_no character varying(20),
    purchase_type character varying(20),
    purchase_date date NOT NULL,
    supplier_id character varying(20) NOT NULL,
    unit_price numeric(22,2),
    g_total_price numeric(22,2),
    product_id character varying(20),
    origin character varying(20),
    total_pur_qnty integer NOT NULL,
    app_user_id character varying(20) NOT NULL,
    comments text,
    show_room character varying(20),
    voucher_number character varying(20),
    discount_amount numeric(22,2),
    due_amount numeric(22,2),
    total_pay numeric(22,2),
    payment_comments character varying(200),
    status character varying(2) NOT NULL
);


ALTER TABLE public.sales_purchase_order_mst OWNER TO delarship;

--
-- Name: sales_purchase_order_mst_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_purchase_order_mst_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_purchase_order_mst_id_seq OWNER TO delarship;

--
-- Name: sales_purchase_order_mst_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_purchase_order_mst_id_seq OWNED BY public.sales_purchase_order_mst.id;


--
-- Name: sales_purchasemasterauthq; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_purchasemasterauthq (
    id integer NOT NULL,
    branch_code character varying(20),
    purchase_ord_no character varying(20),
    purchase_type character varying(20),
    purchase_date date NOT NULL,
    supplier_id character varying(20) NOT NULL,
    discount_amount numeric(22,2),
    unit_price numeric(22,2),
    g_total_price numeric(22,2),
    product_id character varying(20),
    origin character varying(20),
    total_pur_qnty integer NOT NULL,
    voucher_number character varying(20),
    show_room character varying(20),
    comments text,
    app_user_id character varying(20) NOT NULL,
    due_amount numeric(22,2),
    total_pay numeric(22,2),
    payment_comments character varying(200),
    status character varying(2)
);


ALTER TABLE public.sales_purchasemasterauthq OWNER TO delarship;

--
-- Name: sales_purchasemasterauthq_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_purchasemasterauthq_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_purchasemasterauthq_id_seq OWNER TO delarship;

--
-- Name: sales_purchasemasterauthq_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_purchasemasterauthq_id_seq OWNED BY public.sales_purchasemasterauthq.id;


--
-- Name: sales_sales_details; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_sales_details (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    invoice_number character varying(20),
    client_id character varying(20),
    product_id character varying(10) NOT NULL,
    serial_no integer,
    service_type character varying(10),
    service_start_date date,
    service_end_date date,
    service_card_no character varying(200),
    purchase_rate numeric(22,2),
    product_price numeric(22,2),
    quantity integer NOT NULL,
    returned_quantity integer,
    total_price numeric(22,2) NOT NULL,
    profit_amount numeric(22,2),
    discount_rate numeric(22,2),
    discount_amount numeric(22,2),
    status character varying(2),
    comments text,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_sales_details OWNER TO delarship;

--
-- Name: sales_sales_details_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_sales_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_sales_details_id_seq OWNER TO delarship;

--
-- Name: sales_sales_details_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_sales_details_id_seq OWNED BY public.sales_sales_details.id;


--
-- Name: sales_sales_details_temp; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_sales_details_temp (
    id integer NOT NULL,
    details_branch_code character varying(20),
    invoice_number character varying(20),
    product_id character varying(10) NOT NULL,
    product_bar_code character varying(200),
    product_name character varying(200) NOT NULL,
    product_model character varying(100),
    sales_account_number character varying(20),
    serial_no integer,
    service_type character varying(10),
    service_start_date date,
    service_end_date date,
    service_card_no character varying(200),
    product_price numeric(22,2),
    quantity integer NOT NULL,
    total_price numeric(22,2) NOT NULL,
    profit_amount numeric(22,2),
    discount_rate numeric(22,2),
    discount_amount numeric(22,2),
    status character varying(2),
    comments text,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_sales_details_temp OWNER TO delarship;

--
-- Name: sales_sales_details_temp_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_sales_details_temp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_sales_details_temp_id_seq OWNER TO delarship;

--
-- Name: sales_sales_details_temp_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_sales_details_temp_id_seq OWNED BY public.sales_sales_details_temp.id;


--
-- Name: sales_sales_master; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_sales_master (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    invoice_number character varying(20),
    order_number character varying(20),
    invoice_date date NOT NULL,
    tran_type_code character varying(13),
    tran_batch_number integer,
    customer_id character varying(20),
    customer_name character varying(200),
    customer_phone character varying(20),
    customer_address character varying(500),
    employee_id character varying(20) NOT NULL,
    payment_document character varying(100) NOT NULL,
    total_quantity integer NOT NULL,
    returned_quantity integer,
    returned_amount numeric(22,2),
    total_bill_amount numeric(22,2) NOT NULL,
    bill_amount numeric(22,2) NOT NULL,
    pay_amount numeric(22,2) NOT NULL,
    due_amount numeric(22,2) NOT NULL,
    advance_pay numeric(22,2) NOT NULL,
    total_discount_rate numeric(22,2) NOT NULL,
    total_discount_amount numeric(22,2) NOT NULL,
    invoice_discount numeric(22,2) NOT NULL,
    sms_notification boolean,
    email_notification boolean,
    status character varying(2),
    invoice_comments text,
    latitude numeric(22,12),
    longitude numeric(22,12),
    cancel_by character varying(20),
    cancel_on date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_sales_master OWNER TO delarship;

--
-- Name: sales_sales_master_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_sales_master_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_sales_master_id_seq OWNER TO delarship;

--
-- Name: sales_sales_master_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_sales_master_id_seq OWNED BY public.sales_sales_master.id;


--
-- Name: sales_sales_return_details; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_sales_return_details (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    center_code character varying(20) NOT NULL,
    client_id character varying(20),
    product_id character varying(30) NOT NULL,
    return_invoice character varying(20),
    return_date date NOT NULL,
    sales_invoice character varying(20),
    sales_date date,
    tran_type_code character varying(13),
    tran_batch_number integer,
    returned_quantity integer NOT NULL,
    return_amount numeric(22,2) NOT NULL,
    purchase_value numeric(22,2) NOT NULL,
    return_reason text,
    status character varying(2),
    cancel_by character varying(20),
    cancel_on date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_sales_return_details OWNER TO delarship;

--
-- Name: sales_sales_return_details_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_sales_return_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_sales_return_details_id_seq OWNER TO delarship;

--
-- Name: sales_sales_return_details_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_sales_return_details_id_seq OWNED BY public.sales_sales_return_details.id;


--
-- Name: sales_showroom; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_showroom (
    id integer NOT NULL,
    showroom_id character varying(20),
    show_room_name character varying(100) NOT NULL,
    show_room_address text NOT NULL,
    comments text NOT NULL
);


ALTER TABLE public.sales_showroom OWNER TO delarship;

--
-- Name: sales_showroom_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_showroom_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_showroom_id_seq OWNER TO delarship;

--
-- Name: sales_showroom_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_showroom_id_seq OWNED BY public.sales_showroom.id;


--
-- Name: sales_stock_quantity_transfer; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_stock_quantity_transfer (
    id integer NOT NULL,
    from_branch_code integer,
    to_branch_code integer,
    product_id character varying(20),
    product_name character varying(20),
    stock_quantity integer NOT NULL,
    trf_quantity integer NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_stock_quantity_transfer OWNER TO delarship;

--
-- Name: sales_stock_quantity_transfer_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_stock_quantity_transfer_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_stock_quantity_transfer_id_seq OWNER TO delarship;

--
-- Name: sales_stock_quantity_transfer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_stock_quantity_transfer_id_seq OWNED BY public.sales_stock_quantity_transfer.id;


--
-- Name: sales_stock_return_details; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_stock_return_details (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    product_id character varying(30) NOT NULL,
    supplier_id character varying(20) NOT NULL,
    return_date date,
    stock_id character varying(10) NOT NULL,
    stock_date date,
    stock_voucher character varying(20),
    tran_type_code character varying(13),
    tran_batch_number integer,
    returned_quantity integer NOT NULL,
    return_amount numeric(22,2) NOT NULL,
    return_voucher character varying(20) NOT NULL,
    return_reason text,
    status character varying(20),
    cancel_by character varying(20),
    cancel_on date,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_stock_return_details OWNER TO delarship;

--
-- Name: sales_stock_return_details_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_stock_return_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_stock_return_details_id_seq OWNER TO delarship;

--
-- Name: sales_stock_return_details_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_stock_return_details_id_seq OWNED BY public.sales_stock_return_details.id;


--
-- Name: sales_stockdetails; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_stockdetails (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    stock_id character varying(10) NOT NULL,
    supplier_id character varying(20) NOT NULL,
    product_id character varying(10) NOT NULL,
    purces_price numeric(22,2) NOT NULL,
    total_price numeric(22,2) NOT NULL,
    discount_amount numeric(22,2) NOT NULL,
    status character varying(2),
    quantity integer,
    returned_quantity integer,
    return_date date,
    stock_date date NOT NULL,
    comments text,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_stockdetails OWNER TO delarship;

--
-- Name: sales_stockdetails_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_stockdetails_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_stockdetails_id_seq OWNER TO delarship;

--
-- Name: sales_stockdetails_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_stockdetails_id_seq OWNED BY public.sales_stockdetails.id;


--
-- Name: sales_stockdetailstemp; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_stockdetailstemp (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    product_name character varying(200) NOT NULL,
    product_model character varying(100),
    product_bar_code character varying(200),
    quantity integer NOT NULL,
    purces_price numeric(22,2) NOT NULL,
    total_price numeric(22,2) NOT NULL,
    discount_amount numeric(22,2) NOT NULL,
    status character varying(2) NOT NULL,
    comments character varying(200) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL,
    product_id character varying(20) NOT NULL
);


ALTER TABLE public.sales_stockdetailstemp OWNER TO delarship;

--
-- Name: sales_stockdetailstemp_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_stockdetailstemp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_stockdetailstemp_id_seq OWNER TO delarship;

--
-- Name: sales_stockdetailstemp_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_stockdetailstemp_id_seq OWNED BY public.sales_stockdetailstemp.id;


--
-- Name: sales_stockmaster; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_stockmaster (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    stock_id character varying(10) NOT NULL,
    supplier_id character varying(20) NOT NULL,
    stock_date date,
    tran_type_code character varying(13),
    tran_batch_number integer,
    voucher_number character varying(20),
    show_room character varying(20),
    status character varying(2) NOT NULL,
    payment_comments character varying(200),
    total_quantity integer NOT NULL,
    returned_quantity integer,
    returned_amount numeric(22,2),
    cancel_quantity integer,
    cancel_amount numeric(22,2),
    total_price numeric(22,2),
    total_pay numeric(22,2),
    due_amount numeric(22,2),
    discount_amount numeric(22,2),
    comments text,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_stockmaster OWNER TO delarship;

--
-- Name: sales_stockmaster_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_stockmaster_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_stockmaster_id_seq OWNER TO delarship;

--
-- Name: sales_stockmaster_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_stockmaster_id_seq OWNED BY public.sales_stockmaster.id;


--
-- Name: sales_stockmasterauthq; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_stockmasterauthq (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    stock_id character varying(10) NOT NULL,
    supplier_id character varying(20) NOT NULL,
    stock_date date,
    voucher_number character varying(20),
    show_room character varying(20),
    status character varying(2),
    tran_type_code character varying(13),
    payment_comments character varying(200),
    total_quantity integer,
    returned_quantity integer,
    returned_amount numeric(22,2),
    cancel_quantity integer,
    cancel_amount numeric(22,2),
    total_price numeric(22,2),
    total_pay numeric(22,2),
    due_amount numeric(22,2),
    discount_amount numeric(22,2) NOT NULL,
    comments text,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_stockmasterauthq OWNER TO delarship;

--
-- Name: sales_stockmasterauthq_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_stockmasterauthq_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_stockmasterauthq_id_seq OWNER TO delarship;

--
-- Name: sales_stockmasterauthq_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_stockmasterauthq_id_seq OWNED BY public.sales_stockmasterauthq.id;


--
-- Name: sales_stockpaymentdetails; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_stockpaymentdetails (
    id integer NOT NULL,
    branch_code integer NOT NULL,
    stock_id character varying(10) NOT NULL,
    payment_method character varying(50),
    pay_amount numeric(22,2) NOT NULL,
    payment_date date NOT NULL,
    payment_comments character varying(200) NOT NULL,
    app_user_id character varying(20) NOT NULL,
    app_data_time timestamp with time zone NOT NULL
);


ALTER TABLE public.sales_stockpaymentdetails OWNER TO delarship;

--
-- Name: sales_stockpaymentdetails_id_seq; Type: SEQUENCE; Schema: public; Owner: delarship
--

CREATE SEQUENCE public.sales_stockpaymentdetails_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sales_stockpaymentdetails_id_seq OWNER TO delarship;

--
-- Name: sales_stockpaymentdetails_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: delarship
--

ALTER SEQUENCE public.sales_stockpaymentdetails_id_seq OWNED BY public.sales_stockpaymentdetails.id;


--
-- Name: sales_supplier_information; Type: TABLE; Schema: public; Owner: delarship
--

CREATE TABLE public.sales_supplier_information (
    supp_id character varying(20) NOT NULL,
    branch_code integer NOT NULL,
    supp_name character varying(100) NOT NULL,
    proprietor_name character varying(100),
    account_number character varying(20),
    supp_address character varying(300),
    supp_mobile character varying(20),
    supp_email character varying(100),
    supp_web character varying(100),
    supp_key_person character varying(100),
    supp_fax character varying(20),
    supp_grade character varying(20),
    is_active boolean NOT NULL,
    is_deleted boolean NOT NULL,
    app_user_id character varying(20),
    app_data_time timestamp with time zone NOT NULL,
    joining_date date NOT NULL
);


ALTER TABLE public.sales_supplier_information OWNER TO delarship;

--
-- Name: appauth_application_log id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_application_log ALTER COLUMN id SET DEFAULT nextval('public.appauth_application_log_id_seq'::regclass);


--
-- Name: appauth_dashboard_matrix id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_dashboard_matrix ALTER COLUMN id SET DEFAULT nextval('public.appauth_dashboard_matrix_id_seq'::regclass);


--
-- Name: appauth_eodsod_process id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_eodsod_process ALTER COLUMN id SET DEFAULT nextval('public.appauth_eodsod_process_id_seq'::regclass);


--
-- Name: appauth_eodsod_process_list id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_eodsod_process_list ALTER COLUMN id SET DEFAULT nextval('public.appauth_eodsod_process_list_id_seq'::regclass);


--
-- Name: appauth_global_parameters id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_global_parameters ALTER COLUMN id SET DEFAULT nextval('public.appauth_global_parameters_id_seq'::regclass);


--
-- Name: appauth_holiday_list id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_holiday_list ALTER COLUMN id SET DEFAULT nextval('public.appauth_holiday_list_id_seq'::regclass);


--
-- Name: appauth_inventory_number id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_inventory_number ALTER COLUMN id SET DEFAULT nextval('public.appauth_inventory_number_id_seq'::regclass);


--
-- Name: appauth_query_table id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_query_table ALTER COLUMN id SET DEFAULT nextval('public.appauth_query_table_id_seq'::regclass);


--
-- Name: appauth_report_configuration id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_report_configuration ALTER COLUMN id SET DEFAULT nextval('public.appauth_report_configuration_id_seq'::regclass);


--
-- Name: appauth_report_parameter id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_report_parameter ALTER COLUMN id SET DEFAULT nextval('public.appauth_report_parameter_id_seq'::regclass);


--
-- Name: appauth_report_parameter_mapping id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_report_parameter_mapping ALTER COLUMN id SET DEFAULT nextval('public.appauth_report_parameter_mapping_id_seq'::regclass);


--
-- Name: appauth_report_table_group id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_report_table_group ALTER COLUMN id SET DEFAULT nextval('public.appauth_report_table_group_id_seq'::regclass);


--
-- Name: appauth_report_table_tabular id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_report_table_tabular ALTER COLUMN id SET DEFAULT nextval('public.appauth_report_table_tabular_id_seq'::regclass);


--
-- Name: auth_group id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_group ALTER COLUMN id SET DEFAULT nextval('public.auth_group_id_seq'::regclass);


--
-- Name: auth_group_permissions id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_group_permissions ALTER COLUMN id SET DEFAULT nextval('public.auth_group_permissions_id_seq'::regclass);


--
-- Name: auth_permission id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_permission ALTER COLUMN id SET DEFAULT nextval('public.auth_permission_id_seq'::regclass);


--
-- Name: auth_user id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user ALTER COLUMN id SET DEFAULT nextval('public.auth_user_id_seq'::regclass);


--
-- Name: auth_user_groups id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user_groups ALTER COLUMN id SET DEFAULT nextval('public.auth_user_groups_id_seq'::regclass);


--
-- Name: auth_user_user_permissions id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user_user_permissions ALTER COLUMN id SET DEFAULT nextval('public.auth_user_user_permissions_id_seq'::regclass);


--
-- Name: delar_application_settings id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_application_settings ALTER COLUMN id SET DEFAULT nextval('public.delar_application_settings_id_seq'::regclass);


--
-- Name: delar_client_center_trf_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_client_center_trf_hist ALTER COLUMN id SET DEFAULT nextval('public.delar_client_center_trf_hist_id_seq'::regclass);


--
-- Name: delar_clients_inventory_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_clients_inventory_hist ALTER COLUMN id SET DEFAULT nextval('public.delar_clients_inventory_hist_id_seq'::regclass);


--
-- Name: delar_clients_inventory_status id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_clients_inventory_status ALTER COLUMN id SET DEFAULT nextval('public.delar_clients_inventory_status_id_seq'::regclass);


--
-- Name: delar_clients_security_info id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_clients_security_info ALTER COLUMN id SET DEFAULT nextval('public.delar_clients_security_info_id_seq'::regclass);


--
-- Name: delar_employee_center_permit id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_employee_center_permit ALTER COLUMN id SET DEFAULT nextval('public.delar_employee_center_permit_id_seq'::regclass);


--
-- Name: delar_products_packet_mapping id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_products_packet_mapping ALTER COLUMN id SET DEFAULT nextval('public.delar_products_packet_mapping_id_seq'::regclass);


--
-- Name: delar_sales_return_packet id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_sales_return_packet ALTER COLUMN id SET DEFAULT nextval('public.delar_sales_return_packet_id_seq'::regclass);


--
-- Name: delar_srstage_details id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_details ALTER COLUMN id SET DEFAULT nextval('public.delar_srstage_details_id_seq'::regclass);


--
-- Name: delar_srstage_details_temp id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_details_temp ALTER COLUMN id SET DEFAULT nextval('public.delar_srstage_details_temp_id_seq'::regclass);


--
-- Name: delar_srstage_inventory_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_inventory_hist ALTER COLUMN id SET DEFAULT nextval('public.delar_srstage_inventory_hist_id_seq'::regclass);


--
-- Name: delar_srstage_inventory_status id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_inventory_status ALTER COLUMN id SET DEFAULT nextval('public.delar_srstage_inventory_status_id_seq'::regclass);


--
-- Name: delar_srstage_inventory_sum id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_inventory_sum ALTER COLUMN id SET DEFAULT nextval('public.delar_srstage_inventory_sum_id_seq'::regclass);


--
-- Name: delar_srstage_master id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_master ALTER COLUMN id SET DEFAULT nextval('public.delar_srstage_master_id_seq'::regclass);


--
-- Name: delar_stock_return_packet id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_stock_return_packet ALTER COLUMN id SET DEFAULT nextval('public.delar_stock_return_packet_id_seq'::regclass);


--
-- Name: django_admin_log id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.django_admin_log ALTER COLUMN id SET DEFAULT nextval('public.django_admin_log_id_seq'::regclass);


--
-- Name: django_content_type id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.django_content_type ALTER COLUMN id SET DEFAULT nextval('public.django_content_type_id_seq'::regclass);


--
-- Name: django_migrations id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.django_migrations ALTER COLUMN id SET DEFAULT nextval('public.django_migrations_id_seq'::regclass);


--
-- Name: ecom_application_settings id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_application_settings ALTER COLUMN id SET DEFAULT nextval('public.ecom_application_settings_id_seq'::regclass);


--
-- Name: ecom_delivery_address id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_delivery_address ALTER COLUMN id SET DEFAULT nextval('public.ecom_delivery_address_id_seq'::regclass);


--
-- Name: ecom_ecom_slider id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_ecom_slider ALTER COLUMN id SET DEFAULT nextval('public.ecom_ecom_slider_id_seq'::regclass);


--
-- Name: ecom_order_details id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_order_details ALTER COLUMN id SET DEFAULT nextval('public.ecom_order_details_id_seq'::regclass);


--
-- Name: ecom_pagemodel id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_pagemodel ALTER COLUMN id SET DEFAULT nextval('public.ecom_pagemodel_id_seq'::regclass);


--
-- Name: ecom_product_images id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_product_images ALTER COLUMN id SET DEFAULT nextval('public.ecom_product_images_id_seq'::regclass);


--
-- Name: ecom_user_chart id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_user_chart ALTER COLUMN id SET DEFAULT nextval('public.ecom_user_chart_id_seq'::regclass);


--
-- Name: ecom_user_profile id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_user_profile ALTER COLUMN id SET DEFAULT nextval('public.ecom_user_profile_id_seq'::regclass);


--
-- Name: finance_account_charges id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_account_charges ALTER COLUMN id SET DEFAULT nextval('public.finance_account_charges_id_seq'::regclass);


--
-- Name: finance_accounts_balance_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_accounts_balance_hist ALTER COLUMN id SET DEFAULT nextval('public.finance_accounts_balance_hist_id_seq'::regclass);


--
-- Name: finance_accounts_balmon_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_accounts_balmon_hist ALTER COLUMN id SET DEFAULT nextval('public.finance_accounts_balmon_hist_id_seq'::regclass);


--
-- Name: finance_application_settings id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_application_settings ALTER COLUMN id SET DEFAULT nextval('public.finance_application_settings_id_seq'::regclass);


--
-- Name: finance_cash_and_bank_ledger id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_cash_and_bank_ledger ALTER COLUMN id SET DEFAULT nextval('public.finance_cash_and_bank_ledger_id_seq'::regclass);


--
-- Name: finance_cash_transaction id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_cash_transaction ALTER COLUMN id SET DEFAULT nextval('public.finance_cash_transaction_id_seq'::regclass);


--
-- Name: finance_client_account_mapping id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_client_account_mapping ALTER COLUMN id SET DEFAULT nextval('public.finance_client_account_mapping_id_seq'::regclass);


--
-- Name: finance_deposit_closing id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_deposit_closing ALTER COLUMN id SET DEFAULT nextval('public.finance_deposit_closing_id_seq'::regclass);


--
-- Name: finance_deposit_payment id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_deposit_payment ALTER COLUMN id SET DEFAULT nextval('public.finance_deposit_payment_id_seq'::regclass);


--
-- Name: finance_deposit_receive id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_deposit_receive ALTER COLUMN id SET DEFAULT nextval('public.finance_deposit_receive_id_seq'::regclass);


--
-- Name: finance_deposit_transfer id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_deposit_transfer ALTER COLUMN id SET DEFAULT nextval('public.finance_deposit_transfer_id_seq'::regclass);


--
-- Name: finance_document_register id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_document_register ALTER COLUMN id SET DEFAULT nextval('public.finance_document_register_id_seq'::regclass);


--
-- Name: finance_led_rec_pay_bal_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_led_rec_pay_bal_hist ALTER COLUMN id SET DEFAULT nextval('public.finance_led_rec_pay_bal_hist_id_seq'::regclass);


--
-- Name: finance_led_rec_pay_balmon_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_led_rec_pay_balmon_hist ALTER COLUMN id SET DEFAULT nextval('public.finance_led_rec_pay_balmon_hist_id_seq'::regclass);


--
-- Name: finance_ledger_balance id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_balance ALTER COLUMN id SET DEFAULT nextval('public.finance_ledger_balance_id_seq'::regclass);


--
-- Name: finance_ledger_balance_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_balance_hist ALTER COLUMN id SET DEFAULT nextval('public.finance_ledger_balance_hist_id_seq'::regclass);


--
-- Name: finance_ledger_balmon_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_balmon_hist ALTER COLUMN id SET DEFAULT nextval('public.finance_ledger_balmon_hist_id_seq'::regclass);


--
-- Name: finance_ledger_report_balance id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_report_balance ALTER COLUMN id SET DEFAULT nextval('public.finance_ledger_report_balance_id_seq'::regclass);


--
-- Name: finance_ledger_report_param id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_report_param ALTER COLUMN id SET DEFAULT nextval('public.finance_ledger_report_param_id_seq'::regclass);


--
-- Name: finance_ledger_transaction_type id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_transaction_type ALTER COLUMN id SET DEFAULT nextval('public.finance_ledger_transaction_type_id_seq'::regclass);


--
-- Name: finance_tran_telbal_details id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_tran_telbal_details ALTER COLUMN id SET DEFAULT nextval('public.finance_tran_telbal_details_id_seq'::regclass);


--
-- Name: finance_transaction_details id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_details ALTER COLUMN id SET DEFAULT nextval('public.finance_transaction_details_id_seq'::regclass);


--
-- Name: finance_transaction_master id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_master ALTER COLUMN id SET DEFAULT nextval('public.finance_transaction_master_id_seq'::regclass);


--
-- Name: finance_transaction_table id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_table ALTER COLUMN id SET DEFAULT nextval('public.finance_transaction_table_id_seq'::regclass);


--
-- Name: finance_transfer_tran id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transfer_tran ALTER COLUMN id SET DEFAULT nextval('public.finance_transfer_tran_id_seq'::regclass);


--
-- Name: hrm_advance_salary id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_advance_salary ALTER COLUMN id SET DEFAULT nextval('public.hrm_advance_salary_id_seq'::regclass);


--
-- Name: hrm_allowance_payment id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_allowance_payment ALTER COLUMN id SET DEFAULT nextval('public.hrm_allowance_payment_id_seq'::regclass);


--
-- Name: hrm_attendance_card_log id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_card_log ALTER COLUMN id SET DEFAULT nextval('public.hrm_attendance_card_log_id_seq'::regclass);


--
-- Name: hrm_attendance_log id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_log ALTER COLUMN id SET DEFAULT nextval('public.hrm_attendance_log_id_seq'::regclass);


--
-- Name: hrm_employee_document id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_document ALTER COLUMN id SET DEFAULT nextval('public.hrm_employee_document_id_seq'::regclass);


--
-- Name: hrm_employee_experience id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_experience ALTER COLUMN id SET DEFAULT nextval('public.hrm_employee_experience_id_seq'::regclass);


--
-- Name: hrm_employee_nominee id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_nominee ALTER COLUMN id SET DEFAULT nextval('public.hrm_employee_nominee_id_seq'::regclass);


--
-- Name: hrm_employee_training id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_training ALTER COLUMN id SET DEFAULT nextval('public.hrm_employee_training_id_seq'::regclass);


--
-- Name: hrm_leave_application id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_leave_application ALTER COLUMN id SET DEFAULT nextval('public.hrm_leave_application_id_seq'::regclass);


--
-- Name: hrm_others_deduction id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_others_deduction ALTER COLUMN id SET DEFAULT nextval('public.hrm_others_deduction_id_seq'::regclass);


--
-- Name: hrm_salary_sheet id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_salary_sheet ALTER COLUMN id SET DEFAULT nextval('public.hrm_salary_sheet_id_seq'::regclass);


--
-- Name: hrm_shift_info_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_shift_info_hist ALTER COLUMN id SET DEFAULT nextval('public.hrm_shift_info_hist_id_seq'::regclass);


--
-- Name: sales_all_trandtl id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_all_trandtl ALTER COLUMN id SET DEFAULT nextval('public.sales_all_trandtl_id_seq'::regclass);


--
-- Name: sales_application_settings id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_application_settings ALTER COLUMN id SET DEFAULT nextval('public.sales_application_settings_id_seq'::regclass);


--
-- Name: sales_client_balance id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_balance ALTER COLUMN id SET DEFAULT nextval('public.sales_client_balance_id_seq'::regclass);


--
-- Name: sales_client_closing id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_closing ALTER COLUMN id SET DEFAULT nextval('public.sales_client_closing_id_seq'::regclass);


--
-- Name: sales_client_id_changes_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_id_changes_hist ALTER COLUMN id SET DEFAULT nextval('public.sales_client_id_changes_hist_id_seq'::regclass);


--
-- Name: sales_client_photo_sign id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_photo_sign ALTER COLUMN id SET DEFAULT nextval('public.sales_client_photo_sign_id_seq'::regclass);


--
-- Name: sales_client_profit_history id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_profit_history ALTER COLUMN id SET DEFAULT nextval('public.sales_client_profit_history_id_seq'::regclass);


--
-- Name: sales_delar_security_info id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_delar_security_info ALTER COLUMN id SET DEFAULT nextval('public.sales_delar_security_info_id_seq'::regclass);


--
-- Name: sales_emi_history id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_emi_history ALTER COLUMN id SET DEFAULT nextval('public.sales_emi_history_id_seq'::regclass);


--
-- Name: sales_emi_receive id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_emi_receive ALTER COLUMN id SET DEFAULT nextval('public.sales_emi_receive_id_seq'::regclass);


--
-- Name: sales_emi_settings id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_emi_settings ALTER COLUMN id SET DEFAULT nextval('public.sales_emi_settings_id_seq'::regclass);


--
-- Name: sales_emi_setup id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_emi_setup ALTER COLUMN id SET DEFAULT nextval('public.sales_emi_setup_id_seq'::regclass);


--
-- Name: sales_fees_history id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_fees_history ALTER COLUMN id SET DEFAULT nextval('public.sales_fees_history_id_seq'::regclass);


--
-- Name: sales_nominee_information id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_nominee_information ALTER COLUMN id SET DEFAULT nextval('public.sales_nominee_information_id_seq'::regclass);


--
-- Name: sales_order_details id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_order_details ALTER COLUMN id SET DEFAULT nextval('public.sales_order_details_id_seq'::regclass);


--
-- Name: sales_order_master id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_order_master ALTER COLUMN id SET DEFAULT nextval('public.sales_order_master_id_seq'::regclass);


--
-- Name: sales_product_damage_details id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_product_damage_details ALTER COLUMN id SET DEFAULT nextval('public.sales_product_damage_details_id_seq'::regclass);


--
-- Name: sales_product_offer_list id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_product_offer_list ALTER COLUMN id SET DEFAULT nextval('public.sales_product_offer_list_id_seq'::regclass);


--
-- Name: sales_product_offer_package id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_product_offer_package ALTER COLUMN id SET DEFAULT nextval('public.sales_product_offer_package_id_seq'::regclass);


--
-- Name: sales_product_price_list id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_product_price_list ALTER COLUMN id SET DEFAULT nextval('public.sales_product_price_list_id_seq'::regclass);


--
-- Name: sales_products_inventory_hist id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_products_inventory_hist ALTER COLUMN id SET DEFAULT nextval('public.sales_products_inventory_hist_id_seq'::regclass);


--
-- Name: sales_products_inventory_status id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_products_inventory_status ALTER COLUMN id SET DEFAULT nextval('public.sales_products_inventory_status_id_seq'::regclass);


--
-- Name: sales_products_price_type id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_products_price_type ALTER COLUMN id SET DEFAULT nextval('public.sales_products_price_type_id_seq'::regclass);


--
-- Name: sales_purchase_bill id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_purchase_bill ALTER COLUMN id SET DEFAULT nextval('public.sales_purchase_bill_id_seq'::regclass);


--
-- Name: sales_purchase_order_dtl id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_purchase_order_dtl ALTER COLUMN id SET DEFAULT nextval('public.sales_purchase_order_dtl_id_seq'::regclass);


--
-- Name: sales_purchase_order_dtl_temp id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_purchase_order_dtl_temp ALTER COLUMN id SET DEFAULT nextval('public.sales_purchase_order_dtl_temp_id_seq'::regclass);


--
-- Name: sales_purchase_order_mst id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_purchase_order_mst ALTER COLUMN id SET DEFAULT nextval('public.sales_purchase_order_mst_id_seq'::regclass);


--
-- Name: sales_purchasemasterauthq id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_purchasemasterauthq ALTER COLUMN id SET DEFAULT nextval('public.sales_purchasemasterauthq_id_seq'::regclass);


--
-- Name: sales_sales_details id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_sales_details ALTER COLUMN id SET DEFAULT nextval('public.sales_sales_details_id_seq'::regclass);


--
-- Name: sales_sales_details_temp id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_sales_details_temp ALTER COLUMN id SET DEFAULT nextval('public.sales_sales_details_temp_id_seq'::regclass);


--
-- Name: sales_sales_master id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_sales_master ALTER COLUMN id SET DEFAULT nextval('public.sales_sales_master_id_seq'::regclass);


--
-- Name: sales_sales_return_details id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_sales_return_details ALTER COLUMN id SET DEFAULT nextval('public.sales_sales_return_details_id_seq'::regclass);


--
-- Name: sales_showroom id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_showroom ALTER COLUMN id SET DEFAULT nextval('public.sales_showroom_id_seq'::regclass);


--
-- Name: sales_stock_quantity_transfer id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stock_quantity_transfer ALTER COLUMN id SET DEFAULT nextval('public.sales_stock_quantity_transfer_id_seq'::regclass);


--
-- Name: sales_stock_return_details id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stock_return_details ALTER COLUMN id SET DEFAULT nextval('public.sales_stock_return_details_id_seq'::regclass);


--
-- Name: sales_stockdetails id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stockdetails ALTER COLUMN id SET DEFAULT nextval('public.sales_stockdetails_id_seq'::regclass);


--
-- Name: sales_stockdetailstemp id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stockdetailstemp ALTER COLUMN id SET DEFAULT nextval('public.sales_stockdetailstemp_id_seq'::regclass);


--
-- Name: sales_stockmaster id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stockmaster ALTER COLUMN id SET DEFAULT nextval('public.sales_stockmaster_id_seq'::regclass);


--
-- Name: sales_stockmasterauthq id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stockmasterauthq ALTER COLUMN id SET DEFAULT nextval('public.sales_stockmasterauthq_id_seq'::regclass);


--
-- Name: sales_stockpaymentdetails id; Type: DEFAULT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stockpaymentdetails ALTER COLUMN id SET DEFAULT nextval('public.sales_stockpaymentdetails_id_seq'::regclass);


--
-- Data for Name: appauth_application_log; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_application_log (id, program_name, account_number, error_message, error_time, app_user_id) FROM stdin;
\.


--
-- Data for Name: appauth_branch; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_branch (branch_code, branch_name, manager_id, opening_date, closing_date, branch_address, manager_phone, current_business_day, previous_business_day, business_clossing_in_progress, business_day_close_by, status, app_user_id, app_data_time, country_id, district_id, division_id, union_id, upozila_id) FROM stdin;
100	Velanagor	Rajib Pradhan	2021-05-05	\N	Velanagor, Narsingdi	01720026449	2021-05-05	2021-05-05	f	\N	A	Admin	2021-05-04 23:32:32.73548-07	\N	\N	\N	\N	\N
\.


--
-- Data for Name: appauth_dashboard_matrix; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_dashboard_matrix (id, matrix_key, matrix_value) FROM stdin;
\.


--
-- Data for Name: appauth_employees; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_employees (employee_id, employee_name, employee_sex, father_name, mother_name, joining_date, present_address, permanent_address, birth_date, nid_number, employee_religion, blood_group, employee_education, marital_status, mobile_num, alternate_phone, is_active, is_deleted, account_number, app_user_id, app_data_time, branch_code, employee_designation) FROM stdin;
1000000	Rajib	M	\N	\N	\N	Velanagor, Narsingdi	\N	\N	\N	\N	\N	\N	\N	01720026449	\N	t	f	\N	Admin	2021-05-04 23:33:38.799738-07	100	
000002	mahbub	M	\N	\N	2019-02-01	dhaka	dhaka	1999-08-02	\N	\N	\N	Honors	\N	01776879668	\N	f	f	\N	Admin	2021-08-16 23:24:50.680765-07	100	000003
000001	mithun	M	monir	rita	2003-01-02	dhaka	\N	1978-02-01	\N	I	\N	Honors	M	01720026441	\N	f	f	\N	Admin	2021-08-16 23:21:19.529412-07	100	
\.


--
-- Data for Name: appauth_eodsod_process; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_eodsod_process (id, process_name, function_name, process_status, process_date, start_time, end_time, error_message, app_user_id, app_data_time, branch_code) FROM stdin;
\.


--
-- Data for Name: appauth_eodsod_process_list; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_eodsod_process_list (id, process_name, function_name, serial_number, is_enable, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: appauth_global_parameters; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_global_parameters (id, company_code, company_name, company_address, head_office_code, application_title, cash_gl_code, current_business_day, previous_business_day, business_clossing_in_progress, business_day_close_by, is_friday_holiday, is_saturday_holiday, is_sunday_holiday, is_monday_holiday, is_tuesday_holiday, is_wednesday_holiday, is_thursday_holiday) FROM stdin;
1	100	Peart Technology Limited	Velanagor, Narsingdi	100	Peart Technology Limited	12110001	2021-05-05	2021-05-05	f	\N	f	f	f	f	f	f	f
\.


--
-- Data for Name: appauth_holiday_list; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_holiday_list (id, holiday_date, holiday_description, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: appauth_inventory_number; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_inventory_number (id, inv_code, branch_code, inv_prefix, inv_length, last_used_number, inv_naration, app_user_id) FROM stdin;
2	40002	100		4	2	Branch Wise Center ID	\N
12	30015	1	ST	8	3	Stock Voucher Number	\N
26	100001	100	CAT	6	3	Ecom Product ID Generate	\N
27	200001	100	SCT	6	3	Ecom Product ID Generate	\N
28	1	1		10	2	Order Number Generate	\N
15	20000	100		6	13	Transaction Type ID Generate	\N
9	30007	100		4	5	Product Group ID	\N
1	40001	100	4	6	35	Center ID	\N
48	10000	100		6	2	Country ID Generate	\N
10	30013	100		4	5	Product Brand ID	\N
49	106	1	IRT	1	29	Invoice Return Number	\N
32	30016	1	RT	8	9	Stock Return Voucher Number	\N
29	30015	100	ST	8	105	Stock Voucher Number	\N
25	40004	100	SR	8	27	Sales Representative Number Generate	\N
30	30002	100	OR	6	44	Sales Order Number Generate	\N
47	10001	100		6	3	Employee ID Generate	\N
14	30001	100	SL	6	124	Sales Invoice Number Generate	\N
7	30003	100		8	9	Client Number	\N
13	30006	100		4	10	Supplier ID	\N
8	20001	100		8	20	Account Number Sequence	\N
11	30000	100		6	9	Product ID Generate	\N
31	106	6	SRT	1	94	Invoice Return Number	\N
33	100	1		6	30	Department ID Generate	\N
\.


--
-- Data for Name: appauth_loc_country; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_loc_country (country_id, country_name, app_user_id, app_data_time) FROM stdin;
000001	bangladesh	Admin	2021-08-20 22:57:58.202388-07
\.


--
-- Data for Name: appauth_loc_district; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_loc_district (district_id, district_name, app_user_id, app_data_time, division_id) FROM stdin;
\.


--
-- Data for Name: appauth_loc_division; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_loc_division (division_id, division_name, app_user_id, app_data_time, country_id) FROM stdin;
\.


--
-- Data for Name: appauth_loc_region; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_loc_region (region_id, region_name, app_user_id, app_data_time, union_id) FROM stdin;
\.


--
-- Data for Name: appauth_loc_union; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_loc_union (union_id, union_name, app_user_id, app_data_time, upozila_id) FROM stdin;
\.


--
-- Data for Name: appauth_loc_upazila; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_loc_upazila (upozila_id, upozila_name, app_user_id, app_data_time, district_id) FROM stdin;
\.


--
-- Data for Name: appauth_query_table; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_query_table (id, int_column1, int_column2, int_column3, int_column4, int_column5, int_column6, int_column7, int_column8, int_column9, int_column10, chr_column1, chr_column2, chr_column3, chr_column4, chr_column5, chr_column6, chr_column7, chr_column8, chr_column9, chr_column10, dec_column1, dec_column2, dec_column3, dec_column4, dec_column5, dec_column6, dec_column7, dec_column8, dec_column9, dec_column10, dat_column1, dat_column2, dat_column3, dat_column4, dat_column5, bool_column1, bool_column2, bool_column3, bool_column4, bool_column5, app_user_id) FROM stdin;
1	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	1	Opening Balance	Cash In Hand	\N	\N	\N	\N	\N	\N	\N	0.00	0.00	0.00	18000.00	\N	\N	\N	\N	\N	\N	2019-06-18	\N	\N	\N	\N	\N	\N	\N	\N	\N	Admin
2	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	2	Purchase payment for ST00000001	Cash In Hand	\N	\N	\N	\N	\N	\N	\N	20000.00	0.00	20000.00	18000.00	\N	\N	\N	\N	\N	\N	2021-05-24	\N	\N	\N	\N	\N	\N	\N	\N	\N	Admin
3	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	3	Payment Receive for SALES SL000001	Cash In Hand	\N	\N	\N	\N	\N	\N	\N	0.00	5000.00	15000.00	18000.00	\N	\N	\N	\N	\N	\N	2021-05-24	\N	\N	\N	\N	\N	\N	\N	\N	\N	Admin
4	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	4	Supplier Bill Payment	Cash In Hand	\N	\N	\N	\N	\N	\N	\N	2000.00	0.00	17000.00	18000.00	\N	\N	\N	\N	\N	\N	2021-05-24	\N	\N	\N	\N	\N	\N	\N	\N	\N	Admin
5	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	5	Purchase payment for ST00000001	Cash In Hand	\N	\N	\N	\N	\N	\N	\N	3000.00	0.00	20000.00	18000.00	\N	\N	\N	\N	\N	\N	2021-06-10	\N	\N	\N	\N	\N	\N	\N	\N	\N	Admin
6	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	6	Payment Receive for SALES SL000003	Cash In Hand	\N	\N	\N	\N	\N	\N	\N	0.00	2000.00	18000.00	18000.00	\N	\N	\N	\N	\N	\N	2021-06-10	\N	\N	\N	\N	\N	\N	\N	\N	\N	Admin
\.


--
-- Data for Name: appauth_report_configuration; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_report_configuration (id, server_name, server_ip, report_url, company_file_path, company_info_report) FROM stdin;
1	localhost	localhost	http://localhost:8000	...	http://localhost:8000
\.


--
-- Data for Name: appauth_report_parameter; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_report_parameter (id, app_user_id, report_name, parameter_name, parameter_values) FROM stdin;
3922	Admin	sales_invoice	p_invoice_number	SL000122
\.


--
-- Data for Name: appauth_report_parameter_mapping; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_report_parameter_mapping (id, report_name, parameter_name, parameter_values) FROM stdin;
\.


--
-- Data for Name: appauth_report_table_group; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_report_table_group (id, report_column1, report_column2, report_column3, report_column4, report_column5, report_column6, report_column7, report_column8, report_column9, report_column10, report_column11, report_column12, report_column13, report_column14, report_column15, report_column16, report_column17, report_column18, report_column19, report_column20, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: appauth_report_table_tabular; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_report_table_tabular (id, report_column1, report_column2, report_column3, report_column4, report_column5, report_column6, report_column7, report_column8, report_column9, report_column10, report_column11, report_column12, report_column13, report_column14, report_column15, report_column16, report_column17, report_column18, report_column19, report_column20, app_user_id, app_data_time, report_column21, report_column22, report_column23, report_column24, report_column25, report_column26, report_column27, report_column28, report_column29, report_column30, report_column31, report_column32, report_column33, report_column34, report_column35, report_column36, report_column37, report_column38, report_column39, report_column40, report_column41, report_column42, report_column43, report_column44, report_column45, report_column46, report_column47, report_column48, report_column49, report_column50, report_column51, report_column52, report_column53, report_column54, report_column55, report_column56, report_column57, report_column58, report_column59, report_column60) FROM stdin;
890	1	fresh-oil (1)	1	2	40.00	0.00	1000000	80.00	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Admin	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
\.


--
-- Data for Name: appauth_user_settings; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.appauth_user_settings (app_user_id, branch_code, django_user_id, employee_name, reset_user_password, lock_user, password_expire_date, is_active, is_deleted, account_number, general_account, cash_gl_code, head_office_admin, daily_debit_limit, daily_credit_limit, employee_id) FROM stdin;
Admin	100	1	Rajib	f	f	\N	t	f	\N	\N	\N	f	9999999999999.00	9999999999999.00	1000000
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add application_ log	7	add_application_log
26	Can change application_ log	7	change_application_log
27	Can delete application_ log	7	delete_application_log
28	Can view application_ log	7	view_application_log
29	Can add branch	8	add_branch
30	Can change branch	8	change_branch
31	Can delete branch	8	delete_branch
32	Can view branch	8	view_branch
33	Can add dashboard_ matrix	9	add_dashboard_matrix
34	Can change dashboard_ matrix	9	change_dashboard_matrix
35	Can delete dashboard_ matrix	9	delete_dashboard_matrix
36	Can view dashboard_ matrix	9	view_dashboard_matrix
37	Can add employees	10	add_employees
38	Can change employees	10	change_employees
39	Can delete employees	10	delete_employees
40	Can view employees	10	view_employees
41	Can add eodsod_ process_ list	11	add_eodsod_process_list
42	Can change eodsod_ process_ list	11	change_eodsod_process_list
43	Can delete eodsod_ process_ list	11	delete_eodsod_process_list
44	Can view eodsod_ process_ list	11	view_eodsod_process_list
45	Can add global_ parameters	12	add_global_parameters
46	Can change global_ parameters	12	change_global_parameters
47	Can delete global_ parameters	12	delete_global_parameters
48	Can view global_ parameters	12	view_global_parameters
49	Can add holiday_ list	13	add_holiday_list
50	Can change holiday_ list	13	change_holiday_list
51	Can delete holiday_ list	13	delete_holiday_list
52	Can view holiday_ list	13	view_holiday_list
53	Can add inventory_ number	14	add_inventory_number
54	Can change inventory_ number	14	change_inventory_number
55	Can delete inventory_ number	14	delete_inventory_number
56	Can view inventory_ number	14	view_inventory_number
57	Can add loc_ country	15	add_loc_country
58	Can change loc_ country	15	change_loc_country
59	Can delete loc_ country	15	delete_loc_country
60	Can view loc_ country	15	view_loc_country
61	Can add loc_ district	16	add_loc_district
62	Can change loc_ district	16	change_loc_district
63	Can delete loc_ district	16	delete_loc_district
64	Can view loc_ district	16	view_loc_district
65	Can add query_ table	17	add_query_table
66	Can change query_ table	17	change_query_table
67	Can delete query_ table	17	delete_query_table
68	Can view query_ table	17	view_query_table
69	Can add report_ configuration	18	add_report_configuration
70	Can change report_ configuration	18	change_report_configuration
71	Can delete report_ configuration	18	delete_report_configuration
72	Can view report_ configuration	18	view_report_configuration
73	Can add report_ parameter	19	add_report_parameter
74	Can change report_ parameter	19	change_report_parameter
75	Can delete report_ parameter	19	delete_report_parameter
76	Can view report_ parameter	19	view_report_parameter
77	Can add report_ parameter_ mapping	20	add_report_parameter_mapping
78	Can change report_ parameter_ mapping	20	change_report_parameter_mapping
79	Can delete report_ parameter_ mapping	20	delete_report_parameter_mapping
80	Can view report_ parameter_ mapping	20	view_report_parameter_mapping
81	Can add report_ table_ group	21	add_report_table_group
82	Can change report_ table_ group	21	change_report_table_group
83	Can delete report_ table_ group	21	delete_report_table_group
84	Can view report_ table_ group	21	view_report_table_group
85	Can add report_ table_ tabular	22	add_report_table_tabular
86	Can change report_ table_ tabular	22	change_report_table_tabular
87	Can delete report_ table_ tabular	22	delete_report_table_tabular
88	Can view report_ table_ tabular	22	view_report_table_tabular
89	Can add user_ settings	23	add_user_settings
90	Can change user_ settings	23	change_user_settings
91	Can delete user_ settings	23	delete_user_settings
92	Can view user_ settings	23	view_user_settings
93	Can add loc_ upazila	24	add_loc_upazila
94	Can change loc_ upazila	24	change_loc_upazila
95	Can delete loc_ upazila	24	delete_loc_upazila
96	Can view loc_ upazila	24	view_loc_upazila
97	Can add loc_ union	25	add_loc_union
98	Can change loc_ union	25	change_loc_union
99	Can delete loc_ union	25	delete_loc_union
100	Can view loc_ union	25	view_loc_union
101	Can add loc_ region	26	add_loc_region
102	Can change loc_ region	26	change_loc_region
103	Can delete loc_ region	26	delete_loc_region
104	Can view loc_ region	26	view_loc_region
105	Can add loc_ division	27	add_loc_division
106	Can change loc_ division	27	change_loc_division
107	Can delete loc_ division	27	delete_loc_division
108	Can view loc_ division	27	view_loc_division
109	Can add eodsod_ process	28	add_eodsod_process
110	Can change eodsod_ process	28	change_eodsod_process
111	Can delete eodsod_ process	28	delete_eodsod_process
112	Can view eodsod_ process	28	view_eodsod_process
113	Can add account_ charges	29	add_account_charges
114	Can change account_ charges	29	change_account_charges
115	Can delete account_ charges	29	delete_account_charges
116	Can view account_ charges	29	view_account_charges
117	Can add account_ type	30	add_account_type
118	Can change account_ type	30	change_account_type
119	Can delete account_ type	30	delete_account_type
120	Can view account_ type	30	view_account_type
121	Can add accounts_ balance	31	add_accounts_balance
122	Can change accounts_ balance	31	change_accounts_balance
123	Can delete accounts_ balance	31	delete_accounts_balance
124	Can view accounts_ balance	31	view_accounts_balance
125	Can add application_ settings	32	add_application_settings
126	Can change application_ settings	32	change_application_settings
127	Can delete application_ settings	32	delete_application_settings
128	Can view application_ settings	32	view_application_settings
129	Can add cash_ transaction	33	add_cash_transaction
130	Can change cash_ transaction	33	change_cash_transaction
131	Can delete cash_ transaction	33	delete_cash_transaction
132	Can view cash_ transaction	33	view_cash_transaction
133	Can add client_ type	34	add_client_type
134	Can change client_ type	34	change_client_type
135	Can delete client_ type	34	delete_client_type
136	Can view client_ type	34	view_client_type
137	Can add deposit_ payment	35	add_deposit_payment
138	Can change deposit_ payment	35	change_deposit_payment
139	Can delete deposit_ payment	35	delete_deposit_payment
140	Can view deposit_ payment	35	view_deposit_payment
141	Can add deposit_ receive	36	add_deposit_receive
142	Can change deposit_ receive	36	change_deposit_receive
143	Can delete deposit_ receive	36	delete_deposit_receive
144	Can view deposit_ receive	36	view_deposit_receive
145	Can add document_ register	37	add_document_register
146	Can change document_ register	37	change_document_register
147	Can delete document_ register	37	delete_document_register
148	Can view document_ register	37	view_document_register
149	Can add general_ ledger	38	add_general_ledger
150	Can change general_ ledger	38	change_general_ledger
151	Can delete general_ ledger	38	delete_general_ledger
152	Can view general_ ledger	38	view_general_ledger
153	Can add ledger_ balance_ hist	39	add_ledger_balance_hist
154	Can change ledger_ balance_ hist	39	change_ledger_balance_hist
155	Can delete ledger_ balance_ hist	39	delete_ledger_balance_hist
156	Can view ledger_ balance_ hist	39	view_ledger_balance_hist
157	Can add ledger_ balmon_ hist	40	add_ledger_balmon_hist
158	Can change ledger_ balmon_ hist	40	change_ledger_balmon_hist
159	Can delete ledger_ balmon_ hist	40	delete_ledger_balmon_hist
160	Can view ledger_ balmon_ hist	40	view_ledger_balmon_hist
161	Can add ledger_ report_ balance	41	add_ledger_report_balance
162	Can change ledger_ report_ balance	41	change_ledger_report_balance
163	Can delete ledger_ report_ balance	41	delete_ledger_report_balance
164	Can view ledger_ report_ balance	41	view_ledger_report_balance
165	Can add ledger_ report_ param	42	add_ledger_report_param
166	Can change ledger_ report_ param	42	change_ledger_report_param
167	Can delete ledger_ report_ param	42	delete_ledger_report_param
168	Can view ledger_ report_ param	42	view_ledger_report_param
169	Can add tran_ telbal_ details	43	add_tran_telbal_details
170	Can change tran_ telbal_ details	43	change_tran_telbal_details
171	Can delete tran_ telbal_ details	43	delete_tran_telbal_details
172	Can view tran_ telbal_ details	43	view_tran_telbal_details
173	Can add transaction_ details	44	add_transaction_details
174	Can change transaction_ details	44	change_transaction_details
175	Can delete transaction_ details	44	delete_transaction_details
176	Can view transaction_ details	44	view_transaction_details
177	Can add transaction_ ibr	45	add_transaction_ibr
178	Can change transaction_ ibr	45	change_transaction_ibr
179	Can delete transaction_ ibr	45	delete_transaction_ibr
180	Can view transaction_ ibr	45	view_transaction_ibr
181	Can add transaction_ master	46	add_transaction_master
182	Can change transaction_ master	46	change_transaction_master
183	Can delete transaction_ master	46	delete_transaction_master
184	Can view transaction_ master	46	view_transaction_master
185	Can add transaction_ table	47	add_transaction_table
186	Can change transaction_ table	47	change_transaction_table
187	Can delete transaction_ table	47	delete_transaction_table
188	Can view transaction_ table	47	view_transaction_table
189	Can add transaction_ telbal	48	add_transaction_telbal
190	Can change transaction_ telbal	48	change_transaction_telbal
191	Can delete transaction_ telbal	48	delete_transaction_telbal
192	Can view transaction_ telbal	48	view_transaction_telbal
193	Can add transfer_ tran	49	add_transfer_tran
194	Can change transfer_ tran	49	change_transfer_tran
195	Can delete transfer_ tran	49	delete_transfer_tran
196	Can view transfer_ tran	49	view_transfer_tran
197	Can add transaction_ type	50	add_transaction_type
198	Can change transaction_ type	50	change_transaction_type
199	Can delete transaction_ type	50	delete_transaction_type
200	Can view transaction_ type	50	view_transaction_type
201	Can add ledger_ transaction_ type	51	add_ledger_transaction_type
202	Can change ledger_ transaction_ type	51	change_ledger_transaction_type
203	Can delete ledger_ transaction_ type	51	delete_ledger_transaction_type
204	Can view ledger_ transaction_ type	51	view_ledger_transaction_type
205	Can add ledger_ receipt_ payment	52	add_ledger_receipt_payment
206	Can change ledger_ receipt_ payment	52	change_ledger_receipt_payment
207	Can delete ledger_ receipt_ payment	52	delete_ledger_receipt_payment
208	Can view ledger_ receipt_ payment	52	view_ledger_receipt_payment
209	Can add ledger_ balance	53	add_ledger_balance
210	Can change ledger_ balance	53	change_ledger_balance
211	Can delete ledger_ balance	53	delete_ledger_balance
212	Can view ledger_ balance	53	view_ledger_balance
213	Can add client_ account_ mapping	54	add_client_account_mapping
214	Can change client_ account_ mapping	54	change_client_account_mapping
215	Can delete client_ account_ mapping	54	delete_client_account_mapping
216	Can view client_ account_ mapping	54	view_client_account_mapping
217	Can add charges	55	add_charges
218	Can change charges	55	change_charges
219	Can delete charges	55	delete_charges
220	Can view charges	55	view_charges
221	Can add cash_ and_ bank_ ledger	56	add_cash_and_bank_ledger
222	Can change cash_ and_ bank_ ledger	56	change_cash_and_bank_ledger
223	Can delete cash_ and_ bank_ ledger	56	delete_cash_and_bank_ledger
224	Can view cash_ and_ bank_ ledger	56	view_cash_and_bank_ledger
225	Can add accounts_ balmon_ hist	57	add_accounts_balmon_hist
226	Can change accounts_ balmon_ hist	57	change_accounts_balmon_hist
227	Can delete accounts_ balmon_ hist	57	delete_accounts_balmon_hist
228	Can view accounts_ balmon_ hist	57	view_accounts_balmon_hist
229	Can add accounts_ balance_ hist	58	add_accounts_balance_hist
230	Can change accounts_ balance_ hist	58	change_accounts_balance_hist
231	Can delete accounts_ balance_ hist	58	delete_accounts_balance_hist
232	Can view accounts_ balance_ hist	58	view_accounts_balance_hist
233	Can add ecom_ delivery_ address	59	add_ecom_delivery_address
234	Can change ecom_ delivery_ address	59	change_ecom_delivery_address
235	Can delete ecom_ delivery_ address	59	delete_ecom_delivery_address
236	Can view ecom_ delivery_ address	59	view_ecom_delivery_address
237	Can add ecom_ order_ master	60	add_ecom_order_master
238	Can change ecom_ order_ master	60	change_ecom_order_master
239	Can delete ecom_ order_ master	60	delete_ecom_order_master
240	Can view ecom_ order_ master	60	view_ecom_order_master
241	Can add user_ chart	61	add_user_chart
242	Can change user_ chart	61	change_user_chart
243	Can delete user_ chart	61	delete_user_chart
244	Can view user_ chart	61	view_user_chart
245	Can add all_trandtl	62	add_all_trandtl
246	Can change all_trandtl	62	change_all_trandtl
247	Can delete all_trandtl	62	delete_all_trandtl
248	Can view all_trandtl	62	view_all_trandtl
249	Can add application_ settings	63	add_application_settings
250	Can change application_ settings	63	change_application_settings
251	Can delete application_ settings	63	delete_application_settings
252	Can view application_ settings	63	view_application_settings
253	Can add client_ balance	64	add_client_balance
254	Can change client_ balance	64	change_client_balance
255	Can delete client_ balance	64	delete_client_balance
256	Can view client_ balance	64	view_client_balance
257	Can add client_ id_ changes_ hist	65	add_client_id_changes_hist
258	Can change client_ id_ changes_ hist	65	change_client_id_changes_hist
259	Can delete client_ id_ changes_ hist	65	delete_client_id_changes_hist
260	Can view client_ id_ changes_ hist	65	view_client_id_changes_hist
261	Can add clients	66	add_clients
262	Can change clients	66	change_clients
263	Can delete clients	66	delete_clients
264	Can view clients	66	view_clients
265	Can add emi_ history	67	add_emi_history
266	Can change emi_ history	67	change_emi_history
267	Can delete emi_ history	67	delete_emi_history
268	Can view emi_ history	67	view_emi_history
269	Can add emi_ receive	68	add_emi_receive
270	Can change emi_ receive	68	change_emi_receive
271	Can delete emi_ receive	68	delete_emi_receive
272	Can view emi_ receive	68	view_emi_receive
273	Can add em i_ settings	69	add_emi_settings
274	Can change em i_ settings	69	change_emi_settings
275	Can delete em i_ settings	69	delete_emi_settings
276	Can view em i_ settings	69	view_emi_settings
277	Can add emi_ setup	70	add_emi_setup
278	Can change emi_ setup	70	change_emi_setup
279	Can delete emi_ setup	70	delete_emi_setup
280	Can view emi_ setup	70	view_emi_setup
281	Can add fees_ history	71	add_fees_history
282	Can change fees_ history	71	change_fees_history
283	Can delete fees_ history	71	delete_fees_history
284	Can view fees_ history	71	view_fees_history
285	Can add order_ details	72	add_order_details
286	Can change order_ details	72	change_order_details
287	Can delete order_ details	72	delete_order_details
288	Can view order_ details	72	view_order_details
289	Can add order_ master	73	add_order_master
290	Can change order_ master	73	change_order_master
291	Can delete order_ master	73	delete_order_master
292	Can view order_ master	73	view_order_master
293	Can add product_ damage_ details	74	add_product_damage_details
294	Can change product_ damage_ details	74	change_product_damage_details
295	Can delete product_ damage_ details	74	delete_product_damage_details
296	Can view product_ damage_ details	74	view_product_damage_details
297	Can add product_ offer_ list	75	add_product_offer_list
298	Can change product_ offer_ list	75	change_product_offer_list
299	Can delete product_ offer_ list	75	delete_product_offer_list
300	Can view product_ offer_ list	75	view_product_offer_list
301	Can add product_ offer_ package	76	add_product_offer_package
302	Can change product_ offer_ package	76	change_product_offer_package
303	Can delete product_ offer_ package	76	delete_product_offer_package
304	Can view product_ offer_ package	76	view_product_offer_package
305	Can add product_ price_ list	77	add_product_price_list
306	Can change product_ price_ list	77	change_product_price_list
307	Can delete product_ price_ list	77	delete_product_price_list
308	Can view product_ price_ list	77	view_product_price_list
309	Can add products	78	add_products
310	Can change products	78	change_products
311	Can delete products	78	delete_products
312	Can view products	78	view_products
313	Can add products_ brand	79	add_products_brand
314	Can change products_ brand	79	change_products_brand
315	Can delete products_ brand	79	delete_products_brand
316	Can view products_ brand	79	view_products_brand
317	Can add products_ group	80	add_products_group
318	Can change products_ group	80	change_products_group
319	Can delete products_ group	80	delete_products_group
320	Can view products_ group	80	view_products_group
321	Can add products_ inventory_ hist	81	add_products_inventory_hist
322	Can change products_ inventory_ hist	81	change_products_inventory_hist
323	Can delete products_ inventory_ hist	81	delete_products_inventory_hist
324	Can view products_ inventory_ hist	81	view_products_inventory_hist
325	Can add products_ inventory_ status	82	add_products_inventory_status
326	Can change products_ inventory_ status	82	change_products_inventory_status
327	Can delete products_ inventory_ status	82	delete_products_inventory_status
328	Can view products_ inventory_ status	82	view_products_inventory_status
329	Can add products_ price_ type	83	add_products_price_type
330	Can change products_ price_ type	83	change_products_price_type
331	Can delete products_ price_ type	83	delete_products_price_type
332	Can view products_ price_ type	83	view_products_price_type
333	Can add sales_ details	84	add_sales_details
334	Can change sales_ details	84	change_sales_details
335	Can delete sales_ details	84	delete_sales_details
336	Can view sales_ details	84	view_sales_details
337	Can add sales_ details_ temp	85	add_sales_details_temp
338	Can change sales_ details_ temp	85	change_sales_details_temp
339	Can delete sales_ details_ temp	85	delete_sales_details_temp
340	Can view sales_ details_ temp	85	view_sales_details_temp
341	Can add sales_ master	86	add_sales_master
342	Can change sales_ master	86	change_sales_master
343	Can delete sales_ master	86	delete_sales_master
344	Can view sales_ master	86	view_sales_master
345	Can add sales_ return_ details	87	add_sales_return_details
346	Can change sales_ return_ details	87	change_sales_return_details
347	Can delete sales_ return_ details	87	delete_sales_return_details
348	Can view sales_ return_ details	87	view_sales_return_details
349	Can add show room	88	add_showroom
350	Can change show room	88	change_showroom
351	Can delete show room	88	delete_showroom
352	Can view show room	88	view_showroom
353	Can add stock_ return_ details	89	add_stock_return_details
354	Can change stock_ return_ details	89	change_stock_return_details
355	Can delete stock_ return_ details	89	delete_stock_return_details
356	Can view stock_ return_ details	89	view_stock_return_details
357	Can add stock details	90	add_stockdetails
358	Can change stock details	90	change_stockdetails
359	Can delete stock details	90	delete_stockdetails
360	Can view stock details	90	view_stockdetails
361	Can add stock master	91	add_stockmaster
362	Can change stock master	91	change_stockmaster
363	Can delete stock master	91	delete_stockmaster
364	Can view stock master	91	view_stockmaster
365	Can add stock master auth q	92	add_stockmasterauthq
366	Can change stock master auth q	92	change_stockmasterauthq
367	Can delete stock master auth q	92	delete_stockmasterauthq
368	Can view stock master auth q	92	view_stockmasterauthq
369	Can add stock payment details	93	add_stockpaymentdetails
370	Can change stock payment details	93	change_stockpaymentdetails
371	Can delete stock payment details	93	delete_stockpaymentdetails
372	Can view stock payment details	93	view_stockpaymentdetails
373	Can add supplier_ information	94	add_supplier_information
374	Can change supplier_ information	94	change_supplier_information
375	Can delete supplier_ information	94	delete_supplier_information
376	Can view supplier_ information	94	view_supplier_information
377	Can add stock details temp	95	add_stockdetailstemp
378	Can change stock details temp	95	change_stockdetailstemp
379	Can delete stock details temp	95	delete_stockdetailstemp
380	Can view stock details temp	95	view_stockdetailstemp
381	Can add nominee_ information	96	add_nominee_information
382	Can change nominee_ information	96	change_nominee_information
383	Can delete nominee_ information	96	delete_nominee_information
384	Can view nominee_ information	96	view_nominee_information
385	Can add delar_ security_ info	97	add_delar_security_info
386	Can change delar_ security_ info	97	change_delar_security_info
387	Can delete delar_ security_ info	97	delete_delar_security_info
388	Can view delar_ security_ info	97	view_delar_security_info
389	Can add client_ profit_ history	98	add_client_profit_history
390	Can change client_ profit_ history	98	change_client_profit_history
391	Can delete client_ profit_ history	98	delete_client_profit_history
392	Can view client_ profit_ history	98	view_client_profit_history
393	Can add client_ photo_ sign	99	add_client_photo_sign
394	Can change client_ photo_ sign	99	change_client_photo_sign
395	Can delete client_ photo_ sign	99	delete_client_photo_sign
396	Can view client_ photo_ sign	99	view_client_photo_sign
397	Can add center_ admin	100	add_center_admin
398	Can change center_ admin	100	change_center_admin
399	Can delete center_ admin	100	delete_center_admin
400	Can view center_ admin	100	view_center_admin
401	Can add clients_ inventory_ hist	101	add_clients_inventory_hist
402	Can change clients_ inventory_ hist	101	change_clients_inventory_hist
403	Can delete clients_ inventory_ hist	101	delete_clients_inventory_hist
404	Can view clients_ inventory_ hist	101	view_clients_inventory_hist
405	Can add clients_ inventory_ status	102	add_clients_inventory_status
406	Can change clients_ inventory_ status	102	change_clients_inventory_status
407	Can delete clients_ inventory_ status	102	delete_clients_inventory_status
408	Can view clients_ inventory_ status	102	view_clients_inventory_status
409	Can add clients_ security_ info	103	add_clients_security_info
410	Can change clients_ security_ info	103	change_clients_security_info
411	Can delete clients_ security_ info	103	delete_clients_security_info
412	Can view clients_ security_ info	103	view_clients_security_info
413	Can add employee_ center_ permit	104	add_employee_center_permit
414	Can change employee_ center_ permit	104	change_employee_center_permit
415	Can delete employee_ center_ permit	104	delete_employee_center_permit
416	Can view employee_ center_ permit	104	view_employee_center_permit
417	Can add products_ packet_ mapping	105	add_products_packet_mapping
418	Can change products_ packet_ mapping	105	change_products_packet_mapping
419	Can delete products_ packet_ mapping	105	delete_products_packet_mapping
420	Can view products_ packet_ mapping	105	view_products_packet_mapping
421	Can add sales_ return_ packet	106	add_sales_return_packet
422	Can change sales_ return_ packet	106	change_sales_return_packet
423	Can delete sales_ return_ packet	106	delete_sales_return_packet
424	Can view sales_ return_ packet	106	view_sales_return_packet
425	Can add srstage_ details	107	add_srstage_details
426	Can change srstage_ details	107	change_srstage_details
427	Can delete srstage_ details	107	delete_srstage_details
428	Can view srstage_ details	107	view_srstage_details
429	Can add srstage_ details_ temp	108	add_srstage_details_temp
430	Can change srstage_ details_ temp	108	change_srstage_details_temp
431	Can delete srstage_ details_ temp	108	delete_srstage_details_temp
432	Can view srstage_ details_ temp	108	view_srstage_details_temp
433	Can add srstage_ inventory_ hist	109	add_srstage_inventory_hist
434	Can change srstage_ inventory_ hist	109	change_srstage_inventory_hist
435	Can delete srstage_ inventory_ hist	109	delete_srstage_inventory_hist
436	Can view srstage_ inventory_ hist	109	view_srstage_inventory_hist
437	Can add srstage_ inventory_ status	110	add_srstage_inventory_status
438	Can change srstage_ inventory_ status	110	change_srstage_inventory_status
439	Can delete srstage_ inventory_ status	110	delete_srstage_inventory_status
440	Can view srstage_ inventory_ status	110	view_srstage_inventory_status
441	Can add srstage_ inventory_ sum	111	add_srstage_inventory_sum
554	Can delete application_ settings	119	delete_application_settings
442	Can change srstage_ inventory_ sum	111	change_srstage_inventory_sum
443	Can delete srstage_ inventory_ sum	111	delete_srstage_inventory_sum
444	Can view srstage_ inventory_ sum	111	view_srstage_inventory_sum
445	Can add srstage_ master	112	add_srstage_master
446	Can change srstage_ master	112	change_srstage_master
447	Can delete srstage_ master	112	delete_srstage_master
448	Can view srstage_ master	112	view_srstage_master
449	Can add stock_ return_ packet	113	add_stock_return_packet
450	Can change stock_ return_ packet	113	change_stock_return_packet
451	Can delete stock_ return_ packet	113	delete_stock_return_packet
452	Can view stock_ return_ packet	113	view_stock_return_packet
453	Can add center	114	add_center
454	Can change center	114	change_center
455	Can delete center	114	delete_center
456	Can view center	114	view_center
457	Dashboard	115	D99999999
458	Authentication	115	A10000000
459	Create User	115	A11000001
460	User List	115	A11000002
461	Settings	115	A20000000
462	Manage Branch	115	A20000001
463	Employee Register	115	A20000002
464	Sales Region Setup	115	A20000003
465	Country Setup	115	A20000004
466	Division Setup	115	A20000005
467	District Setup	115	A20000006
468	Upazila Setup	115	A20000007
469	Union Setup	115	A20000008
470	Accounts Transaction	116	F10000000
471	Account Transaction	116	F10000001
472	Ledger Transaction	116	F10000002
473	Deposit Receive	116	F10000003
474	Deposit Payment	116	F10000004
475	Teller Management	116	F20000000
476	Balance Transfer Request	116	F20000001
477	Cash Receive/Payment	116	F20000002
478	Teller Balance Report	116	F20000003
479	Accounts Query	116	F30000000
480	Account Balance	116	F30000001
481	Account Transaction Details	116	F30000002
482	Transaction List	116	F30000003
483	Transaction Details Query	116	F30000004
484	Accounts Settings	116	F40000000
485	Chart Of Account (COA)	116	F40000001
486	Charge Parameter Settings	116	F40000002
487	Transaction Type Settings	116	F40000003
488	Transaction Ledger Mapping	116	F40000004
489	Cash & Bank Ledger	116	F40000005
490	Manage Account Type	116	F40000006
491	Manage Clients Type	116	F40000007
492	Client Account Mapping	116	F40000008
493	Accounts Report	116	F10001000
494	Account Balance	116	F10001001
495	Cash Transaction Details	116	F10001002
496	Ledger Statement	116	F10001003
497	Receipt & Payment	116	F10001004
498	Balance Sheet (Asset & Liabilities)	116	F10001005
499	Income & Expenses	116	F10001006
500	Trial Balance	116	F10001007
501	Cash & Bank (Receipt & Payment)	116	F10001008
502	Customer	117	S10000000
503	Customer Opening	117	S10000001
504	Customer List	117	S10000002
505	Supplier Opening	117	S10000003
506	Change Customer ID	117	S10000004
507	Manage Products	117	S20000000
508	Manage Product Group	117	S20000001
509	Manage Product Brand	117	S20000002
510	Create Products	117	S20000003
511	Product List	117	S20000004
512	Product Inventory Status	117	S20000005
513	Purchase	117	S30000000
514	Purchase Entry	117	S30000001
515	Purchase Approval	117	S30000002
516	Purchase List	117	S30000003
517	Purchase Return	117	S30000004
518	Purchase Return List	117	S30000005
519	Product Damage Entry	117	S30000006
520	Product Damage List	117	S30000007
521	Sales	117	S40000000
522	Sales Entry	117	S40000001
523	Quick Sales	117	S40000002
524	Invoice List	117	S40000003
525	Sales Return	117	S40000004
526	Sales Return List	117	S40000005
527	Manage EMI	117	S50000000
528	EMI Setup	117	S50000001
529	EMI Receive	117	S50000002
530	EMI Receive History	117	S50000003
531	Order	117	S60000000
532	Create Order	117	S60000001
533	Order List	117	S60000002
534	Online Order List	117	S60000003
535	Purchase Reports	117	S10001000
536	Inventory Status Report	117	S10001001
537	Daily Purchase Details	117	S10001002
538	Purchase & Return Details	117	S10001003
539	Supplier Statement	117	S10001004
540	Sales Reports	117	S10002000
541	Invoice Print	117	S10002001
542	Daily Sales Details	117	S10002002
543	Sales Details Report	117	S10002003
544	Sales & Return Details	117	S10002004
545	Profit & Loss Report	117	S10002005
546	Customer Statement	117	S10002006
547	EMI Details Report	117	S10002007
548	Sales Representative	118	D10000000
549	Allocate Products	118	D10000001
550	Allocation List	118	D10000002
551	SR Inventory	118	D10000003
552	Can add application_ settings	119	add_application_settings
553	Can change application_ settings	119	change_application_settings
555	Can view application_ settings	119	view_application_settings
556	Can add ecom_ delivery_ address	120	add_ecom_delivery_address
557	Can change ecom_ delivery_ address	120	change_ecom_delivery_address
558	Can delete ecom_ delivery_ address	120	delete_ecom_delivery_address
559	Can view ecom_ delivery_ address	120	view_ecom_delivery_address
560	Can add ecom_ order_ master	121	add_ecom_order_master
561	Can change ecom_ order_ master	121	change_ecom_order_master
562	Can delete ecom_ order_ master	121	delete_ecom_order_master
563	Can view ecom_ order_ master	121	view_ecom_order_master
564	Can add ecom_ products	122	add_ecom_products
565	Can change ecom_ products	122	change_ecom_products
566	Can delete ecom_ products	122	delete_ecom_products
567	Can view ecom_ products	122	view_ecom_products
568	Can add product_ images	123	add_product_images
569	Can change product_ images	123	change_product_images
570	Can delete product_ images	123	delete_product_images
571	Can view product_ images	123	view_product_images
572	Can add user_ chart	124	add_user_chart
573	Can change user_ chart	124	change_user_chart
574	Can delete user_ chart	124	delete_user_chart
575	Can view user_ chart	124	view_user_chart
576	Can add ecom_ slider	125	add_ecom_slider
577	Can change ecom_ slider	125	change_ecom_slider
578	Can delete ecom_ slider	125	delete_ecom_slider
579	Can view ecom_ slider	125	view_ecom_slider
580	Can add page model	126	add_pagemodel
581	Can change page model	126	change_pagemodel
582	Can delete page model	126	delete_pagemodel
583	Can view page model	126	view_pagemodel
584	Can add products_ brand	127	add_products_brand
585	Can change products_ brand	127	change_products_brand
586	Can delete products_ brand	127	delete_products_brand
587	Can view products_ brand	127	view_products_brand
588	Can add application_ settings	128	add_application_settings
589	Can change application_ settings	128	change_application_settings
590	Can delete application_ settings	128	delete_application_settings
591	Can view application_ settings	128	view_application_settings
592	Can add delivery_ address	129	add_delivery_address
593	Can change delivery_ address	129	change_delivery_address
594	Can delete delivery_ address	129	delete_delivery_address
595	Can view delivery_ address	129	view_delivery_address
596	Can add order_ details	130	add_order_details
597	Can change order_ details	130	change_order_details
598	Can delete order_ details	130	delete_order_details
599	Can view order_ details	130	view_order_details
600	Can add product_ categories	131	add_product_categories
601	Can change product_ categories	131	change_product_categories
602	Can delete product_ categories	131	delete_product_categories
603	Can view product_ categories	131	view_product_categories
604	Can add product_ sub_ categories	132	add_product_sub_categories
605	Can change product_ sub_ categories	132	change_product_sub_categories
606	Can delete product_ sub_ categories	132	delete_product_sub_categories
607	Can view product_ sub_ categories	132	view_product_sub_categories
608	Can add user_ coupon	133	add_user_coupon
609	Can change user_ coupon	133	change_user_coupon
610	Can delete user_ coupon	133	delete_user_coupon
611	Can view user_ coupon	133	view_user_coupon
612	Can add web_ user_ info	134	add_web_user_info
613	Can change web_ user_ info	134	change_web_user_info
614	Can delete web_ user_ info	134	delete_web_user_info
615	Can view web_ user_ info	134	view_web_user_info
616	Can add user_ profile	135	add_user_profile
617	Can change user_ profile	135	change_user_profile
618	Can delete user_ profile	135	delete_user_profile
619	Can view user_ profile	135	view_user_profile
620	Can add Products	136	add_products
621	Can change Products	136	change_products
622	Can delete Products	136	delete_products
623	Can view Products	136	view_products
624	Can add product_ group_ list	137	add_product_group_list
625	Can change product_ group_ list	137	change_product_group_list
626	Can delete product_ group_ list	137	delete_product_group_list
627	Can view product_ group_ list	137	view_product_group_list
628	Can add order_ master	138	add_order_master
629	Can change order_ master	138	change_order_master
630	Can delete order_ master	138	delete_order_master
631	Can view order_ master	138	view_order_master
632	Can add ecom_ product_ categories	139	add_ecom_product_categories
633	Can change ecom_ product_ categories	139	change_ecom_product_categories
634	Can delete ecom_ product_ categories	139	delete_ecom_product_categories
635	Can view ecom_ product_ categories	139	view_ecom_product_categories
636	Can add ecom_ product_ sub_ categories	140	add_ecom_product_sub_categories
637	Can change ecom_ product_ sub_ categories	140	change_ecom_product_sub_categories
638	Can delete ecom_ product_ sub_ categories	140	delete_ecom_product_sub_categories
639	Can view ecom_ product_ sub_ categories	140	view_ecom_product_sub_categories
640	Can add deposit_ closing	141	add_deposit_closing
641	Can change deposit_ closing	141	change_deposit_closing
642	Can delete deposit_ closing	141	delete_deposit_closing
643	Can view deposit_ closing	141	view_deposit_closing
644	Can add led_ rec_ pay_ bal_ hist	142	add_led_rec_pay_bal_hist
645	Can change led_ rec_ pay_ bal_ hist	142	change_led_rec_pay_bal_hist
646	Can delete led_ rec_ pay_ bal_ hist	142	delete_led_rec_pay_bal_hist
647	Can view led_ rec_ pay_ bal_ hist	142	view_led_rec_pay_bal_hist
648	Can add led_ rec_ pay_ balmon_ hist	143	add_led_rec_pay_balmon_hist
649	Can change led_ rec_ pay_ balmon_ hist	143	change_led_rec_pay_balmon_hist
650	Can delete led_ rec_ pay_ balmon_ hist	143	delete_led_rec_pay_balmon_hist
651	Can view led_ rec_ pay_ balmon_ hist	143	view_led_rec_pay_balmon_hist
652	Can add client_ closing	144	add_client_closing
653	Can change client_ closing	144	change_client_closing
654	Can delete client_ closing	144	delete_client_closing
655	Can view client_ closing	144	view_client_closing
656	Can add client_ center_ trf_ hist	145	add_client_center_trf_hist
657	Can change client_ center_ trf_ hist	145	change_client_center_trf_hist
658	Can delete client_ center_ trf_ hist	145	delete_client_center_trf_hist
659	Can view client_ center_ trf_ hist	145	view_client_center_trf_hist
673	Purchase Entry	117	S30000008
707	Can add deposit_ transfer	146	add_deposit_transfer
708	Can change deposit_ transfer	146	change_deposit_transfer
709	Can delete deposit_ transfer	146	delete_deposit_transfer
710	Can view deposit_ transfer	146	view_deposit_transfer
711	Can add purchase_ bill	147	add_purchase_bill
712	Can change purchase_ bill	147	change_purchase_bill
713	Can delete purchase_ bill	147	delete_purchase_bill
714	Can view purchase_ bill	147	view_purchase_bill
715	Can add purchase_ order_ dtl_ temp	148	add_purchase_order_dtl_temp
716	Can change purchase_ order_ dtl_ temp	148	change_purchase_order_dtl_temp
717	Can delete purchase_ order_ dtl_ temp	148	delete_purchase_order_dtl_temp
718	Can view purchase_ order_ dtl_ temp	148	view_purchase_order_dtl_temp
719	Can add purchase_ order_ mst	149	add_purchase_order_mst
720	Can change purchase_ order_ mst	149	change_purchase_order_mst
721	Can delete purchase_ order_ mst	149	delete_purchase_order_mst
722	Can view purchase_ order_ mst	149	view_purchase_order_mst
723	Can add purchase_ order_ dtl	150	add_purchase_order_dtl
724	Can change purchase_ order_ dtl	150	change_purchase_order_dtl
725	Can delete purchase_ order_ dtl	150	delete_purchase_order_dtl
726	Can view purchase_ order_ dtl	150	view_purchase_order_dtl
727	Can add purchase master auth q	151	add_purchasemasterauthq
728	Can change purchase master auth q	151	change_purchasemasterauthq
729	Can delete purchase master auth q	151	delete_purchasemasterauthq
730	Can view purchase master auth q	151	view_purchasemasterauthq
731	Can add stock_quantity_transfer	152	add_stock_quantity_transfer
732	Can change stock_quantity_transfer	152	change_stock_quantity_transfer
733	Can delete stock_quantity_transfer	152	delete_stock_quantity_transfer
734	Can view stock_quantity_transfer	152	view_stock_quantity_transfer
735	Can add education_ degree	153	add_education_degree
736	Can change education_ degree	153	change_education_degree
737	Can delete education_ degree	153	delete_education_degree
738	Can view education_ degree	153	view_education_degree
739	Can add salary_ sheet	154	add_salary_sheet
740	Can change salary_ sheet	154	change_salary_sheet
741	Can delete salary_ sheet	154	delete_salary_sheet
742	Can view salary_ sheet	154	view_salary_sheet
743	Can add company_ office	155	add_company_office
744	Can change company_ office	155	change_company_office
745	Can delete company_ office	155	delete_company_office
746	Can view company_ office	155	view_company_office
747	Can add extra_ allowance	156	add_extra_allowance
748	Can change extra_ allowance	156	change_extra_allowance
749	Can delete extra_ allowance	156	delete_extra_allowance
750	Can view extra_ allowance	156	view_extra_allowance
751	Can add salary_ scale_ details	157	add_salary_scale_details
752	Can change salary_ scale_ details	157	change_salary_scale_details
753	Can delete salary_ scale_ details	157	delete_salary_scale_details
754	Can view salary_ scale_ details	157	view_salary_scale_details
755	Can add salary_ scale_ bonous	158	add_salary_scale_bonous
756	Can change salary_ scale_ bonous	158	change_salary_scale_bonous
757	Can delete salary_ scale_ bonous	158	delete_salary_scale_bonous
758	Can view salary_ scale_ bonous	158	view_salary_scale_bonous
759	Can add leave_ application	159	add_leave_application
760	Can change leave_ application	159	change_leave_application
761	Can delete leave_ application	159	delete_leave_application
762	Can view leave_ application	159	view_leave_application
763	Can add employee_ training	160	add_employee_training
764	Can change employee_ training	160	change_employee_training
765	Can delete employee_ training	160	delete_employee_training
766	Can view employee_ training	160	view_employee_training
767	Can add employee_ details	161	add_employee_details
768	Can change employee_ details	161	change_employee_details
769	Can delete employee_ details	161	delete_employee_details
770	Can view employee_ details	161	view_employee_details
771	Can add shift_ info_ hist	162	add_shift_info_hist
772	Can change shift_ info_ hist	162	change_shift_info_hist
773	Can delete shift_ info_ hist	162	delete_shift_info_hist
774	Can view shift_ info_ hist	162	view_shift_info_hist
775	Can add employee_ nominee	163	add_employee_nominee
776	Can change employee_ nominee	163	change_employee_nominee
777	Can delete employee_ nominee	163	delete_employee_nominee
778	Can view employee_ nominee	163	view_employee_nominee
779	Can add company_ information	164	add_company_information
780	Can change company_ information	164	change_company_information
781	Can delete company_ information	164	delete_company_information
782	Can view company_ information	164	view_company_information
783	Can add others_ deduction	165	add_others_deduction
784	Can change others_ deduction	165	change_others_deduction
785	Can delete others_ deduction	165	delete_others_deduction
786	Can view others_ deduction	165	view_others_deduction
787	Can add pay_ bill	166	add_pay_bill
788	Can change pay_ bill	166	change_pay_bill
789	Can delete pay_ bill	166	delete_pay_bill
790	Can view pay_ bill	166	view_pay_bill
791	Can add holyday_ type	167	add_holyday_type
792	Can change holyday_ type	167	change_holyday_type
793	Can delete holyday_ type	167	delete_holyday_type
794	Can view holyday_ type	167	view_holyday_type
795	Can add bank_ info	168	add_bank_info
796	Can change bank_ info	168	change_bank_info
797	Can delete bank_ info	168	delete_bank_info
798	Can view bank_ info	168	view_bank_info
799	Can add salary_ scale	169	add_salary_scale
800	Can change salary_ scale	169	change_salary_scale
801	Can delete salary_ scale	169	delete_salary_scale
802	Can view salary_ scale	169	view_salary_scale
803	Can add employee_ designation	170	add_employee_designation
804	Can change employee_ designation	170	change_employee_designation
805	Can delete employee_ designation	170	delete_employee_designation
806	Can view employee_ designation	170	view_employee_designation
807	Can add employee_ document	171	add_employee_document
808	Can change employee_ document	171	change_employee_document
809	Can delete employee_ document	171	delete_employee_document
810	Can view employee_ document	171	view_employee_document
811	Can add holyday_ info	172	add_holyday_info
812	Can change holyday_ info	172	change_holyday_info
813	Can delete holyday_ info	172	delete_holyday_info
814	Can view holyday_ info	172	view_holyday_info
815	Can add department_ info	173	add_department_info
816	Can change department_ info	173	change_department_info
817	Can delete department_ info	173	delete_department_info
818	Can view department_ info	173	view_department_info
819	Can add allowance_ payment	174	add_allowance_payment
820	Can change allowance_ payment	174	change_allowance_payment
821	Can delete allowance_ payment	174	delete_allowance_payment
822	Can view allowance_ payment	174	view_allowance_payment
823	Can add advance_ salary	175	add_advance_salary
824	Can change advance_ salary	175	change_advance_salary
825	Can delete advance_ salary	175	delete_advance_salary
826	Can view advance_ salary	175	view_advance_salary
827	Can add employee_ holyday	176	add_employee_holyday
828	Can change employee_ holyday	176	change_employee_holyday
829	Can delete employee_ holyday	176	delete_employee_holyday
830	Can view employee_ holyday	176	view_employee_holyday
831	Can add attendance_ card_ log	177	add_attendance_card_log
832	Can change attendance_ card_ log	177	change_attendance_card_log
833	Can delete attendance_ card_ log	177	delete_attendance_card_log
834	Can view attendance_ card_ log	177	view_attendance_card_log
835	Can add shift_ info	178	add_shift_info
836	Can change shift_ info	178	change_shift_info
837	Can delete shift_ info	178	delete_shift_info
838	Can view shift_ info	178	view_shift_info
839	Can add leave_ info	179	add_leave_info
840	Can change leave_ info	179	change_leave_info
841	Can delete leave_ info	179	delete_leave_info
842	Can view leave_ info	179	view_leave_info
843	Can add employment_ type	180	add_employment_type
844	Can change employment_ type	180	change_employment_type
845	Can delete employment_ type	180	delete_employment_type
846	Can view employment_ type	180	view_employment_type
847	Can add attendance_ log	181	add_attendance_log
848	Can change attendance_ log	181	change_attendance_log
849	Can delete attendance_ log	181	delete_attendance_log
850	Can view attendance_ log	181	view_attendance_log
851	Can add attendance_ schedule	182	add_attendance_schedule
852	Can change attendance_ schedule	182	change_attendance_schedule
853	Can delete attendance_ schedule	182	delete_attendance_schedule
854	Can view attendance_ schedule	182	view_attendance_schedule
855	Can add employee_ experience	183	add_employee_experience
856	Can change employee_ experience	183	change_employee_experience
857	Can delete employee_ experience	183	delete_employee_experience
858	Can view employee_ experience	183	view_employee_experience
859	Can add employee_ document_ type	184	add_employee_document_type
860	Can change employee_ document_ type	184	change_employee_document_type
861	Can delete employee_ document_ type	184	delete_employee_document_type
862	Can view employee_ document_ type	184	view_employee_document_type
863	Can add business_ unit	185	add_business_unit
864	Can change business_ unit	185	change_business_unit
865	Can delete business_ unit	185	delete_business_unit
866	Can view business_ unit	185	view_business_unit
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
2	pbkdf2_sha256$180000$TOMBejySBhXa$4gm4JWMQ2heu6mQjE5m6DYdB+fJkOGd8TnBIGbYJsbA=	2021-05-26 06:09:30.958581-07	f	01749195756		Mohammad Rajib Pradhan	False	f	t	2021-05-26 06:08:47.356661-07
1	pbkdf2_sha256$216000$p6TY7tqKOfsf$Ryij/4jjb4tXUMSlWLe+/BqXRtrFve+ZBKiHJ9d71aw=	2021-08-29 21:56:26.393227-07	t	Admin				t	t	2021-05-19 08:31:41-07
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: delar_application_settings; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_application_settings (id, sales_price_editable, sales_discount_rate_editable, sales_discount_amount_editable) FROM stdin;
1	t	t	t
\.


--
-- Data for Name: delar_center; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_center (branch_code, center_code, branch_center_code, center_name, center_referred_by, center_address, center_open_date, center_phone_number, center_day, center_status, center_close_by, center_closure_date, center_search_text, app_user_id, app_data_time, center_employee_id, center_region_id) FROM stdin;
100	4000001	0001	Kararchar	Rajib	Kararchar	2021-05-19	01749195756	0	A		\N		Admin	2021-05-19 09:35:56.686607-07	1000000	\N
\.


--
-- Data for Name: delar_client_center_trf_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_client_center_trf_hist (id, client_id, old_center_code, new_center_code, app_data_time) FROM stdin;
1	00000001	4000001	4000001	2021-06-10 02:26:27.237-07
2	00000007	4000001	4000001	2021-08-15 23:12:22.294284-07
3	00000004	4000001	4000001	2021-08-20 23:03:51.832955-07
\.


--
-- Data for Name: delar_clients_inventory_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_clients_inventory_hist (id, branch_code, client_id, product_id, inv_balance_date, product_total_stock, total_order_quantity, product_total_sales, total_stock_return, total_sales_return, product_total_damage, product_available_stock, product_purchase_rate, total_purchase_amount, total_purchase_balance, total_sales_amount, total_sales_balance, stock_return_amount, sales_return_amount, total_damage_amount, cost_of_good_sold, cost_of_good_sold_balance, total_discount_receive, total_discount_pay, app_user_id, app_data_time, packet_payment_value, packet_receive_value, total_packet_payment, total_packet_receive) FROM stdin;
\.


--
-- Data for Name: delar_clients_inventory_status; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_clients_inventory_status (id, branch_code, client_id, product_id, product_total_stock, total_order_quantity, product_total_sales, total_stock_return, total_sales_return, product_total_damage, product_available_stock, product_purchase_rate, last_stock_date, last_order_date, last_sale_date, last_stock_return_date, last_sales_return_date, last_damage_date, inv_balance_upto_date, total_purchase_amount, total_sales_amount, stock_return_amount, sales_return_amount, total_damage_amount, damage_receive_amount, cost_of_good_sold, total_discount_receive, total_discount_pay, app_user_id, app_data_time, packet_payment_value, packet_receive_value, total_packet_payment, total_packet_receive) FROM stdin;
\.


--
-- Data for Name: delar_clients_security_info; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_clients_security_info (id, branch_code, client_id, phone_number, credit_limit, tin_number, trade_licence_number, guarantor_number, cheque_number, cheque_amount, cheque_date, bank_name, branch_name, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: delar_employee_center_permit; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_employee_center_permit (id, branch_code, employee_id, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: delar_products_packet_mapping; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_products_packet_mapping (id, product_id, packet_product_id, quantity_ratio, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: delar_sales_return_packet; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_sales_return_packet (id, branch_code, client_id, product_id, return_invoice, return_date, tran_type_code, tran_batch_number, receive_quantity, receive_value, status, app_user_id, app_data_time, employee_id) FROM stdin;
24	100	00000008	000003	4000025	2021-08-23	CS	0	2	28.00	N	Admin	2021-08-23 00:12:34.828919-07	\N
25	100	00000003	000006	4000026	2021-08-23	CS	0	3	18000.00	N	Admin	2021-08-23 00:14:25.438446-07	\N
26	100	00000004	000005	4000027	2021-08-23	CS	0	12	360.00	N	Admin	2021-08-23 00:14:36.819144-07	\N
27	100	00000006	000004	4000028	2021-08-23	CS	0	3	75.00	N	Admin	2021-08-23 00:14:51.578275-07	\N
28	100	00000003	000008	4000029	2021-08-26	CS	0	3	90.00	N	Admin	2021-08-26 02:31:44.532727-07	\N
29	100	00000003	000006	4000030	2021-08-26	CS	0	2	12000.00	N	Admin	2021-08-26 03:37:32.803197-07	\N
30	100	00000003	000006	4000031	2021-08-27	CS	0	2	12000.00	N	Admin	2021-08-27 04:06:54.556836-07	\N
31	100	00000005	000005	4000032	2021-08-27	CS	0	2	60.00	N	Admin	2021-08-27 04:10:23.673436-07	1000000
32	100	00000003	000004	4000033	2021-08-28	CS	0	2	50.00	N	Admin	2021-08-27 23:38:24.506585-07	1000000
33	100	00000003	000006	4000034	2021-08-28	CS	0	1	6000.00	N	Admin	2021-08-28 03:45:04.887444-07	000001
\.


--
-- Data for Name: delar_srstage_details; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_srstage_details (id, branch_code, employee_id, invoice_number, invoice_date, product_id, product_price, quantity, return_quantity, sales_quantity, sales_amount, sales_discount_amount, total_price, profit_amount, discount_rate, discount_amount, status, comments, app_user_id, app_data_time) FROM stdin;
61	100	1000000	SR00000026	2021-08-30	000006	8000.00	6	\N	0	0.00	0.00	48000.00	0.00	0.00	0.00	I		Admin	2021-08-29 21:56:13.395951-07
\.


--
-- Data for Name: delar_srstage_details_temp; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_srstage_details_temp (id, employee_id, invoice_number, product_id, product_model, product_name, product_bar_code, product_price, quantity, total_price, profit_amount, discount_rate, discount_amount, status, comments, app_user_id, app_data_time, details_branch_code, sales_account_number, serial_no, service_card_no, service_end_date, service_start_date, service_type) FROM stdin;
\.


--
-- Data for Name: delar_srstage_inventory_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_srstage_inventory_hist (id, branch_code, employee_id, product_id, inv_balance_date, product_total_stock, total_order_quantity, product_total_sales, total_stock_return, total_sales_return, product_total_damage, product_available_stock, product_purchase_rate, total_purchase_amount, total_purchase_balance, total_sales_amount, total_sales_balance, stock_return_amount, sales_return_amount, total_damage_amount, cost_of_good_sold, cost_of_good_sold_balance, total_discount_receive, total_discount_pay, app_user_id, app_data_time, packet_payment_value, packet_receive_value, total_packet_payment, total_packet_receive) FROM stdin;
\.


--
-- Data for Name: delar_srstage_inventory_status; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_srstage_inventory_status (id, branch_code, employee_id, product_id, product_total_stock, total_order_quantity, product_total_sales, total_stock_return, total_sales_return, product_total_damage, product_available_stock, product_purchase_rate, last_stock_date, last_order_date, last_sale_date, last_stock_return_date, last_sales_return_date, last_damage_date, inv_balance_upto_date, total_purchase_amount, total_sales_amount, stock_return_amount, sales_return_amount, total_damage_amount, damage_receive_amount, cost_of_good_sold, total_discount_receive, total_discount_pay, app_user_id, app_data_time, packet_payment_value, packet_receive_value, total_packet_payment, total_packet_receive) FROM stdin;
46	100	1000000	000006	6	0	0	0	0	0	6	0.00	2021-08-30	\N	\N	\N	\N	\N	2021-08-29	48000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	Admin	2021-08-29 21:56:13.395951-07	0.00	0.00	0	0
\.


--
-- Data for Name: delar_srstage_inventory_sum; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_srstage_inventory_sum (id, employee_id, product_total_stock, total_order_quantity, product_total_sales, total_stock_return, total_sales_return, product_total_damage, product_available_stock, total_packet_receive, total_packet_payment, total_purchase_amount, total_sales_amount, total_return_amount, stock_return_amount, sales_return_amount, cost_of_good_sold, total_discount_receive, total_discount_pay, packet_receive_value, packet_payment_value, app_user_id, app_data_time, total_damage_amount) FROM stdin;
\.


--
-- Data for Name: delar_srstage_master; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_srstage_master (id, branch_code, invoice_number, invoice_date, employee_id, total_quantity, returned_quantity, total_sales_quantity, total_sales_amount, total_sales_discount_amount, total_bill_amount, bill_amount, pay_amount, due_amount, advance_pay, status, invoice_comments, app_user_id, app_data_time) FROM stdin;
27	100	SR00000026	2021-08-30	1000000	6	0	0	0.00	0.00	48000.00	48000.00	0.00	0.00	0.00	S	NA	Admin	2021-08-29 21:56:13.395951-07
\.


--
-- Data for Name: delar_stock_return_packet; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.delar_stock_return_packet (id, branch_code, supplier_id, product_id, return_invoice, return_date, tran_type_code, tran_batch_number, payment_quantity, payment_value, status, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2021-05-24 05:09:42.517907-07	1	EMI_Settings object (1)	1	[{"added": {}}]	69	1
2	2021-05-24 05:16:52.778243-07	1	EMI_Settings object (1)	2	[{"changed": {"fields": ["Emi fee auto"]}}]	69	1
3	2021-05-24 05:17:09.549533-07	1	EMI_Settings object (1)	2	[{"changed": {"fields": ["Emi fee auto"]}}]	69	1
4	2021-05-25 01:20:38.114661-07	1	Application_Settings object (1)	1	[{"added": {}}]	119	1
5	2021-05-25 04:48:17.426254-07	1	EMI_Settings object (1)	2	[{"changed": {"fields": ["Emi profit receivable"]}}]	69	1
6	2021-05-26 05:45:11.117161-07	1	Peart Technology Limited >> +8801671103360	1	[{"added": {}}]	128	1
7	2021-06-11 02:56:49.49675-07	1	http://distributor.pearttechnology.com	2	[{"changed": {"fields": ["Report url", "Company info report"]}}]	18	1
8	2021-06-26 03:34:11.324521-07	1	Admin	2	[{"changed": {"fields": ["User permissions"]}}]	4	1
9	2021-06-26 03:36:28.991707-07	1	Admin	2	[{"changed": {"fields": ["User permissions"]}}]	4	1
10	2021-07-06 10:45:37.055003-07	9999999999999	Accounts_Balance object (9999999999999)	1	[{"added": {}}]	31	1
11	2021-07-06 10:47:25.440648-07	1	Peart Technology Limited	2	[{"changed": {"fields": ["Invoice file name"]}}]	63	1
12	2021-07-10 04:04:07.202007-07	1	http://localhost:9000	2	[{"changed": {"fields": ["Report url", "Company info report"]}}]	18	1
13	2021-07-10 04:05:30.273542-07	1	http://localhost:9000/	2	[{"changed": {"fields": ["Report url", "Company info report"]}}]	18	1
14	2021-07-10 04:07:35.413659-07	1	http://localhost:8000	2	[{"changed": {"fields": ["Report url"]}}]	18	1
15	2021-07-10 04:07:50.589119-07	1	http://localhost:8000	2	[{"changed": {"fields": ["Company info report"]}}]	18	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	appauth	application_log
8	appauth	branch
9	appauth	dashboard_matrix
10	appauth	employees
11	appauth	eodsod_process_list
12	appauth	global_parameters
13	appauth	holiday_list
14	appauth	inventory_number
15	appauth	loc_country
16	appauth	loc_district
17	appauth	query_table
18	appauth	report_configuration
19	appauth	report_parameter
20	appauth	report_parameter_mapping
21	appauth	report_table_group
22	appauth	report_table_tabular
23	appauth	user_settings
24	appauth	loc_upazila
25	appauth	loc_union
26	appauth	loc_region
27	appauth	loc_division
28	appauth	eodsod_process
29	finance	account_charges
30	finance	account_type
31	finance	accounts_balance
32	finance	application_settings
33	finance	cash_transaction
34	finance	client_type
35	finance	deposit_payment
36	finance	deposit_receive
37	finance	document_register
38	finance	general_ledger
39	finance	ledger_balance_hist
40	finance	ledger_balmon_hist
41	finance	ledger_report_balance
42	finance	ledger_report_param
43	finance	tran_telbal_details
44	finance	transaction_details
45	finance	transaction_ibr
46	finance	transaction_master
47	finance	transaction_table
48	finance	transaction_telbal
49	finance	transfer_tran
50	finance	transaction_type
51	finance	ledger_transaction_type
52	finance	ledger_receipt_payment
53	finance	ledger_balance
54	finance	client_account_mapping
55	finance	charges
56	finance	cash_and_bank_ledger
57	finance	accounts_balmon_hist
58	finance	accounts_balance_hist
59	sales	ecom_delivery_address
60	sales	ecom_order_master
61	sales	user_chart
62	sales	all_trandtl
63	sales	application_settings
64	sales	client_balance
65	sales	client_id_changes_hist
66	sales	clients
67	sales	emi_history
68	sales	emi_receive
69	sales	emi_settings
70	sales	emi_setup
71	sales	fees_history
72	sales	order_details
73	sales	order_master
74	sales	product_damage_details
75	sales	product_offer_list
76	sales	product_offer_package
77	sales	product_price_list
78	sales	products
79	sales	products_brand
80	sales	products_group
81	sales	products_inventory_hist
82	sales	products_inventory_status
83	sales	products_price_type
84	sales	sales_details
85	sales	sales_details_temp
86	sales	sales_master
87	sales	sales_return_details
88	sales	showroom
89	sales	stock_return_details
90	sales	stockdetails
91	sales	stockmaster
92	sales	stockmasterauthq
93	sales	stockpaymentdetails
94	sales	supplier_information
95	sales	stockdetailstemp
96	sales	nominee_information
97	sales	delar_security_info
98	sales	client_profit_history
99	sales	client_photo_sign
100	delar	center_admin
101	delar	clients_inventory_hist
102	delar	clients_inventory_status
103	delar	clients_security_info
104	delar	employee_center_permit
105	delar	products_packet_mapping
106	delar	sales_return_packet
107	delar	srstage_details
108	delar	srstage_details_temp
109	delar	srstage_inventory_hist
110	delar	srstage_inventory_status
111	delar	srstage_inventory_sum
112	delar	srstage_master
113	delar	stock_return_packet
114	delar	center
115	AppAuth	AppAuth
116	Finance	Finance
117	Sales	Sales
118	Delar	Delar
119	delar	application_settings
120	ecom	ecom_delivery_address
121	ecom	ecom_order_master
122	ecom	ecom_products
123	ecom	product_images
124	ecom	user_chart
125	ecom	ecom_slider
126	ecom	pagemodel
127	ecom	products_brand
128	ecom	application_settings
129	ecom	delivery_address
130	ecom	order_details
131	ecom	product_categories
132	ecom	product_sub_categories
133	ecom	user_coupon
134	ecom	web_user_info
135	ecom	user_profile
136	ecom	products
137	ecom	product_group_list
138	ecom	order_master
139	ecom	ecom_product_categories
140	ecom	ecom_product_sub_categories
141	finance	deposit_closing
142	finance	led_rec_pay_bal_hist
143	finance	led_rec_pay_balmon_hist
144	sales	client_closing
145	delar	client_center_trf_hist
146	finance	deposit_transfer
147	sales	purchase_bill
148	sales	purchase_order_dtl_temp
149	sales	purchase_order_mst
150	sales	purchase_order_dtl
151	sales	purchasemasterauthq
152	sales	stock_quantity_transfer
153	hrm	education_degree
154	hrm	salary_sheet
155	hrm	company_office
156	hrm	extra_allowance
157	hrm	salary_scale_details
158	hrm	salary_scale_bonous
159	hrm	leave_application
160	hrm	employee_training
161	hrm	employee_details
162	hrm	shift_info_hist
163	hrm	employee_nominee
164	hrm	company_information
165	hrm	others_deduction
166	hrm	pay_bill
167	hrm	holyday_type
168	hrm	bank_info
169	hrm	salary_scale
170	hrm	employee_designation
171	hrm	employee_document
172	hrm	holyday_info
173	hrm	department_info
174	hrm	allowance_payment
175	hrm	advance_salary
176	hrm	employee_holyday
177	hrm	attendance_card_log
178	hrm	shift_info
179	hrm	leave_info
180	hrm	employment_type
181	hrm	attendance_log
182	hrm	attendance_schedule
183	hrm	employee_experience
184	hrm	employee_document_type
185	hrm	business_unit
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2021-05-19 08:31:14.485641-07
2	auth	0001_initial	2021-05-19 08:31:14.548619-07
3	admin	0001_initial	2021-05-19 08:31:14.636534-07
4	admin	0002_logentry_remove_auto_add	2021-05-19 08:31:14.659226-07
5	admin	0003_logentry_add_action_flag_choices	2021-05-19 08:31:14.669331-07
6	appauth	0001_initial	2021-05-19 08:31:14.968846-07
7	contenttypes	0002_remove_content_type_name	2021-05-19 08:31:15.141193-07
8	auth	0002_alter_permission_name_max_length	2021-05-19 08:31:15.150331-07
9	auth	0003_alter_user_email_max_length	2021-05-19 08:31:15.162773-07
10	auth	0004_alter_user_username_opts	2021-05-19 08:31:15.175202-07
11	auth	0005_alter_user_last_login_null	2021-05-19 08:31:15.187294-07
12	auth	0006_require_contenttypes_0002	2021-05-19 08:31:15.190285-07
13	auth	0007_alter_validators_add_error_messages	2021-05-19 08:31:15.203147-07
14	auth	0008_alter_user_username_max_length	2021-05-19 08:31:15.223194-07
15	auth	0009_alter_user_last_name_max_length	2021-05-19 08:31:15.238435-07
16	auth	0010_alter_group_name_max_length	2021-05-19 08:31:15.250286-07
17	auth	0011_update_proxy_permissions	2021-05-19 08:31:15.279026-07
18	delar	0001_initial	2021-05-19 08:31:15.45022-07
19	finance	0001_initial	2021-05-19 08:31:16.064594-07
20	sales	0001_initial	2021-05-19 08:31:16.951593-07
21	sessions	0001_initial	2021-05-19 08:31:17.061503-07
22	delar	0002_auto_20210519_2218	2021-05-19 09:18:28.250494-07
23	delar	0003_auto_20210525_1420	2021-05-25 01:20:20.545049-07
24	delar	0004_auto_20210525_1558	2021-05-25 02:58:28.736046-07
25	delar	0005_auto_20210525_1614	2021-05-25 03:14:26.900888-07
26	delar	0006_srstage_inventory_sum_inv_balance_upto_date	2021-05-25 03:16:13.140927-07
27	delar	0007_remove_srstage_inventory_sum_inv_balance_upto_date	2021-05-26 02:01:50.903328-07
29	ecom	0001_initial	2021-05-26 05:30:17.840532-07
30	ecom	0002_auto_20210526_1853	2021-05-26 05:53:58.78328-07
31	ecom	0002_ecom_slider_pagemodel	2021-05-26 05:57:35.317674-07
32	ecom	0003_auto_20210526_1900	2021-05-26 06:00:21.443154-07
33	ecom	0004_ecom_slider_pagemodel	2021-05-26 06:00:32.292007-07
34	appauth	0002_auto_20210609_2317	2021-06-09 10:17:21.585091-07
35	ecom	0002_auto_20210609_2317	2021-06-09 10:17:21.614021-07
36	finance	0002_auto_20210609_2317	2021-06-09 10:17:21.890886-07
37	ecom	0003_auto_20210610_1522	2021-06-10 02:22:47.73061-07
38	sales	0002_auto_20210610_1522	2021-06-10 02:22:47.806172-07
39	delar	0008_client_center_trf_hist	2021-06-10 02:26:21.006013-07
40	sales	0003_products_inventory_status_is_balance_updated	2021-06-10 02:37:43.648606-07
41	finance	0003_auto_20210706_2322	2021-07-06 10:22:29.872291-07
42	sales	0004_auto_20210706_2322	2021-07-06 10:22:29.895534-07
43	sales	0005_supplier_information_joining_date	2021-07-06 10:28:43.184255-07
44	auth	0012_alter_user_first_name_max_length	2021-07-10 21:42:04.324156-07
45	sales	0006_purchase_bill_purchase_order_dtl_temp_purchase_order_mst	2021-07-11 02:41:39.917817-07
46	sales	0007_auto_20210712_1451	2021-07-12 01:51:39.274322-07
47	sales	0008_purchase_bill_purchase_order_dtl_temp_purchase_order_mst	2021-07-12 01:52:44.135275-07
48	sales	0009_purchase_order_dtl_temp_branch_code	2021-07-12 02:00:14.120066-07
49	sales	0010_auto_20210713_1522	2021-07-13 04:19:05.555231-07
50	sales	0011_auto_20210713_1718	2021-07-13 04:19:05.800188-07
51	sales	0012_purchase_order_mst_discount_amount	2021-07-14 21:51:28.66981-07
52	sales	0013_purchase_order_dtl_temp_discount_amount	2021-07-14 21:55:46.592067-07
53	sales	0014_purchase_order_dtl_purchasemasterauthq	2021-08-12 03:11:18.905692-07
54	sales	0015_auto_20210729_1336	2021-08-12 03:11:19.297336-07
55	sales	0016_auto_20210729_1341	2021-08-12 03:11:19.33324-07
56	sales	0017_auto_20210730_1029	2021-08-12 03:11:19.358728-07
57	sales	0018_auto_20210730_1032	2021-08-12 03:11:19.379204-07
58	sales	0019_remove_purchase_order_dtl_app_data_time	2021-08-12 03:11:19.389525-07
59	sales	0020_auto_20210730_1037	2021-08-12 03:11:19.406412-07
60	sales	0021_auto_20210730_1102	2021-08-12 03:11:19.498337-07
61	sales	0022_purchase_order_dtl_status	2021-08-12 03:11:19.555186-07
62	sales	0023_stock_quantity_transfer	2021-08-12 03:11:19.583111-07
63	sales	0024_auto_20210806_2315	2021-08-12 03:11:19.919279-07
64	sales	0025_auto_20210807_1111	2021-08-12 03:11:20.2681-07
65	sales	0026_auto_20210807_1117	2021-08-12 03:11:20.410111-07
66	sales	0027_auto_20210807_1138	2021-08-12 03:11:20.473878-07
67	sales	0028_order_master_delivary_date	2021-08-13 23:35:29.535288-07
68	hrm	0001_initial	2021-08-14 23:55:23.905251-07
69	appauth	0003_remove_employees_employee_designation	2021-08-15 22:34:54.226267-07
70	appauth	0004_employees_employee_designation	2021-08-15 22:43:45.103317-07
71	hrm	0002_salary_sheet_sales_comission	2021-08-19 21:54:09.572496-07
72	hrm	0003_auto_20210820_1144	2021-08-19 22:44:19.354193-07
73	hrm	0004_auto_20210820_1145	2021-08-19 22:45:33.232404-07
74	hrm	0005_auto_20210820_1242	2021-08-19 23:42:18.585226-07
75	hrm	0006_auto_20210821_1535	2021-08-21 02:35:46.915846-07
76	hrm	0007_auto_20210821_1541	2021-08-21 02:41:49.01677-07
77	delar	0009_sales_return_packet_employee_id	2021-08-27 03:54:23.126288-07
78	sales	0029_auto_20210828_1140	2021-08-27 22:41:04.497572-07
79	sales	0030_auto_20210828_1224	2021-08-27 23:25:12.167292-07
80	sales	0031_auto_20210828_1225	2021-08-27 23:25:12.198539-07
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
4x580vd62lpphsrwlkbgtiovgxukzao2	NTIwMGEyNzRiY2E2OWMzMGM2ZDRiZTc1MjE5ODJkMmE2ZjFmMTRkZjp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJmZWQwNzRlMTY2ZjQ1NWEzN2QyN2IxODQ0YzE3OTVmNWE4YmZhOWRjIiwid2VidXNlcl9waG9uZSI6IjAxNzQ5MTk1NzU2Iiwid2VidXNlcl9uYW1lIjoiTW9oYW1tYWQgUmFqaWIgUHJhZGhhbiIsInVzZXJfZnVsbF9uYW1lIjoiIE1vaGFtbWFkIFJhamliIFByYWRoYW4ifQ==	2021-06-09 06:08:47.800471-07
v9hfzwmtw1wq337fh480f99j86fo5nuw	ZDIyYjQ1YmY5Y2VmNTRjMWE4ZGE1NGIzZDIwZDZkOTFhYzVkNGVkYTp7ImFwcF91c2VyX2lkIjoiMDE3NDkxOTU3NTYiLCJ3ZWJ1c2VyX3Bob25lIjoiMDE3NDkxOTU3NTYiLCJ3ZWJ1c2VyX25hbWUiOiJNb2hhbW1hZCBSYWppYiBQcmFkaGFuIiwidXNlcl9mdWxsX25hbWUiOiIgTW9oYW1tYWQgUmFqaWIgUHJhZGhhbiIsIl9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJmZWQwNzRlMTY2ZjQ1NWEzN2QyN2IxODQ0YzE3OTVmNWE4YmZhOWRjIn0=	2021-06-09 06:09:30.918685-07
ezfu5q65l9etyqjb7t1r9kz9eon77jd3	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-06-09 06:10:14.219644-07
2qaaljpdzuoyea58mctydf582qwkfhwt	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-06-23 11:06:59.142297-07
0tfkgh468mhs5pseb6kvblyl7ti5raaa	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-06-24 02:19:09.331543-07
vtvzkxn3rp6ux5ah9r6cakwhjsb68vvd	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-06-25 02:55:12.240241-07
nojyzrligu0vbzk7dh5e1p2mb9w87yz0	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-06-25 03:39:14.416344-07
qfoz1onfd1ixkwanhom04hlxafdxdx90	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-06-25 22:30:53.587529-07
em9j835v5lcuapmnj8d31d58d15jykgg	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-06-26 02:25:02.716418-07
tw80dxacykw9rzrh9w2t337qu6chv7nq	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-07-03 05:41:06.465197-07
2kl3n87njs7kkj9vxmiv3fh8tjca5404	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-07-04 04:40:50.69325-07
4nqvbrnj1d85sk9dzl5oo0od9vrk2839	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-07-05 02:49:42.935524-07
hhotud1vivkii0w8mgitt6sd8hhoffek	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-07-07 01:47:26.180292-07
0o1p7ylo59e1zr5co7rm5aamxjkivf13	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-07-10 03:57:11.580701-07
3m6wzmpo6zcl60nkgfkuho48i6clyxuf	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-07-10 06:39:20.834232-07
7sjk37quz4ajw0yp4lxugzcvxspue8ae	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-07-11 05:37:31.511162-07
ebm5mjgjtm7vm8m9cna74m5xs20r6jvg	NTE2ODJiN2VmYWEwNjExODEyODIxNTI2NzA2OGI0ZjI1MDQzNWViMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6IlkifQ==	2021-07-12 10:28:46.876618-07
q12m7zyxnvh9q48lsodjp7jqsd2vc7g3	Mzk4NGNmMmIzMjI5OWU1OTM1ZDYwMGMxMDQ3MzRjMDRiNGZjY2I3ZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6Ik4ifQ==	2021-07-20 10:44:27.314784-07
e2qi7itp1khbchzxn42fpbhfqfvdygqo	Mzk4NGNmMmIzMjI5OWU1OTM1ZDYwMGMxMDQ3MzRjMDRiNGZjY2I3ZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOTRlMGY5Y2QzNDgxMGE1MTg2OGI4MjQ0OGIwNDU4NTdjYjQ2MDAxIiwidXNlcl9mdWxsX25hbWUiOiIgIiwiYXBwX3VzZXJfaWQiOiJBZG1pbiIsImFwcGxpY2F0aW9uX3RpdGxlIjoiUGVhcnQgVGVjaG5vbG9neSBMaW1pdGVkIiwiYnJhbmNoX2NvZGUiOjEwMCwiaXNfaGVhZF9vZmZpY2VfdXNlciI6Ik4ifQ==	2021-07-21 09:14:10.673405-07
reui0hwazf4rb9nvufacxyg848srvgf4	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1m2Aq4:Vjh28ISyhmiL6WrrJ3_ArAGCNH_D51GifUzSd6kmBVU	2021-07-24 04:08:04.101473-07
99nyc5tn3knvxpq0o9j2j74tbsxgx9hu	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1m2Raz:CatMKj8tAplUfEOKfIds5SnhRcxhVeYEqVvIKsDb7bY	2021-07-24 22:01:37.827661-07
ky9uwx81e8anl180fc1rvjfw3ynhpqhy	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1m2RdG:YZL9c82CajtsMv1TtAm0bsYHbgCOcWpaa7cIWNwEhII	2021-07-24 22:03:58.675768-07
2tf2ojg9g34vc59541dhjl2505pi3rc2	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1m39wn:y5hUOBvJIMFGIMvLOxxn60HQnGtMARTOW__rpne5STQ	2021-07-26 21:23:05.454695-07
ivzzzzhz0bv1uhoo4jacvymn3rwt4qu5	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1m3sfK:XtFX48l9i6Hh0t3ugm9HRA2f-arHDOxPf2GRNqdmops	2021-07-28 21:08:02.801964-07
ef2adjky5r0r5wap8lur1kvul05cegw4	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mE7bC:im8YTLJy7wdfOEgUg5X5Fz9WCFRDVkqAjl9YlVAmdKg	2021-08-26 03:06:06.779068-07
49pva1gw0pe1hgrq0djesgc4766kwxl9	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mEP6t:xYbKvQUU5tM-_XcV6DmM2Sgsw-i2s-Ue9BIyajsQJvM	2021-08-26 21:47:59.801583-07
sphdixzh8eo5qn22te4er29q66njaze2	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mElwk:kG6rv5aawmm8Y-COcwDh3zXdFeiIMOBJmTATdTNskds	2021-08-27 22:11:02.960102-07
c6jerg9e1qx5e0b8tc2mcqe4uxzazfqb	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mEnIk:hNu7MzdXm610ddJMt5frYTAkY39uoGikZeXozltFuOw	2021-08-27 23:37:50.680782-07
hin0i9uvl105d2mni29mp4e9lwlnd5m7	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mErHf:uNIzn01oxVkBQZlJoajJyJW-16OpW72oE3jvNmDhPAs	2021-08-28 03:52:59.430466-07
81wwamjttrs951ydj9vo5r01w7g6i0go	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mEsxl:St4yVikSCRVqecKNvesOdOsgZl5N5BO88TUthp5X_zE	2021-08-28 05:40:33.243912-07
o641huggzxvwe5r93o0wg5zld0jwdvqu	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mEtkB:m85d1rqJ41cbGLpdeAtIQ1iCj1z7AXtMg5fB5ubvT7o	2021-08-28 06:30:35.486113-07
6a12ug4lpalrl6w2gcyd96bm9viysdkw	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mF8yS:JZMld9hBcfPAOKjxhthw2liIsvmBl7QdmaixNCS2Pvs	2021-08-28 22:46:20.851925-07
mb46qbuotlbl6urb36yp9rqvmostx7au	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mFCJs:IOdh__dyvmxpaNehgtgdFuW8ZIIihLiCT4sHRiHkKMw	2021-08-29 02:20:40.977532-07
mwn0snw5y1xv3icrr6i3evoez5mzfg42	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mFUl3:XV_-k4oCeOOj5ohyp6xRdQyZDukUOSd-hPLgiqAskPc	2021-08-29 22:01:57.37272-07
9gapsso6hquyv9oeid1yo6r1ez66pxw9	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mFaUf:AOOSEpe2B19otMQABz4vLnHHRkR59YzC8uqHIcdCFlw	2021-08-30 04:09:25.515437-07
zb8gztodswfc1ktppb0s6f6dmedkbiz0	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mFrC0:tZUhh6kKE1nW-n4p4pmaaTFlaxRy_Py7ZbXRvDeuA0U	2021-08-30 21:59:16.701702-07
5yinfdw3tve7hqdwlceyczroze1216cp	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mFxKr:OjSTlT9MZoNH0zR-nf2SLG2n1LFkipK8FpgYCLJQPjs	2021-08-31 04:32:49.266712-07
9zjwimp5lmxa67vcx4rzz1j1upo7sbsr	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mGZRy:KZrHp8WOqJhPM2KXHeXQljYD_5EKoIs6RlM2V0DKHYY	2021-09-01 21:14:42.817771-07
8vrv5f1szgsg4dlc53s96sbowdakvv5u	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mGvwu:W3LgZXTXWP2Jd5_IHdy1mvi8dk2FZ3lekn-46KkL12g	2021-09-02 21:16:08.860012-07
s6vp0g66b026s5vk9e9yo8v2qlkt8c8f	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mGvxb:ReGj4ey1eytFYwqR2dOtL-54FmpDwdfs7VIlOH4I6FU	2021-09-02 21:16:51.607477-07
j638wkeghzzbff5arm1izm6d0qfqbfbr	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mH32w:mM7NE12yrDEVdHfgdW1DWfjQTZqTGujLoePeNGG0npc	2021-09-03 04:50:50.851989-07
t1lxqmeo31fd3ysmghk4da61f374i33o	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mHIT7:cMSa0s28Mpb0c5T1R6ocHLf2WJwoSKD9llekwkCqzPY	2021-09-03 21:18:53.922456-07
f8l0jpn8m7040m7rqee1bhynys8vlofe	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mHK2J:PZSd5tilBWeq-mmyE_BHTj1rcL-LPqqlCa-pfCX6EN0	2021-09-03 22:59:19.138342-07
fmtfv0dsj4al5otf0gyw5ptnjs7vuxfs	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mHMxJ:A8d-utjlW50Snurl_mGwQK7MYxyV9pI_IGZz_9ZhGfQ	2021-09-04 02:06:21.228215-07
xa5mbnh53tctglmaj215xgpajph4f95n	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mHN23:KTHNN4U5Zimbh0CtrqkQnGWFDrARtP7nlBJsWlAD-ig	2021-09-04 02:11:15.767699-07
0lvlnicrjz5j2kqwib766s3sdj6og7rb	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mHN4r:bE7tlhBF2azN363JG-UTJ57Bb8O0GKNIdAVa0rSAkHc	2021-09-04 02:14:09.946485-07
s6ws0h3vn9aoy9x6vdg8f15miv5kp97c	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mHOFt:MMI23tJ60RdWnzgoW79V5yugaoHuJUpVTWi6KuPbUKo	2021-09-04 03:29:37.394594-07
pe3xv7lvp60fng74ygcpjbzcipim6zfx	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mHf2I:LMDRZfJPEXNjWZO72RU3jbN8mvWoqpTAKM59oBy8aFc	2021-09-04 21:24:42.945939-07
a6h10zlnt1z7nd1zkor4kmkee4ecrnja	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mHf2k:ODyakPuZyptHFGJBSfJd9XadH7TV9C3jT7Vc7QyeaoY	2021-09-04 21:25:10.910653-07
wkk8k1o1nvaflntizheyw1tpsa739n17	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mHhIJ:PXXsM_cYYp5yqcf4iNon5bR2h1wtPjIMXOj5S7Z0Y1M	2021-09-04 23:49:23.879465-07
if16fpct8wyys1n87bnfmsn3cvn9r2qy	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mI1OZ:4UdvJTBPIPdq-zqGXL8zXNkOTy4KmaTQRmaHkO8ZQB8	2021-09-05 21:17:11.521515-07
wwt0khgz0sltpb74cmu62nwmaqamcq9b	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mI1WD:1GGXGinxp8WZoVGI7gudUH5j2N33EWxD73v-BTsbQNo	2021-09-05 21:25:05.778904-07
vyr8rfadqx8el2or73uxos5b6j4dtmjp	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mI2nd:iEWKhZ9a0EGduLMMtD2yUFVjLbdoavVyxWMutfs4cfE	2021-09-05 22:47:09.509999-07
aubw2w54yhefay751ee8pphb1xosteu0	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mIl6e:aKxllCu6MWp112vW-8DxXehsS6iOC8pX_YAWNGnlEUQ	2021-09-07 22:05:44.819545-07
y942j65s1e02nxk6xp450ogc1dgs6uwz	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mIl7a:L24OTiQDGB2L-3q8fZTp-F1-2yT99uGiuE0DxgAgLek	2021-09-07 22:06:42.945337-07
1pt3s3l0ojsadlmi3ddfjmtf4oh6w3ml	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mIlIi:aL_m05y3_rukFBOa4X1TwEu3Ka8fjpTnQGUeTmCy60Y	2021-09-07 22:18:12.921211-07
gr3g17c6gkmjxqlrl8oq8981nzyjrclv	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJ6qH:l0KP3AX9ciZ78Vxt5hn9x55XC38FscVg7a_xsZvOX3A	2021-09-08 21:18:17.463675-07
3p2kplpuj60euculmndct7c5kva17aak	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJ6qh:4PHDEIqk4AHXfLKWbS826EAlw5WBK8QbQxCctVtPMS0	2021-09-08 21:18:43.823369-07
dclcefzvdpk4kixaq5cyfjanloo9ot84	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJBgv:EW6S-MWPCfHNxV94IzpGQZovYRgg6f_HAdwt9cdFVD0	2021-09-09 02:28:57.939403-07
mi3rawftqx9iz87nvus4wsam2owemkyc	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJTaN:cvDJikWwh5uqLissz52tYz_PR22CyXVjfr7OI4F4P6M	2021-09-09 21:35:23.932215-07
lyefag5tr1mkl27plmctlejop7a1mbu6	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJUYD:2IY-_ewVezi_azmuces2wcdQb9i7f47jMDitFpsAJDo	2021-09-09 22:37:13.499399-07
mxs75ndt67gmj2sb6metq9qtxvtd3x41	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJZBR:ktRqx6FCxGSwpYBmB-XxfUwBPuYXyNCnHC9xNDUJn7c	2021-09-10 03:34:01.713075-07
69f9aexsz40dprlnuupuvv9j9pnsbwz9	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJpcR:bJpPMJoKB-Ud8wZ5kUKFBn7BetQM7n9CnOCpG76-oAk	2021-09-10 21:06:59.307826-07
9a4w7eswzntgv9kdt34hdqxzwv65v8ii	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJrv0:C9vhsmb62qOifJvjnLiHJcaiCr__VMFRT4gkAh_9_9s	2021-09-10 23:34:18.207722-07
p5wu7hjblaxavnk9ohmpkgk8txzf1l6x	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJs0J:aCgqHRQNaKN20938YCkS3zsFmRzduLHL6aFKokTlszQ	2021-09-10 23:39:47.877636-07
g8o3oxvpx8m6kwae9rguxwwzqki96f3l	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJstK:rpS8IJTW0Lig5IwKxSFgF9yj8h4PvdZhgG1N7YqFHiM	2021-09-11 00:36:38.715531-07
msuewlda2za028p0spy2x41i2d6eelhe	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJt6V:DYAttK6-FPv5J4TNmb_x2iOehVNd62YPn9d05RGqN_o	2021-09-11 00:50:15.998261-07
uam9mpiclb91oqjvc38yw9qabls5spb8	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJv71:rrqnYXkfLxtB8roYbKPRHQcsB7PLTQuJw6MZeLfbci0	2021-09-11 02:58:55.487041-07
1zyaqwno8vwae29nj4p9evnewkc1fwww	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJvfQ:cW6vKpiF_najjiVH5HGtTnXuFkBwJSXnF-VUeVYLaII	2021-09-11 03:34:28.208374-07
pwx6xqf7tdde1367uufshgm0wr1af7ed	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mJwE7:cWhIefTBwPyp70XSC5xHG_EWr3hrFwiMbB6ALqfP58g	2021-09-11 04:10:19.54013-07
su00l7x373zg6gqwtmucqkzfu1uijul4	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mKCAt:ugqg8krrUE22kHB9qT0gSmVkBugO1QlsNHFPpRVhVpk	2021-09-11 21:12:03.153014-07
hbipxssh6hhd2vd3exdpvqabducrxah8	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mKCNO:e5oL1boCiMHH1cCJIztilMGk2qZOshNUbIcL5qGpuAw	2021-09-11 21:24:58.854689-07
gw3zxli9he3vh8b4a6ntvi374rx0eb1v	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mKCTM:ORFuGr1IUqRccZmkDlARVtVXFpdk6HsclGIc_yBB90c	2021-09-11 21:31:08.316824-07
goe9yob0p01g73scgs14dcpzv67rys0j	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mKYaw:9-ZPkBIMSrJ0JIOQyWxyIDqu1I7VVoJcJrCdSOwTMcI	2021-09-12 21:08:26.201077-07
k6o2pio3gytqasxh84xd40pxa3vlhka7	.eJxVj8FuwyAQRH_F4hxZEGwLcmvPbdVD72hhl0CKIbLxoar678VpDul1ZvbtzDczsNVgtpUWE5GdmGCHR82C-6S8G3iBfC69K7ku0fZ7pL-7a_9akNLzPfsPEGAN7VpbPnox-Qn04AfknFByO0lyetJ28KMiEoMaUR09ojwKqYQC1AK5kxJ9g95wfkvJZJipMbsmwvX6UP4J55j_1BQd1FiyqbGmPf1OsNTug1zIJZXzV_cS51hpr2sXyC4Y10awk-D8wOJqAgGa4n10dPvQEG_s5xdRHmYD:1mKZLO:SN5h9xKwdALY3Iy_ipyk2pIMnTxEzZO5wiuxvawX8UU	2021-09-12 21:56:26.411262-07
\.


--
-- Data for Name: ecom_application_settings; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_application_settings (id, application_title, support_phone, support_email, copyright_info, twitter_link, facebook_link, youtube_link, instagram_link, seo_keywords) FROM stdin;
1	Peart Technology Limited	+8801671103360	rajiboracledev@yahoo.com	Peart Technology Limited	#	https://web.facebook.com/pearttechnology	#	#	Bismillah Poltry, Shop, Ecommerce, Narsingdi, Bangladesh, Food
\.


--
-- Data for Name: ecom_delivery_address; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_delivery_address (id, customer, full_name, mobile, email, address_1, address_2, distric_id, upazilla_id, zip_code, use_count) FROM stdin;
1	01749195756	Mohammad Rajib Pradhan	01749195756	rajiboracledev@yahoo.com	Dhaka, Bangladesh		1	1	1205	1
\.


--
-- Data for Name: ecom_ecom_slider; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_ecom_slider (id, title, second_title, button_up_title, button_one_label, button_one_icon, button_one_url, button_two_label, button_two_icon, button_two_url, image, status, app_user_id, app_data_time) FROM stdin;
1	Welcome to Peart Technology Limited	Peart Technology Limited	\N	\N	\N	\N	\N	\N	\N	product_image/Welcome_to_Peart_Technology_Limited-781.png	1	Admin	2021-05-26 06:06:35.572394-07
\.


--
-- Data for Name: ecom_order_details; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_order_details (id, branch_code, order_number, product_id, serial_no, product_price, order_quantity, deliver_quantity, total_price, deliver_price, discount_rate, discount_amount, profit_amount, status, comments, app_user_id, app_data_time) FROM stdin;
1	100	0000000001	000001	0	6000.00	2	0	12000.00	12000.00	0.00	0.00	0.00	N	\N	01749195756	2021-05-26 06:09:58.241742-07
\.


--
-- Data for Name: ecom_order_master; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_order_master (branch_code, order_number, delivery_charge, order_date, customer_id, account_number, customer_name, customer_phone, customer_address, executive_phone, coupon_code, total_quantity, returned_quantity, bill_amount, discount_amount, payment_method, pay_amount, due_amount, advance_pay, status, order_comments, latitude, longitude, app_user_id, app_data_time, delivery_address_id) FROM stdin;
100	0000000001	7.00	2021-05-26 06:09:58.242739-07	01749195756	9999999999999	 Mohammad Rajib Pradhan	01749195756	\N	\N	0	2	0	12000.00	0.00	cash	0.00	0.00	0.00	N	\N	\N	\N	01749195756	2021-05-26 06:09:58.245768-07	1
\.


--
-- Data for Name: ecom_pagemodel; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_pagemodel (id, title, content, publish_status, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: ecom_product_categories; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_product_categories (categories_id, categories_name, image_class_name, status, app_user_id, app_data_time) FROM stdin;
CAT000001	Bakery	czi-bread	A	Admin	2021-05-26 05:32:43.028023-07
CAT000002	Electronic Device	czi-cheese	A	Admin	2021-05-26 05:34:00.276328-07
\.


--
-- Data for Name: ecom_product_group_list; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_product_group_list (group_id, group_name, status, app_user_id, app_data_time, categories_id, subcategories_id) FROM stdin;
\.


--
-- Data for Name: ecom_product_images; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_product_images (id, image, image_serial, app_user_id, app_data_time, product_id) FROM stdin;
\.


--
-- Data for Name: ecom_product_sub_categories; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_product_sub_categories (subcategories_id, subcategories_name, status, app_user_id, app_data_time, categories_id) FROM stdin;
SCT000001	Bread	A	Admin	2021-05-26 05:33:36.532358-07	CAT000001
SCT000002	Mobile Phone	A	Admin	2021-05-26 05:41:35.469673-07	CAT000002
\.


--
-- Data for Name: ecom_products; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_products (product_id, product_name, product_model, product_group, product_price, discount_amount, product_old_price, product_description, product_feature, product_specification, product_keyword, product_viewcount, app_user_id, app_data_time, category_id, product_brand_id, sub_category_id) FROM stdin;
000001	Mobile Phone	S10	\N	6000.00	0.00	0.00	<p><em><strong>Mobile Phone</strong></em></p>	\N	\N	\N	\N	Admin	2021-05-26 05:44:02.441546-07	CAT000002	0001	SCT000002
\.


--
-- Data for Name: ecom_user_chart; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_user_chart (id, product_id, product_name, product_model, product_group, product_quantity, product_price, discount_amount, product_old_price, total_bill_amount, product_photo1, product_description, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: ecom_user_coupon; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_user_coupon (webuser_phone, coupon_code, maximum_amount, maximum_pct, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: ecom_user_profile; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_user_profile (id, app_data_time, fname, lname, app_user_id_id) FROM stdin;
\.


--
-- Data for Name: ecom_web_user_info; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.ecom_web_user_info (webuser_phone, webuser_name, webuser_email, webuser_location1, webuser_location2, webuser_location3, webuser_current_address, app_data_time) FROM stdin;
\.


--
-- Data for Name: emp_sales_comission; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.emp_sales_comission (employee_id, sales_month, sales_quantity, total_price) FROM stdin;
1000000	MAY-2021	12	-191826374.00
\.


--
-- Data for Name: finance_account_charges; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_account_charges (id, charges_code, charges_name, account_number, charge_amount, charge_date, narration, tran_branch_code, tran_batch_number, tran_batch_date, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: finance_account_type; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_account_type (account_type_code, account_type_name, account_type_short_name, maximum_credit_limit, is_active, is_deleted, app_user_id, app_data_time, account_ledger_code, expense_ledger, income_ledger, payable_ledger, receivable_ledger) FROM stdin;
Customer	Customer Account	Customer	99999999999999.00	t	f	Admin	2021-05-05 02:31:44.808273-07	14000001	\N	\N	\N	\N
Supplier	Supplier Account	Supplier	99999999999999.00	t	f	Admin	2021-05-05 02:32:10.052274-07	24000001	\N	\N	\N	\N
Employee	Employee Account	Employee	99999999999999.00	t	f	Admin	2021-05-05 02:32:33.34899-07	42000009	\N	\N	\N	\N
\.


--
-- Data for Name: finance_accounts_balance; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_accounts_balance (branch_code, center_code, client_id, products_code, account_type, account_number, account_title, phone_number, account_address, account_ledger_code, is_account_active, account_opening_date, account_closing_date, last_transaction_date, last_balance_update, last_monbal_update, is_balance_updated, credit_limit, total_debit_amount, total_credit_amount, account_balance, unauth_debit_amount, unauth_credit_amount, account_comments, is_deleted, app_user_id, app_data_time) FROM stdin;
100	0	0001	\N	Supplier	1000000000002	RFL	0134123412	\N	24000001	t	2021-05-24	\N	2021-06-10	2021-06-10	2021-05-24	t	99999999999999.00	25000.00	55000.00	30000.00	0.00	0.00	\N	f	Admin	2021-05-24 04:55:32.485706-07
100	4000001	00000002	\N	Customer	1000000000003	Rajib Pradhan	+8801671103360	Uttar Kararchar, Shibpur, Narsingdi	14000001	t	2021-06-10	2021-06-10	\N	\N	\N	t	99999999999999.00	0.00	0.00	0.00	0.00	0.00	\N	f	Admin	2021-06-10 02:19:32.143738-07
100	0	0008	\N	Supplier	1000000000014	WALTON EXCLUSIVE	01711233638	\N	24000001	t	2021-07-06	\N	2021-07-06	2021-07-06	2021-07-06	t	99999999999999.00	500000.00	600000.00	100000.00	0.00	0.00	\N	f	Admin	2021-07-06 10:30:43.496358-07
100	0	0004	\N	Supplier	1000000000007	H&M	14565876586	\N	24000001	t	2021-06-12	\N	2021-08-13	2021-07-11	2021-07-11	f	99999999999999.00	330.00	5830.00	5500.00	0.00	0.00	\N	f	Admin	2021-06-12 00:21:42.790288-07
100	0	0003	\N	Supplier	1000000000006	mahin	17648656846	\N	24000001	t	2021-06-11	\N	2021-08-23	2021-06-11	2021-06-11	f	99999999999999.00	3000.00	21000.00	18000.00	0.00	0.00	\N	f	Admin	2021-06-11 04:23:09.226701-07
100	0	0002	\N	Supplier	1000000000005	Abul	01671103360	\N	24000001	t	2021-06-11	\N	2021-08-22	2021-08-22	2021-06-26	t	99999999999999.00	180214.00	14098680.00	13918466.00	0.00	0.00	\N	f	Admin	2021-06-11 03:54:06.269371-07
100	0	0007	\N	Supplier	1000000000011	Samsung	01671104456	\N	24000001	t	2021-06-26	\N	2021-07-11	2021-06-26	2021-06-26	t	99999999999999.00	0.00	18044.00	18044.00	0.00	0.00	\N	f	Admin	2021-06-26 02:30:03.998744-07
100	4000001	00000007	\N	Customer	1000000000015	tamim	019999	dhaka	14000001	t	2021-08-16	2021-08-16	\N	\N	\N	f	99999999999999.00	0.00	0.00	0.00	0.00	0.00	\N	f	Admin	2021-08-15 23:09:36.151893-07
100	0	0005	\N	Supplier	1000000000009	kabir	71624762587	\N	24000001	t	2021-06-21	\N	2021-08-13	2021-08-13	2021-08-13	f	99999999999999.00	0.00	1400.00	1400.00	0.00	0.00	\N	f	Admin	2021-06-21 06:08:52.626155-07
100	0	000001	\N	Employee	1000000000016	mithun	01720026441	\N	42000009	t	2021-08-17	\N	\N	\N	\N	f	99999999999999.00	0.00	0.00	0.00	0.00	0.00	\N	f	Admin	2021-08-16 23:21:19.397718-07
100	0	000002	\N	Employee	1000000000017	mahbub	01776879668	dhaka	42000009	t	2021-08-17	\N	\N	\N	\N	f	99999999999999.00	0.00	0.00	0.00	0.00	0.00	\N	f	Admin	2021-08-16 23:24:50.671775-07
100	0	0006	\N	Supplier	1000000000010	Walton	2768734769	\N	24000001	t	2021-06-26	\N	2021-07-11	2021-07-11	2021-07-11	f	99999999999999.00	0.00	396000.00	396000.00	0.00	0.00	\N	f	Admin	2021-06-26 01:54:11.614759-07
100	0	0009	\N	Supplier	1000000000019	abdullah	017654	dhaka	24000001	t	2008-08-22	\N	2021-08-30	2021-08-26	2019-08-23	f	99999999999999.00	4030050.00	6089958.00	2059908.00	0.00	0.00	\N	f	Admin	2021-08-21 21:41:07.749371-07
100	4000001	00000006	\N	Customer	1000000000013	Rakha Begum	01995297063	Velanagor, Narsingdi	14000001	t	2021-07-06	\N	2021-08-22	2021-08-22	2021-08-22	f	99999999999999.00	650.00	0.00	-650.00	0.00	0.00	\N	f	Admin	2021-07-06 10:24:11.950006-07
100	4000001	23	\N	Customer	1000000000001	Mohammad Rajib Pradhan	01749195756	Dhaka	14000001	t	2021-05-24	\N	2021-08-30	2021-07-07	2021-04-08	f	99999999999999.00	1568102.00	9742000.00	8173898.00	0.00	0.00	\N	f	Admin	2021-05-24 04:53:02.286326-07
100	4000001	00000008	\N	Customer	1000000000018	shahadat	012789	dhaka	14000001	t	2000-08-22	2021-08-22	\N	\N	\N	f	99999999999999.00	0.00	0.00	0.00	0.00	0.00	\N	f	Admin	2021-08-21 21:39:54.346766-07
100	4000001	00000005	\N	Customer	1000000000012	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	14000001	t	2021-06-26	\N	2021-08-30	2021-08-19	2021-08-19	f	99999999999999.00	943334.00	697482.00	-245852.00	0.00	0.00	\N	f	Admin	2021-06-26 02:31:17.821301-07
100	4000001	00000003	\N	Customer	1000000000004	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	14000001	t	2021-06-11	\N	2021-08-30	2021-08-26	2021-06-11	f	99999999999999.00	1071790.00	58405.00	-1013385.00	0.00	0.00	\N	f	Admin	2021-06-11 03:53:06.854661-07
100	0	9999999999999	GA	GA	9999999999999	General Account	9999999999999	Quick Sales	59000001	t	2021-07-06	\N	2021-08-22	2021-07-06	2021-07-06	f	0.00	8000.00	6027400.00	6019400.00	0.00	0.00	\N	f	Admin	2021-07-06 10:45:37.052794-07
100	4000001	00000004	\N	Customer	1000000000008	hasan	5465676	htafdhwguyjabcjev	14000001	t	2021-06-21	\N	2021-08-28	2021-08-13	2021-08-13	f	99999999999999.00	1277719.00	0.00	-1277719.00	0.00	0.00	\N	f	Admin	2021-06-21 06:08:16.092299-07
\.


--
-- Data for Name: finance_accounts_balance_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_accounts_balance_hist (id, account_number, transaction_date, total_debit_sum, total_credit_sum, account_balance, cum_debit_sum, cum_credit_sum, app_user_id, app_data_time, branch_code) FROM stdin;
10	1000000000002	2021-05-24	22000.00	25000.00	3000.00	0.00	0.00	SYSTEM	2021-05-25 04:46:34.492-07	100
12	1000000000002	2021-05-25	0.00	5000.00	8000.00	0.00	0.00	SYSTEM	2021-06-10 03:02:12.143-07	100
13	1000000000002	2021-06-10	3000.00	25000.00	30000.00	0.00	0.00	SYSTEM	2021-06-10 03:02:12.143-07	100
16	1000000000006	2021-06-11	0.00	18000.00	18000.00	0.00	0.00	SYSTEM	2021-06-11 07:00:43.700312-07	100
19	1000000000004	2021-06-11	20000.00	0.00	-20000.00	0.00	0.00	SYSTEM	2021-06-26 03:41:38.813045-07	100
23	1000000000014	2021-07-06	500000.00	600000.00	100000.00	500000.00	600000.00	SYSTEM	2021-07-06 10:45:25.026204-07	100
24	1000000000001	2021-04-08	30.00	0.00	-30.00	30.00	0.00	SYSTEM	2021-07-06 10:45:25.026204-07	100
25	1000000000001	2021-05-24	12600.00	5000.00	-7630.00	12630.00	5000.00	SYSTEM	2021-07-06 10:45:25.026204-07	100
26	1000000000001	2021-06-10	5700.00	2000.00	-11330.00	18330.00	7000.00	SYSTEM	2021-07-06 10:45:25.026204-07	100
29	1000000000001	2021-07-06	16060.00	10000.00	-17390.00	34390.00	17000.00	SYSTEM	2021-07-07 09:44:57.842843-07	100
30	1000000000001	2021-07-07	8000.00	7000.00	-18390.00	42390.00	24000.00	SYSTEM	2021-07-07 09:44:57.842843-07	100
31	1000000000019	2019-08-23	6000.00	0.00	-6000.00	6000.00	0.00	SYSTEM	2021-08-23 03:07:58.117512-07	100
32	1000000000019	2021-08-22	20000.00	2003900.00	1977900.00	26000.00	2003900.00	SYSTEM	2021-08-23 03:07:58.117512-07	100
34	1000000000005	2021-06-26	200.00	250.00	50.00	200.00	250.00	SYSTEM	2021-08-23 03:10:47.787641-07	100
35	1000000000005	2021-07-11	180000.00	180515.00	565.00	180200.00	180765.00	SYSTEM	2021-08-23 03:10:47.787641-07	100
36	1000000000005	2021-07-12	0.00	25.00	590.00	180200.00	180790.00	SYSTEM	2021-08-23 03:10:47.787641-07	100
37	1000000000005	2021-08-14	0.00	11312000.00	11312590.00	180200.00	11492790.00	SYSTEM	2021-08-23 03:10:47.787641-07	100
38	1000000000005	2021-08-16	0.00	390.00	11312980.00	180200.00	11493180.00	SYSTEM	2021-08-23 03:10:47.787641-07	100
39	1000000000005	2021-08-21	0.00	2500.00	11315480.00	180200.00	11495680.00	SYSTEM	2021-08-23 03:10:47.787641-07	100
40	1000000000005	2021-08-22	14.00	2603000.00	13918466.00	180214.00	14098680.00	SYSTEM	2021-08-23 03:10:47.787641-07	100
41	1000000000011	2021-06-26	0.00	18044.00	18044.00	0.00	18044.00	SYSTEM	2021-08-23 03:11:28.756617-07	100
42	1000000000019	2021-08-23	4000000.00	4000000.00	1977900.00	4026000.00	6003900.00	SYSTEM	2021-08-26 02:11:46.759291-07	100
43	1000000000019	2021-08-26	4050.00	86044.00	2059894.00	4030050.00	6089944.00	SYSTEM	2021-08-26 02:11:46.759291-07	100
44	1000000000004	2021-06-26	20030.00	230.00	-39800.00	20030.00	230.00	SYSTEM	2021-08-26 02:24:53.440046-07	100
45	1000000000004	2021-08-13	16100.00	0.00	-55900.00	36130.00	230.00	SYSTEM	2021-08-26 02:24:53.440046-07	100
46	1000000000004	2021-08-14	60000.00	0.00	-115900.00	96130.00	230.00	SYSTEM	2021-08-26 02:24:53.440046-07	100
47	1000000000004	2021-08-15	8000.00	0.00	-123900.00	104130.00	230.00	SYSTEM	2021-08-26 02:24:53.440046-07	100
48	1000000000004	2021-08-20	60000.00	0.00	-183900.00	164130.00	230.00	SYSTEM	2021-08-26 02:24:53.440046-07	100
49	1000000000004	2021-08-22	500350.00	175.00	-684075.00	664480.00	405.00	SYSTEM	2021-08-26 02:24:53.440046-07	100
50	1000000000004	2021-08-23	120.00	0.00	-684195.00	664600.00	405.00	SYSTEM	2021-08-26 02:24:53.440046-07	100
51	1000000000004	2021-08-26	292000.00	50000.00	-926195.00	956600.00	50405.00	SYSTEM	2021-08-26 02:24:53.440046-07	100
\.


--
-- Data for Name: finance_accounts_balmon_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_accounts_balmon_hist (id, transaction_month, transaction_year, account_number, total_debit_sum, total_credit_sum, account_balance, cum_debit_sum, cum_credit_sum, app_user_id, app_data_time, branch_code) FROM stdin;
\.


--
-- Data for Name: finance_application_settings; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_application_settings (id, cash_gl_code, asset_main_gl, liabilities_main_gl, income_main_gl, expenses_main_gl, profit_and_loss_ledger, past_year_adj_ledger, transaction_doc_required, app_user_id, app_data_time) FROM stdin;
1	11100001	10000000	20000000	30000000	40000000	21000005	21000005	f	Admin	2021-05-04 23:34:51.837891-07
\.


--
-- Data for Name: finance_cash_and_bank_ledger; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_cash_and_bank_ledger (id, is_active, is_deleted, app_user_id, app_data_time, branch_code, gl_code, is_balance_updated, last_balance_update, last_transaction_date) FROM stdin;
2	t	f	Admin	2021-05-05 02:33:44.14891-07	100	11200002	t	\N	\N
3	t	f	Admin	2021-05-05 02:33:50.886632-07	100	11200001	t	\N	\N
1	t	f	Admin	2021-05-05 02:33:36.151943-07	100	11100001	f	2021-07-06	2021-08-26
\.


--
-- Data for Name: finance_cash_transaction; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_cash_transaction (id, branch_code, center_code, transaction_date, batch_number, day_serial_no, receive_payment, transaction_amount, transaction_narration, auth_by, auth_on, cancel_by, cancel_on, cancel_remarks, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: finance_charges; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_charges (charges_id, charges_code, charges_name, actype_code, charge_type, charge_percentage, charge_from_amount, charge_upto_amount, charge_amount, account_opening_charge, account_closing_charge, member_admission_fee, loan_application_fee, loan_insurance_fee, pass_book_fee, penal_charge, others_fee, status, effective_from_date, effective_upto_date, comments, app_user_id, app_data_time, charges_ledger_code) FROM stdin;
\.


--
-- Data for Name: finance_client_account_mapping; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_client_account_mapping (id, is_active, is_deleted, app_user_id, app_data_time, account_type_code, client_type_code) FROM stdin;
1	t	f	Admin	2021-05-05 02:32:51.141205-07	Employee	EMP
2	t	f	Admin	2021-05-05 02:32:58.833418-07	Customer	CCL
3	t	f	Admin	2021-05-05 02:33:04.009537-07	Supplier	SUP
\.


--
-- Data for Name: finance_client_type; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_client_type (client_type_code, client_type_name, is_account_required, transaction_screen, is_active, is_deleted, app_user_id, app_data_time) FROM stdin;
EMP	Employee	t	EMP_ENTRY	t	f	Admin	2021-05-05 02:21:58.275283-07
CCL	Credit Customer	t	CLIENT_ENTRY	t	f	Admin	2021-05-05 02:22:54.145546-07
SUP	Supplier	t	SUPPLIER_ENTRY	t	f	Admin	2021-05-05 02:23:10.683014-07
\.


--
-- Data for Name: finance_deposit_closing; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_deposit_closing (id, branch_code, center_code, client_id, account_number, closing_date, closing_balance, cancel_amount, tran_batch_number, closing_doc_num, narration, cancel_by, cancel_on, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: finance_deposit_payment; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_deposit_payment (id, branch_code, center_code, client_id, account_number, payment_date, payment_amount, cancel_amount, tran_batch_number, payment_doc_num, dep_entry_day_sl, narration, cancel_by, cancel_on, is_transfer, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: finance_deposit_receive; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_deposit_receive (id, branch_code, center_code, client_id, account_number, deposit_date, deposit_amount, cancel_amount, tran_batch_number, deposit_doc_num, dep_entry_day_sl, narration, is_transfer, cancel_by, cancel_on, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: finance_deposit_transfer; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_deposit_transfer (id, branch_code, center_code, from_client_id, from_account_number, to_client_id, to_account_number, transaction_date, transaction_amount, cancel_amount, tran_batch_number, transaction_doc_num, narration, cancel_by, cancel_on, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: finance_document_register; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_document_register (id, branch_code, doc_number, tran_type) FROM stdin;
\.


--
-- Data for Name: finance_general_ledger; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_general_ledger (gl_code, gl_name, reporting_gl_code, income_gl, expense_gl, assets_gl, liabilities_gl, is_leaf_node, debit_allowed, credit_allowed, maintain_by_system, sundry_flag, is_bank_account, sundry_max_amount, gl_comments, closer_date, auth_by, auth_on, cancel_by, cancel_on, is_active, is_deleted, app_user_id, app_data_time, parent_code) FROM stdin;
11000000	Current Assets	11000000	f	f	t	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 01:46:41.427636-07	10000000
11200000	Bank Accounts	11200000	f	f	t	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 01:51:29.93942-07	11000000
11500000	Advance	11500000	f	f	t	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 01:53:42.701639-07	11000000
12100000	COMPUTER & COMPUTER EQUIPMENT	12100000	f	f	t	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 01:59:14.076809-07	12000000
12100003	Software	12100003	f	f	t	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:01:00.756167-07	12100000
13100001	Inventory/Stock In Hand	13100001	f	f	t	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:08:49.070778-07	13100000
21000001	Capital	21000001	f	f	f	t	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:12:08.384173-07	21000000
41000001	Loss on Product Sold	41000001	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 06:59:53.096971-07	41000000
23000000	NON-CURRENT LIABILITIES	23000000	f	f	f	t	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:15:38.816452-07	20000000
14000000	Sales Due Receivable	14000000	f	f	t	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:26:49.74254-07	10000000
24000001	Supplier Payable	24000001	f	f	f	t	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:30:30.981719-07	24000000
10000000	Assets	10000000	f	f	t	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 06:22:50.400053-07	\N
20000000	Liabilities	20000000	f	f	f	t	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 06:23:18.796205-07	\N
30000000	Income	30000000	t	f	f	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 06:23:42.201737-07	\N
40000000	Expences	40000000	f	t	f	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 06:24:03.238474-07	\N
41000002	Discount Paid	41000002	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:00:29.617674-07	41000000
41000003	Rejected/Damage	41000003	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:05:50.898427-07	41000000
42000001	Entertainment Expences	42000001	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:06:30.531266-07	42000000
42000002	Stationary Exp.	42000002	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:07:06.107503-07	42000000
42000003	Convenience Bill	42000003	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:07:49.001644-07	42000000
42000004	Carrying Charge	42000004	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:08:31.18791-07	42000000
42000005	Mobile Charge	42000005	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:08:53.688211-07	42000000
42000006	Office Rent	42000006	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:09:17.244879-07	42000000
42000007	Donation Exp.	42000007	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:10:15.648827-07	42000000
42000008	Zakat Exp.	42000008	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:10:45.119525-07	42000000
42000009	Salary Exp.	42000009	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:11:06.234899-07	42000000
42000010	Bank Charge	42000010	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:11:28.490659-07	42000000
42000011	Bank Interest (Loan)	42000011	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:12:02.347681-07	42000000
42000012	Bonus Exp.	42000012	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:12:28.904769-07	42000000
42000014	Mechanical Exp.	42000014	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:13:12.558058-07	42000000
42000015	Interest	42000015	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:13:34.894355-07	42000000
42000016	Carrying Farm	42000016	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:14:47.609964-07	42000000
42000017	Labor Unload Exp.	42000017	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:15:30.520251-07	42000000
42000018	Proprietor Personal Exp.	42000018	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:16:12.476223-07	42000000
42000019	Electric Bill	42000019	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:16:40.610429-07	42000000
42000020	Security Exp.	42000020	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:17:02.480882-07	42000000
42000021	Office Rent	42000021	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:17:35.779912-07	42000000
42000050	Other Charge	42000050	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 07:18:00.428843-07	42000000
41000000	Product Expenses	41000000	f	t	f	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 06:41:24.030886-07	40000000
42000000	ADMINISTRATIVE EXPENCES	42000000	f	t	f	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-09-26 06:41:43.757233-07	40000000
42000100	Profit Return	42000100	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	rajib.pradhan	2020-10-04 06:50:20.494797-07	42000000
50000000	Sundry Debitors	50000000	f	f	f	f	f	t	t	f	t	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-09 03:36:47.48571-07	\N
60000000	Sundry Creditors	60000000	f	f	f	f	f	t	t	f	t	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-09 03:37:18.835407-07	\N
51000000	Receivable	51000000	f	f	f	f	f	t	t	f	t	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-09 03:38:29.666079-07	50000000
51000001	EMI Profit Receivable	51000001	f	f	f	f	t	t	t	f	t	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-09 03:38:56.906855-07	51000000
59000000	Others	59000000	f	f	f	f	f	t	t	f	t	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-09 03:42:07.645586-07	50000000
59000001	Quick Sales Account Balance	59000001	f	f	f	f	t	t	t	f	t	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-09 03:42:57.001687-07	59000000
42000022	Admin Payment	42000022	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-09 04:27:36.26377-07	42000000
11200001	DBBL Account	11200001	f	f	t	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 01:51:57.947788-07	11200000
11500001	Advance ( Office Rent )	11500001	f	f	t	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 01:54:26.209553-07	11500000
12100001	Computer (Desk Top)	12100001	f	f	t	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:00:02.514194-07	12100000
13000000	Product Inventory	13000000	f	f	t	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:02:21.375155-07	10000000
21000000	CAPITAL /EQUITY FUND	21000000	f	f	f	t	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:09:41.612684-07	20000000
22000000	CURRENT LIABILITIES	22000000	f	f	f	t	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:13:13.076021-07	20000000
31000000	INCOME ON PRODUCT SALES	31000000	t	f	f	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:17:40.2691-07	30000000
14000001	Sales Due on Customer	14000001	f	f	t	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:27:32.038166-07	14000000
14000002	EMI Profit Receivable	14000002	f	f	t	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:57:35.44569-07	14000000
11100000	Cash Accounts	11100000	f	f	t	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 01:48:13.830264-07	11000000
44000000	DEPRECIATION	44000000	f	t	f	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-15 00:54:52.028111-07	40000000
44100000	OFFICE EQUIPMENT DEPRECIATION	44100000	f	t	f	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-15 01:04:48.482123-07	44000000
44100001	Furniture & Fixtures Depreciation	44100001	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-15 01:05:27.417524-07	44100000
44100002	Computer & Computer Equipment	44100002	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-15 01:05:42.535829-07	44100000
44100003	Electric & Electronics Depreciation	44100003	f	t	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-04-15 01:06:06.55516-07	44100000
11100001	Cash In Hand	11100001	f	f	t	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 01:50:06.924316-07	11100000
11200002	Sonali Bank Limited	11200002	f	f	t	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 01:52:23.275599-07	11200000
12000000	Fixed Assets	12000000	f	f	t	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 01:56:37.522347-07	10000000
12100002	Printer	12100002	f	f	t	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:00:28.309269-07	12100000
13100000	Inventory/Stock	13100000	f	f	t	f	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:08:22.546912-07	13000000
21000005	Surplus/Deficit from Income Statement	21000005	f	f	f	t	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:11:06.52464-07	21000000
22000001	Loan Payable To Bank	22000001	f	f	f	t	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:14:59.751494-07	22000000
31000001	Profit on Sales	31000001	t	f	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:18:24.973437-07	31000000
24000000	PURCHASE PAYABLE	24000000	f	f	f	t	f	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:29:53.104343-07	20000000
31000002	Profit on EMI	31000002	t	f	f	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-05 02:58:26.502129-07	31000000
11000003	EMI Profit Receivable	11000003	f	f	t	f	t	t	t	f	f	f	0.00		\N	\N	\N	\N	\N	t	f	Admin	2021-05-24 05:19:40.305769-07	11000000
\.


--
-- Data for Name: finance_led_rec_pay_bal_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_led_rec_pay_bal_hist (id, branch_code, transaction_date, gl_code, total_debit_sum, total_credit_sum, gl_balance, cum_debit_sum, cum_credit_sum, app_user_id, app_data_time) FROM stdin;
18	100	2021-05-24	13100000	20000.00	0.00	-20000.00	20000.00	0.00	SYSTEM	2021-07-06 10:51:05.017338-07
19	100	2021-05-24	13100001	0.00	5000.00	5000.00	0.00	5000.00	SYSTEM	2021-07-06 10:51:05.017338-07
20	100	2021-05-24	24000001	2000.00	0.00	-2000.00	2000.00	0.00	SYSTEM	2021-07-06 10:51:05.017338-07
21	100	2021-06-10	13100000	3000.00	0.00	-23000.00	23000.00	0.00	SYSTEM	2021-07-06 10:51:05.017338-07
22	100	2021-06-10	13100001	0.00	2000.00	7000.00	0.00	7000.00	SYSTEM	2021-07-06 10:51:05.017338-07
23	100	2021-06-26	13100000	200.00	0.00	-23200.00	23200.00	0.00	SYSTEM	2021-07-06 10:51:05.017338-07
24	100	2021-06-26	13100001	0.00	230.00	7230.00	0.00	7230.00	SYSTEM	2021-07-06 10:51:05.017338-07
25	100	2021-07-06	13100000	500000.00	0.00	-523200.00	523200.00	0.00	SYSTEM	2021-07-06 10:51:05.017338-07
\.


--
-- Data for Name: finance_led_rec_pay_balmon_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_led_rec_pay_balmon_hist (id, branch_code, gl_code, transaction_date, transaction_month, transaction_year, transaction_year_month, total_debit_sum, total_credit_sum, gl_balance, cum_debit_sum, cum_credit_sum, app_user_id, app_data_time) FROM stdin;
1	100	13100001	2021-06-30	6	2021	202106	0.00	2230.00	7230.00	0.00	7230.00	SYSTEM	2021-07-06 10:45:25.026204-07
\.


--
-- Data for Name: finance_ledger_balance; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_ledger_balance (id, branch_code, total_debit_sum, total_credit_sum, gl_balance, unauth_debit_sum, unauth_credit_sum, transfer_debit_sum, transfer_credit_sum, last_transaction_date, last_balance_update, last_monbal_update, is_balance_updated, auth_by, auth_on, cancel_by, cancel_on, app_user_id, app_data_time, gl_code, is_monbal_recpay_updated, is_monbal_updated, last_monbal_recpay_update) FROM stdin;
6	100	0.00	600.00	600.00	0.00	0.00	0.00	0.00	2021-05-24	2021-05-24	2021-05-24	t	\N	\N	\N	\N	Admin	2021-05-24 05:19:58.221-07	11000003	f	f	\N
8	100	0.00	200.00	200.00	0.00	0.00	0.00	0.00	2021-06-10	2021-06-10	2021-06-10	t	\N	\N	\N	\N	Admin	2021-06-10 02:58:01.364-07	14000002	t	t	2021-06-10
7	100	500.00	0.00	-500.00	0.00	0.00	0.00	0.00	2021-07-06	2021-07-06	2021-07-06	f	\N	\N	\N	\N	Admin	2021-06-10 02:57:25.877-07	41000002	f	f	2021-07-06
9	100	8000.00	6027400.00	6019400.00	0.00	0.00	0.00	0.00	2021-08-22	2021-07-06	2021-07-06	f	\N	\N	\N	\N	Admin	2021-07-06 10:46:00.187395-07	59000001	f	f	2021-07-06
3	100	32230.00	4708560.00	4676330.00	0.00	0.00	0.00	0.00	2021-08-26	2021-07-06	2021-07-06	f	\N	\N	\N	\N	Admin	2021-05-24 04:57:07.34-07	11100001	f	f	2021-07-06
2	100	4738594.00	21285912.00	16547318.00	0.00	0.00	0.00	0.00	2021-08-30	2019-08-23	2019-08-23	f	\N	\N	\N	\N	Admin	2021-05-24 04:57:07.34-07	24000001	f	f	2021-07-06
1	100	35077806.00	4021209.00	-31056597.00	0.00	0.00	0.00	0.00	2021-08-30	2019-08-23	2019-08-23	f	\N	\N	\N	\N	Admin	2021-05-24 04:57:07.34-07	13100001	f	f	2021-07-06
4	100	2701163.00	878120.00	-1823043.00	0.00	0.00	0.00	0.00	2021-08-30	2021-07-06	2021-07-06	f	\N	\N	\N	\N	Admin	2021-05-24 05:02:17.071-07	31000001	f	f	2021-07-06
5	100	4861595.00	10497887.00	5636292.00	0.00	0.00	0.00	0.00	2021-08-30	2021-07-06	2021-07-06	f	\N	\N	\N	\N	Admin	2021-05-24 05:02:17.071-07	14000001	f	f	2021-07-06
\.


--
-- Data for Name: finance_ledger_balance_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_ledger_balance_hist (id, branch_code, transaction_date, gl_code, total_debit_sum, total_credit_sum, gl_balance, cum_debit_sum, cum_credit_sum, app_user_id, app_data_time) FROM stdin;
15	100	2021-05-24	11000003	0.00	600.00	600.00	0.00	600.00	SYSTEM	2021-05-24 05:19:58.221-07
24	100	2021-05-24	24000001	22000.00	25000.00	3000.00	22000.00	25000.00	SYSTEM	2021-05-25 04:46:34.492-07
26	100	2021-05-25	24000001	0.00	5000.00	8000.00	22000.00	30000.00	SYSTEM	2021-06-10 03:02:33.508-07
33	100	2021-05-24	11100001	5000.00	22000.00	17000.00	5000.00	22000.00	SYSTEM	2021-06-10 03:02:33.508-07
37	100	2021-06-10	14000002	0.00	200.00	200.00	0.00	200.00	SYSTEM	2021-06-10 03:02:33.508-07
38	100	2021-06-10	24000001	3000.00	25000.00	30000.00	25000.00	55000.00	SYSTEM	2021-06-11 07:00:43.700312-07
52	100	2021-06-10	11100001	2000.00	3000.00	18000.00	7000.00	25000.00	SYSTEM	2021-06-26 03:41:38.813045-07
54	100	2021-06-11	24000001	0.00	18000.00	48000.00	25000.00	73000.00	SYSTEM	2021-06-26 03:41:38.813045-07
60	100	2021-06-26	24000001	200.00	18294.00	66094.00	25200.00	91294.00	SYSTEM	2021-07-06 10:45:25.026204-07
61	100	2021-07-06	24000001	500000.00	600000.00	166094.00	525200.00	691294.00	SYSTEM	2021-07-06 10:45:25.026204-07
62	100	2021-04-08	13100001	0.00	25.00	25.00	0.00	25.00	SYSTEM	2021-07-06 10:45:25.026204-07
63	100	2021-05-24	13100001	25000.00	10000.00	-14975.00	25000.00	10025.00	SYSTEM	2021-07-06 10:45:25.026204-07
64	100	2021-05-25	13100001	5000.00	0.00	-19975.00	30000.00	10025.00	SYSTEM	2021-07-06 10:45:25.026204-07
65	100	2021-06-10	13100001	25000.00	5000.00	-39975.00	55000.00	15025.00	SYSTEM	2021-07-06 10:45:25.026204-07
66	100	2021-06-11	13100001	18000.00	18000.00	-39975.00	73000.00	33025.00	SYSTEM	2021-07-06 10:45:25.026204-07
67	100	2021-06-26	13100001	18294.00	18025.00	-40244.00	91294.00	51050.00	SYSTEM	2021-07-06 10:45:25.026204-07
69	100	2021-04-08	31000001	0.00	5.00	5.00	0.00	5.00	SYSTEM	2021-07-06 10:45:25.026204-07
70	100	2021-05-24	31000001	0.00	2000.00	2005.00	0.00	2005.00	SYSTEM	2021-07-06 10:45:25.026204-07
71	100	2021-06-10	31000001	0.00	1000.00	3005.00	0.00	3005.00	SYSTEM	2021-07-06 10:45:25.026204-07
72	100	2021-06-11	31000001	0.00	2000.00	5005.00	0.00	5005.00	SYSTEM	2021-07-06 10:45:25.026204-07
73	100	2021-06-26	31000001	0.00	2005.00	7010.00	0.00	7010.00	SYSTEM	2021-07-06 10:45:25.026204-07
75	100	2021-06-26	11100001	230.00	200.00	17970.00	7230.00	25200.00	SYSTEM	2021-07-06 10:45:25.026204-07
77	100	2021-04-08	14000001	30.00	0.00	-30.00	30.00	0.00	SYSTEM	2021-07-06 10:45:25.026204-07
78	100	2021-05-24	14000001	12600.00	5000.00	-7630.00	12630.00	5000.00	SYSTEM	2021-07-06 10:45:25.026204-07
79	100	2021-06-10	14000001	5700.00	2000.00	-11330.00	18330.00	7000.00	SYSTEM	2021-07-06 10:45:25.026204-07
80	100	2021-06-11	14000001	20000.00	0.00	-31330.00	38330.00	7000.00	SYSTEM	2021-07-06 10:45:25.026204-07
81	100	2021-06-26	14000001	20030.00	230.00	-51130.00	58360.00	7230.00	SYSTEM	2021-07-06 10:45:25.026204-07
82	100	2021-07-06	14000001	16060.00	10000.00	-57190.00	74420.00	17230.00	SYSTEM	2021-07-06 10:45:25.026204-07
85	100	2021-06-10	41000002	500.00	0.00	-500.00	500.00	0.00	SYSTEM	2021-07-06 10:47:59.380349-07
\.


--
-- Data for Name: finance_ledger_balmon_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_ledger_balmon_hist (id, branch_code, gl_code, transaction_date, transaction_month, transaction_year, transaction_year_month, total_debit_sum, total_credit_sum, gl_balance, cum_debit_sum, cum_credit_sum, app_user_id, app_data_time) FROM stdin;
1	100	24000001	2021-05-31	5	2021	202105	22000.00	30000.00	8000.00	22000.00	30000.00	SYSTEM	2021-06-10 03:02:33.508-07
7	100	11100001	2021-05-31	5	2021	202105	5000.00	22000.00	17000.00	5000.00	22000.00	SYSTEM	2021-06-10 03:02:33.508-07
11	100	24000001	2021-06-30	6	2021	202106	3200.00	61294.00	66094.00	25200.00	91294.00	SYSTEM	2021-07-06 10:45:25.026204-07
12	100	24000001	2021-07-31	7	2021	202107	500000.00	600000.00	166094.00	525200.00	691294.00	SYSTEM	2021-07-06 10:45:25.026204-07
13	100	13100001	2021-04-30	4	2021	202104	0.00	25.00	25.00	0.00	25.00	SYSTEM	2021-07-06 10:45:25.026204-07
14	100	13100001	2021-05-31	5	2021	202105	30000.00	10000.00	-19975.00	30000.00	10025.00	SYSTEM	2021-07-06 10:45:25.026204-07
15	100	13100001	2021-06-30	6	2021	202106	61294.00	41025.00	-40244.00	91294.00	51050.00	SYSTEM	2021-07-06 10:45:25.026204-07
16	100	13100001	2021-07-31	7	2021	202107	600000.00	12050.00	-628194.00	691294.00	63100.00	SYSTEM	2021-07-06 10:45:25.026204-07
17	100	31000001	2021-04-30	4	2021	202104	0.00	5.00	5.00	0.00	5.00	SYSTEM	2021-07-06 10:45:25.026204-07
18	100	31000001	2021-05-31	5	2021	202105	0.00	2000.00	2005.00	0.00	2005.00	SYSTEM	2021-07-06 10:45:25.026204-07
19	100	31000001	2021-06-30	6	2021	202106	0.00	5005.00	7010.00	0.00	7010.00	SYSTEM	2021-07-06 10:45:25.026204-07
20	100	31000001	2021-07-31	7	2021	202107	0.00	4010.00	11020.00	0.00	11020.00	SYSTEM	2021-07-06 10:45:25.026204-07
21	100	11100001	2021-06-30	6	2021	202106	2230.00	3200.00	17970.00	7230.00	25200.00	SYSTEM	2021-07-06 10:45:25.026204-07
22	100	11100001	2021-07-31	7	2021	202107	10000.00	500000.00	507970.00	17230.00	525200.00	SYSTEM	2021-07-06 10:45:25.026204-07
23	100	14000001	2021-04-30	4	2021	202104	30.00	0.00	-30.00	30.00	0.00	SYSTEM	2021-07-06 10:45:25.026204-07
24	100	14000001	2021-05-31	5	2021	202105	12600.00	5000.00	-7630.00	12630.00	5000.00	SYSTEM	2021-07-06 10:45:25.026204-07
25	100	14000001	2021-06-30	6	2021	202106	45730.00	2230.00	-51130.00	58360.00	7230.00	SYSTEM	2021-07-06 10:45:25.026204-07
26	100	14000001	2021-07-31	7	2021	202107	16060.00	10000.00	-57190.00	74420.00	17230.00	SYSTEM	2021-07-06 10:45:25.026204-07
27	100	41000002	2021-06-30	6	2021	202106	500.00	0.00	-500.00	500.00	0.00	SYSTEM	2021-07-06 10:47:59.380349-07
28	100	41000002	2021-07-31	7	2021	202107	500.00	0.00	-1000.00	1000.00	0.00	SYSTEM	2021-07-06 10:47:59.380349-07
\.


--
-- Data for Name: finance_ledger_report_balance; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_ledger_report_balance (id, branch_code, gl_code, ason_credit_sum, ason_debit_sum, ason_gl_balance, asof_credit_sum, asof_debit_sum, asof_gl_balance, this_month_credit_sum, this_month_debit_sum, this_month_gl_balance, past_month_credit_sum, past_month_debit_sum, past_month_gl_balance, this_quarter_credit_sum, this_quarter_debit_sum, this_quarter_gl_balance, past_quarter_credit_sum, past_quarter_debit_sum, past_quarter_gl_balance, this_halfyear_credit_sum, this_halfyear_debit_sum, this_halfyear_gl_balance, past_halfyear_credit_sum, past_halfyear_debit_sum, past_halfyear_gl_balance, this_year_credit_sum, this_year_debit_sum, this_year_gl_balance, past_year_credit_sum, past_year_debit_sum, past_year_gl_balance, this_period_credit_sum, this_period_debit_sum, this_period_gl_balance, app_user_id) FROM stdin;
\.


--
-- Data for Name: finance_ledger_report_param; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_ledger_report_param (id, branch_code, gl_code, gl_level, gl_name, reporting_gl_code, parent_code, gl_level_class, income_gl, expense_gl, assets_gl, liabilities_gl, is_leaf_node, maintain_by_system, sundry_flag, app_user_id) FROM stdin;
\.


--
-- Data for Name: finance_ledger_transaction_type; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_ledger_transaction_type (id, is_active, is_deleted, app_user_id, app_data_time, gl_code, tran_type_id) FROM stdin;
1	t	f	Admin	2021-05-05 03:19:26.23965-07	21000001	000009
\.


--
-- Data for Name: finance_tran_telbal_details; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_tran_telbal_details (id, branch_code, org_teller_id, res_teller_id, tran_debit_credit, transaction_date, tran_amount, cancel_amount, available_balance, auth_by, auth_on, cancel_by, cancel_on, cancel_remarks, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: finance_transaction_details; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_transaction_details (id, branch_code, center_code, transaction_date, batch_number, batch_serial, tran_type, account_number, tran_gl_code, contra_gl_code, tran_debit_credit, tran_amount, cancel_amount, available_balance, charge_amount, charge_code, tran_document_prefix, tran_document_number, tran_person_phone, tran_person_name, tran_sign_verified, system_posted_tran, transaction_narration, auth_by, auth_on, cancel_by, cancel_on, cancel_remarks, app_user_id, app_data_time) FROM stdin;
1	100	0	2021-05-24	1	1	STOCK	0	13100001	0	D	25000.00	0.00	-25000.00	\N	\N	\N	ST00000001	0001	Admin	f	t	Stock for Mobile Phone	Admin	2021-05-24 04:57:07.34-07	\N	\N	\N	Admin	2021-05-24 04:57:07.34-07
2	100	0	2021-05-24	1	2	STOCK	1000000000002	24000001	13100000	C	25000.00	0.00	0.00	\N	\N	\N	ST00000001	0001	\N	f	t	Purchase bill for ST00000001	Admin	2021-05-24 04:57:07.34-07	\N	\N	\N	Admin	2021-05-24 04:57:07.34-07
3	100	0	2021-05-24	1	3	STOCK	0	11100001	13100000	C	20000.00	0.00	20000.00	\N	\N	\N	ST00000001	0001	\N	f	t	Purchase payment for ST00000001	Admin	2021-05-24 04:57:07.34-07	\N	\N	\N	Admin	2021-05-24 04:57:07.34-07
4	100	0	2021-05-24	1	4	STOCK	1000000000002	24000001	13100000	D	20000.00	0.00	25000.00	\N	\N	\N	ST00000001	0001	\N	f	t	Purchase Payment for ST00000001	Admin	2021-05-24 04:57:07.34-07	\N	\N	\N	Admin	2021-05-24 04:57:07.34-07
5	100		2021-05-24	2	1	SALES	0	13100001	0	C	5000.00	0.00	-20000.00	\N	\N	\N	SL000001	1000000		f	t	Sales for Mobile Phone	Admin	2021-05-24 05:02:17.071-07	\N	\N	\N	Admin	2021-05-24 05:02:17.071-07
6	100		2021-05-24	2	2	SALES	0	31000001	0	C	1000.00	0.00	1000.00	\N	\N	\N	SL000001	1000000		f	t	Profit Posting for Invoice SL000001	Admin	2021-05-24 05:02:17.071-07	\N	\N	\N	Admin	2021-05-24 05:02:17.071-07
7	100		2021-05-24	2	3	SALES	0	11100001	13100001	D	5000.00	0.00	15000.00	\N	\N	\N	SL000001	01749195756	\N	f	t	Payment Receive for SALES SL000001	Admin	2021-05-24 05:02:17.071-07	\N	\N	\N	Admin	2021-05-24 05:02:17.071-07
10	100	4000001	2021-05-24	3	1	SALES	0	13100001	0	C	5000.00	0.00	-15000.00	\N	\N	\N	SL000002	1000000		f	t	Sales for Mobile Phone	Admin	2021-05-24 05:06:34.953-07	\N	\N	\N	Admin	2021-05-24 05:06:34.953-07
11	100	4000001	2021-05-24	3	2	SALES	0	31000001	0	C	1000.00	0.00	2000.00	\N	\N	\N	SL000002	1000000		f	t	Profit Posting for Invoice SL000002	Admin	2021-05-24 05:06:34.953-07	\N	\N	\N	Admin	2021-05-24 05:06:34.953-07
15	100	4000001	2021-05-24	4	2	EMI_SETUP	0	11000003	11100001	C	600.00	0.00	600.00	\N	\N	\N	SL000002		\N	f	t	EMI Profit Posting for Invoice : SL000002	Admin	2021-05-24 05:19:58.221-07	\N	\N	\N	Admin	2021-05-24 05:19:58.221-07
20	100	0	2021-05-24	5	1	000007	1000000000002	24000001	11100001	D	2000.00	0.00	5000.00	\N	\N	\N	\N	\N	\N	f	f	Supplier Bill Payment	Admin	2021-05-24 05:27:47.302-07	\N	\N	\N	Admin	2021-05-24 05:27:47.302-07
21	100	0	2021-05-24	5	2	CS	0	11100001	24000001	C	2000.00	0.00	17000.00	\N	\N	\N	\N	\N	\N	f	f	Supplier Bill Payment	Admin	2021-05-24 05:27:47.302-07	\N	\N	\N	Admin	2021-05-24 05:27:47.302-07
22	100	0	2021-05-25	1	1	STOCK	0	13100001	0	D	5000.00	0.00	-20000.00	\N	\N	\N	ST00000002	0001	Admin	f	t	Stock for Mobile Phone	Admin	2021-05-25 04:10:56.788-07	\N	\N	\N	Admin	2021-05-25 04:10:56.788-07
23	100	0	2021-05-25	1	2	STOCK	1000000000002	24000001	13100000	C	5000.00	0.00	3000.00	\N	\N	\N	ST00000002	0001	\N	f	t	Purchase bill for ST00000002	Admin	2021-05-25 04:10:56.788-07	\N	\N	\N	Admin	2021-05-25 04:10:56.788-07
8	100	4000001	2021-05-24	2	4	SALES	1000000000001	14000001	13100001	C	5000.00	0.00	0.00	\N	\N	\N	SL000001	01749195756	\N	f	t	Payment Receive for SALES SL000001	Admin	2021-05-24 05:02:17.071-07	\N	\N	\N	Admin	2021-05-24 05:02:17.071-07
9	100	4000001	2021-05-24	2	5	SALES	1000000000001	14000001	13100001	D	6000.00	0.00	5000.00	\N	\N	\N	SL000001	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000001	Admin	2021-05-24 05:02:17.071-07	\N	\N	\N	Admin	2021-05-24 05:02:17.071-07
12	100	4000001	2021-05-24	3	3	SALES	1000000000001	14000001	0	D	6000.00	0.00	-1000.00	\N	\N	\N	SL000002	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000002	Admin	2021-05-24 05:06:34.953-07	\N	\N	\N	Admin	2021-05-24 05:06:34.953-07
14	100	4000001	2021-05-24	4	1	EMI_SETUP	1000000000001	14000001	11000003	D	600.00	0.00	-7000.00	\N	\N	\N	SL000002		\N	f	t	EMI Profit Posting for Invoice : SL000002	Admin	2021-05-24 05:19:58.221-07	\N	\N	\N	Admin	2021-05-24 05:19:58.221-07
28	100	0	2021-06-10	1	1	STOCK	0	13100001	0	D	25000.00	0.00	-45000.00	\N	\N	\N	ST00000001	0001	Admin	f	t	Stock for Mobile Phone	Admin	2021-06-10 02:41:57.786-07	\N	\N	\N	Admin	2021-06-10 02:41:57.786-07
29	100	0	2021-06-10	1	2	STOCK	1000000000002	24000001	13100000	C	25000.00	0.00	8000.00	\N	\N	\N	ST00000001	0001	\N	f	t	Purchase bill for ST00000001	Admin	2021-06-10 02:41:57.786-07	\N	\N	\N	Admin	2021-06-10 02:41:57.786-07
30	100	0	2021-06-10	1	3	STOCK	0	11100001	13100000	C	3000.00	0.00	20000.00	\N	\N	\N	ST00000001	0001	\N	f	t	Purchase payment for ST00000001	Admin	2021-06-10 02:41:57.786-07	\N	\N	\N	Admin	2021-06-10 02:41:57.786-07
31	100	0	2021-06-10	1	4	STOCK	1000000000002	24000001	13100000	D	3000.00	0.00	33000.00	\N	\N	\N	ST00000001	0001	\N	f	t	Purchase Payment for ST00000001	Admin	2021-06-10 02:41:57.786-07	\N	\N	\N	Admin	2021-06-10 02:41:57.786-07
32	100	4000001	2021-06-10	2	1	SALES	0	13100001	0	C	5000.00	0.00	-40000.00	\N	\N	\N	SL000003	1000000		f	t	Sales for Mobile Phone	Admin	2021-06-10 02:57:25.877-07	\N	\N	\N	Admin	2021-06-10 02:57:25.877-07
33	100	4000001	2021-06-10	2	2	SALES	0	31000001	0	C	1000.00	0.00	3000.00	\N	\N	\N	SL000003	1000000		f	t	Profit Posting for Invoice SL000003	Admin	2021-06-10 02:57:25.877-07	\N	\N	\N	Admin	2021-06-10 02:57:25.877-07
34	100	4000001	2021-06-10	2	3	SALES	0	41000002	0	D	500.00	0.00	-500.00	\N	\N	\N	SL000003	01749195756	\N	f	t	Discount for SALES SL000003	Admin	2021-06-10 02:57:25.877-07	\N	\N	\N	Admin	2021-06-10 02:57:25.877-07
35	100	4000001	2021-06-10	2	4	SALES	0	11100001	13100001	D	2000.00	0.00	18000.00	\N	\N	\N	SL000003	01749195756	\N	f	t	Payment Receive for SALES SL000003	Admin	2021-06-10 02:57:25.877-07	\N	\N	\N	Admin	2021-06-10 02:57:25.877-07
36	100	4000001	2021-06-10	2	5	SALES	1000000000001	14000001	13100001	C	2000.00	0.00	-7600.00	\N	\N	\N	SL000003	01749195756	\N	f	t	Payment Receive for SALES SL000003	Admin	2021-06-10 02:57:25.877-07	\N	\N	\N	Admin	2021-06-10 02:57:25.877-07
37	100	4000001	2021-06-10	2	6	SALES	1000000000001	14000001	13100001	D	5500.00	0.00	-5600.00	\N	\N	\N	SL000003	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000003	Admin	2021-06-10 02:57:25.877-07	\N	\N	\N	Admin	2021-06-10 02:57:25.877-07
38	100	4000001	2021-06-10	3	1	EMI_SETUP	1000000000001	14000001	14000002	D	200.00	0.00	-11100.00	\N	\N	\N	SL000003		\N	f	t	EMI Profit Posting for Invoice : SL000003	Admin	2021-06-10 02:58:01.364-07	\N	\N	\N	Admin	2021-06-10 02:58:01.364-07
39	100	4000001	2021-06-10	3	2	EMI_SETUP	0	14000002	11100001	C	200.00	0.00	200.00	\N	\N	\N	SL000003		\N	f	t	EMI Profit Posting for Invoice : SL000003	Admin	2021-06-10 02:58:01.364-07	\N	\N	\N	Admin	2021-06-10 02:58:01.364-07
40	100	0	2021-06-11	1	1	STOCK	0	13100001	0	D	18000.00	0.00	-58000.00	\N	\N	\N	ST00000003	0003	Admin	f	t	Stock for White Washing Machine	Admin	2021-06-11 04:34:15.494387-07	\N	\N	\N	Admin	2021-06-11 04:34:15.494387-07
41	100	0	2021-06-11	1	2	STOCK	1000000000006	24000001	13100000	C	18000.00	0.00	0.00	\N	\N	\N	ST00000003	0003	\N	f	t	Purchase bill for ST00000003	Admin	2021-06-11 04:34:15.494387-07	\N	\N	\N	Admin	2021-06-11 04:34:15.494387-07
42	100	4000001	2021-06-11	2	1	SALES	0	13100001	0	C	18000.00	0.00	-40000.00	\N	\N	\N	SL000004	1000000		f	t	Sales for white washing machine	Admin	2021-06-11 05:14:56.065098-07	\N	\N	\N	Admin	2021-06-11 05:14:56.065098-07
43	100	4000001	2021-06-11	2	2	SALES	0	31000001	0	C	2000.00	0.00	5000.00	\N	\N	\N	SL000004	1000000		f	t	Profit Posting for Invoice SL000004	Admin	2021-06-11 05:14:56.065098-07	\N	\N	\N	Admin	2021-06-11 05:14:56.065098-07
44	100	4000001	2021-06-11	2	3	SALES	1000000000004	14000001	0	D	20000.00	0.00	0.00	\N	\N	\N	SL000004	118486586	\N	f	t	Bill Payment for Purchase SALES SL000004	Admin	2021-06-11 05:14:56.065098-07	\N	\N	\N	Admin	2021-06-11 05:14:56.065098-07
45	100	0	2021-06-26	1	1	STOCK	0	13100001	0	D	30.00	0.00	-40030.00	\N	\N	\N	ST00000004	0007	Admin	f	t	Stock for Chanachur	Admin	2021-06-26 02:35:48.501078-07	\N	\N	\N	Admin	2021-06-26 02:35:48.501078-07
46	100	0	2021-06-26	1	2	STOCK	0	13100001	0	D	14.00	0.00	-40044.00	\N	\N	\N	ST00000004	0007	Admin	f	t	Stock for Water	Admin	2021-06-26 02:35:48.501078-07	\N	\N	\N	Admin	2021-06-26 02:35:48.501078-07
47	100	0	2021-06-26	1	3	STOCK	0	13100001	0	D	18000.00	0.00	-58044.00	\N	\N	\N	ST00000004	0007	Admin	f	t	Stock for White Washing Machine	Admin	2021-06-26 02:35:48.501078-07	\N	\N	\N	Admin	2021-06-26 02:35:48.501078-07
48	100	0	2021-06-26	1	4	STOCK	1000000000011	24000001	13100000	C	18044.00	0.00	0.00	\N	\N	\N	ST00000004	0007	\N	f	t	Purchase bill for ST00000004	Admin	2021-06-26 02:35:48.501078-07	\N	\N	\N	Admin	2021-06-26 02:35:48.501078-07
49	100	4000001	2021-06-26	2	1	SALES	0	13100001	0	C	18000.00	0.00	-40044.00	\N	\N	\N	SL000005	1000000		f	t	Sales for white washing machine	Admin	2021-06-26 03:19:26.047432-07	\N	\N	\N	Admin	2021-06-26 03:19:26.047432-07
50	100	4000001	2021-06-26	2	2	SALES	0	31000001	0	C	2000.00	0.00	7000.00	\N	\N	\N	SL000005	1000000		f	t	Profit Posting for Invoice SL000005	Admin	2021-06-26 03:19:26.047432-07	\N	\N	\N	Admin	2021-06-26 03:19:26.047432-07
51	100	4000001	2021-06-26	2	3	SALES	0	11100001	13100001	D	200.00	0.00	17800.00	\N	\N	\N	SL000005	118486586	\N	f	t	Payment Receive for SALES SL000005	Admin	2021-06-26 03:19:26.047432-07	\N	\N	\N	Admin	2021-06-26 03:19:26.047432-07
474	100	4000001	2021-08-26	27	1	SALES	0	13100001	0	C	50.00	0.00	-31369502.00	\N	\N	\N	SL000089	1000000		f	t	Sales for Ata	Admin	2021-08-26 02:52:43.702033-07	\N	\N	\N	Admin	2021-08-26 02:52:43.702033-07
52	100	4000001	2021-06-26	2	4	SALES	1000000000004	14000001	13100001	C	200.00	0.00	-20000.00	\N	\N	\N	SL000005	118486586	\N	f	t	Payment Receive for SALES SL000005	Admin	2021-06-26 03:19:26.047432-07	\N	\N	\N	Admin	2021-06-26 03:19:26.047432-07
53	100	4000001	2021-06-26	2	5	SALES	1000000000004	14000001	13100001	D	20000.00	0.00	-19800.00	\N	\N	\N	SL000005	118486586	\N	f	t	Bill Payment for Purchase SALES SL000005	Admin	2021-06-26 03:19:26.047432-07	\N	\N	\N	Admin	2021-06-26 03:19:26.047432-07
54	100	0	2021-06-26	3	1	STOCK	0	13100001	0	D	250.00	0.00	-40294.00	\N	\N	\N	ST00000005	0002	Admin	f	t	Stock for Ata	Admin	2021-06-26 03:21:45.612564-07	\N	\N	\N	Admin	2021-06-26 03:21:45.612564-07
55	100	0	2021-06-26	3	2	STOCK	1000000000005	24000001	13100000	C	250.00	0.00	0.00	\N	\N	\N	ST00000005	0002	\N	f	t	Purchase bill for ST00000005	Admin	2021-06-26 03:21:45.612564-07	\N	\N	\N	Admin	2021-06-26 03:21:45.612564-07
56	100	0	2021-06-26	3	3	STOCK	0	11100001	13100000	C	200.00	0.00	18000.00	\N	\N	\N	ST00000005	0002	\N	f	t	Purchase payment for ST00000005	Admin	2021-06-26 03:21:45.612564-07	\N	\N	\N	Admin	2021-06-26 03:21:45.612564-07
57	100	0	2021-06-26	3	4	STOCK	1000000000005	24000001	13100000	D	200.00	0.00	250.00	\N	\N	\N	ST00000005	0002	\N	f	t	Purchase Payment for ST00000005	Admin	2021-06-26 03:21:45.612564-07	\N	\N	\N	Admin	2021-06-26 03:21:45.612564-07
58	100	4000001	2021-06-26	4	1	SALES	0	13100001	11100001	C	25.00	0.00	-40269.00	\N	\N	\N	SL000006	1000000		f	t	Sales for Ata	Admin	2021-06-26 03:59:16.924945-07	\N	\N	\N	Admin	2021-06-26 03:59:16.924945-07
59	100	4000001	2021-06-26	4	2	SALES	0	31000001	11100001	C	5.00	0.00	7005.00	\N	\N	\N	SL000006	1000000		f	t	Profit Posting for Invoice SL000006	Admin	2021-06-26 03:59:16.924945-07	\N	\N	\N	Admin	2021-06-26 03:59:16.924945-07
60	100	4000001	2021-06-26	4	3	SALES	0	11100001	13100001	D	30.00	0.00	17970.00	\N	\N	\N	SL000006	118486586	\N	f	t	Payment Receive for SALES SL000006	Admin	2021-06-26 03:59:16.924945-07	\N	\N	\N	Admin	2021-06-26 03:59:16.924945-07
61	100	4000001	2021-06-26	4	4	SALES	1000000000004	14000001	13100001	C	30.00	0.00	-39800.00	\N	\N	\N	SL000006	118486586	\N	f	t	Payment Receive for SALES SL000006	Admin	2021-06-26 03:59:16.924945-07	\N	\N	\N	Admin	2021-06-26 03:59:16.924945-07
62	100	4000001	2021-06-26	4	5	SALES	1000000000004	14000001	13100001	D	30.00	0.00	-39770.00	\N	\N	\N	SL000006	118486586	\N	f	t	Bill Payment for Purchase SALES SL000006	Admin	2021-06-26 03:59:16.924945-07	\N	\N	\N	Admin	2021-06-26 03:59:16.924945-07
63	100	4000001	2021-07-06	1	1	SALES	0	13100001	11100001	C	25.00	25.00	-40244.00	\N	\N	\N	SL000007	1000000		f	t	Sales for Ata	Admin	2021-07-06 09:16:02.485386-07	Admin	2021-07-06 09:16:58.120839-07	Cancel Invoice	Admin	2021-07-06 09:16:02.485386-07
64	100	4000001	2021-07-06	1	2	SALES	0	31000001	11100001	C	5.00	5.00	7010.00	\N	\N	\N	SL000007	1000000		f	t	Profit Posting for Invoice SL000007	Admin	2021-07-06 09:16:02.485386-07	Admin	2021-07-06 09:16:58.120839-07	Cancel Invoice	Admin	2021-07-06 09:16:02.485386-07
65	100	4000001	2021-07-06	1	3	SALES	0	11100001	13100001	D	30.00	30.00	17940.00	\N	\N	\N	SL000007	01749195756	\N	f	t	Payment Receive for SALES SL000007	Admin	2021-07-06 09:16:02.485386-07	Admin	2021-07-06 09:16:58.120839-07	Cancel Invoice	Admin	2021-07-06 09:16:02.485386-07
66	100	4000001	2021-07-06	1	4	SALES	1000000000001	14000001	13100001	C	30.00	30.00	-11300.00	\N	\N	\N	SL000007	01749195756	\N	f	t	Payment Receive for SALES SL000007	Admin	2021-07-06 09:16:02.485386-07	Admin	2021-07-06 09:16:58.120839-07	Cancel Invoice	Admin	2021-07-06 09:16:02.485386-07
67	100	4000001	2021-07-06	1	5	SALES	1000000000001	14000001	13100001	D	30.00	30.00	-11270.00	\N	\N	\N	SL000007	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000007	Admin	2021-07-06 09:16:02.485386-07	Admin	2021-07-06 09:16:58.120839-07	Cancel Invoice	Admin	2021-07-06 09:16:02.485386-07
68	100	4000001	2021-07-06	2	1	SALES	0	13100001	0	C	25.00	0.00	-40244.00	\N	\N	\N	SL000008	1000000		f	t	Sales for Ata	Admin	2021-07-06 09:37:07.561065-07	\N	\N	\N	Admin	2021-07-06 09:37:07.561065-07
69	100	4000001	2021-07-06	2	2	SALES	0	31000001	0	C	5.00	0.00	7010.00	\N	\N	\N	SL000008	1000000		f	t	Profit Posting for Invoice SL000008	Admin	2021-07-06 09:37:07.561065-07	\N	\N	\N	Admin	2021-07-06 09:37:07.561065-07
70	100	4000001	2021-07-06	2	3	SALES	1000000000001	14000001	0	D	30.00	0.00	-11300.00	\N	\N	\N	SL000008	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000008	Admin	2021-07-06 09:37:07.561065-07	\N	\N	\N	Admin	2021-07-06 09:37:07.561065-07
71	100	4000001	2021-07-06	3	1	SALES	0	13100001	0	C	25.00	0.00	-40219.00	\N	\N	\N	SL000009	1000000		f	t	Sales for Ata	Admin	2021-07-06 09:39:42.466846-07	\N	\N	\N	Admin	2021-07-06 09:39:42.466846-07
72	100	4000001	2021-07-06	3	2	SALES	0	31000001	0	C	5.00	0.00	7015.00	\N	\N	\N	SL000009	1000000		f	t	Profit Posting for Invoice SL000009	Admin	2021-07-06 09:39:42.466846-07	\N	\N	\N	Admin	2021-07-06 09:39:42.466846-07
73	100	4000001	2021-07-06	3	3	SALES	1000000000001	14000001	0	D	30.00	0.00	-11330.00	\N	\N	\N	SL000009	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000009	Admin	2021-07-06 09:39:42.466846-07	\N	\N	\N	Admin	2021-07-06 09:39:42.466846-07
74	100	4000001	2021-04-08	1	1	SALES	0	13100001	0	C	25.00	0.00	-40194.00	\N	\N	\N	SL000010	1000000		f	t	Sales for Ata	Admin	2021-07-06 09:41:07.379616-07	\N	\N	\N	Admin	2021-07-06 09:41:07.379616-07
75	100	4000001	2021-04-08	1	2	SALES	0	31000001	0	C	5.00	0.00	7020.00	\N	\N	\N	SL000010	1000000		f	t	Profit Posting for Invoice SL000010	Admin	2021-07-06 09:41:07.379616-07	\N	\N	\N	Admin	2021-07-06 09:41:07.379616-07
76	100	4000001	2021-04-08	1	3	SALES	1000000000001	14000001	0	D	30.00	0.00	-11360.00	\N	\N	\N	SL000010	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000010	Admin	2021-07-06 09:41:07.379616-07	\N	\N	\N	Admin	2021-07-06 09:41:07.379616-07
77	100	0	2021-07-06	4	1	STOCK	0	13100001	0	D	600000.00	0.00	-640194.00	\N	\N	\N	ST00000006	0008	Admin	f	t	Stock for Aci Garden Chair	Admin	2021-07-06 10:34:26.351995-07	\N	\N	\N	Admin	2021-07-06 10:34:26.351995-07
78	100	0	2021-07-06	4	2	STOCK	1000000000014	24000001	13100000	C	600000.00	0.00	0.00	\N	\N	\N	ST00000006	0008	\N	f	t	Purchase bill for ST00000006	Admin	2021-07-06 10:34:26.351995-07	\N	\N	\N	Admin	2021-07-06 10:34:26.351995-07
79	100	0	2021-07-06	4	3	STOCK	0	11100001	13100000	C	500000.00	0.00	517970.00	\N	\N	\N	ST00000006	0008	\N	f	t	Purchase payment for ST00000006	Admin	2021-07-06 10:34:26.351995-07	\N	\N	\N	Admin	2021-07-06 10:34:26.351995-07
80	100	0	2021-07-06	4	4	STOCK	1000000000014	24000001	13100000	D	500000.00	0.00	600000.00	\N	\N	\N	ST00000006	0008	\N	f	t	Purchase Payment for ST00000006	Admin	2021-07-06 10:34:26.351995-07	\N	\N	\N	Admin	2021-07-06 10:34:26.351995-07
81	100	4000001	2021-07-06	5	1	SALES	0	13100001	0	C	12000.00	0.00	-628194.00	\N	\N	\N	SL000011	1000000		f	t	Sales for Aci garden chair	Admin	2021-07-06 10:41:27.548162-07	\N	\N	\N	Admin	2021-07-06 10:41:27.548162-07
82	100	4000001	2021-07-06	5	2	SALES	0	31000001	0	C	4000.00	0.00	11020.00	\N	\N	\N	SL000011	1000000		f	t	Profit Posting for Invoice SL000011	Admin	2021-07-06 10:41:27.548162-07	\N	\N	\N	Admin	2021-07-06 10:41:27.548162-07
83	100	4000001	2021-07-06	5	3	SALES	0	11100001	13100001	D	10000.00	0.00	507970.00	\N	\N	\N	SL000011	01749195756	\N	f	t	Payment Receive for SALES SL000011	Admin	2021-07-06 10:41:27.548162-07	\N	\N	\N	Admin	2021-07-06 10:41:27.548162-07
84	100	4000001	2021-07-06	5	4	SALES	1000000000001	14000001	13100001	C	10000.00	0.00	-11390.00	\N	\N	\N	SL000011	01749195756	\N	f	t	Payment Receive for SALES SL000011	Admin	2021-07-06 10:41:27.548162-07	\N	\N	\N	Admin	2021-07-06 10:41:27.548162-07
85	100	4000001	2021-07-06	5	5	SALES	1000000000001	14000001	13100001	D	16000.00	0.00	-1390.00	\N	\N	\N	SL000011	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000011	Admin	2021-07-06 10:41:27.548162-07	\N	\N	\N	Admin	2021-07-06 10:41:27.548162-07
90	100	0	2021-07-06	6	1	SALES	0	13100001	11100001	C	6000.00	0.00	-622194.00	\N	\N	\N	SL000012	1000000		f	t	Sales for Aci garden chair	Admin	2021-07-06 10:46:00.187395-07	\N	\N	\N	Admin	2021-07-06 10:46:00.187395-07
91	100	0	2021-07-06	6	2	SALES	0	31000001	11100001	C	2000.00	0.00	13020.00	\N	\N	\N	SL000012	1000000		f	t	Profit Posting for Invoice SL000012	Admin	2021-07-06 10:46:00.187395-07	\N	\N	\N	Admin	2021-07-06 10:46:00.187395-07
92	100	0	2021-07-06	6	3	SALES	0	11100001	13100001	D	8000.00	0.00	499970.00	\N	\N	\N	SL000012	9999999999999	\N	f	t	Payment Receive for SALES SL000012	Admin	2021-07-06 10:46:00.187395-07	\N	\N	\N	Admin	2021-07-06 10:46:00.187395-07
93	100	0	2021-07-06	6	4	SALES	9999999999999	59000001	13100001	C	8000.00	0.00	0.00	\N	\N	\N	SL000012	9999999999999	\N	f	t	Payment Receive for SALES SL000012	Admin	2021-07-06 10:46:00.187395-07	\N	\N	\N	Admin	2021-07-06 10:46:00.187395-07
94	100	0	2021-07-06	6	5	SALES	9999999999999	59000001	13100001	D	8000.00	0.00	8000.00	\N	\N	\N	SL000012	9999999999999	\N	f	t	Bill Payment for Purchase SALES SL000012	Admin	2021-07-06 10:46:00.187395-07	\N	\N	\N	Admin	2021-07-06 10:46:00.187395-07
101	100	4000001	2021-07-07	1	1	SALES	0	13100001	0	C	6000.00	0.00	-610194.00	\N	\N	\N	SL000014	1000000		f	t	Sales for Aci garden chair	Admin	2021-07-07 09:44:44.5976-07	\N	\N	\N	Admin	2021-07-07 09:44:44.5976-07
102	100	4000001	2021-07-07	1	2	SALES	0	31000001	0	C	2000.00	0.00	17020.00	\N	\N	\N	SL000014	1000000		f	t	Profit Posting for Invoice SL000014	Admin	2021-07-07 09:44:44.5976-07	\N	\N	\N	Admin	2021-07-07 09:44:44.5976-07
103	100	4000001	2021-07-07	1	3	SALES	0	11100001	13100001	D	7000.00	0.00	485470.00	\N	\N	\N	SL000014	01749195756	\N	f	t	Payment Receive for SALES SL000014	Admin	2021-07-07 09:44:44.5976-07	\N	\N	\N	Admin	2021-07-07 09:44:44.5976-07
104	100	4000001	2021-07-07	1	4	SALES	1000000000001	14000001	13100001	C	7000.00	0.00	-17390.00	\N	\N	\N	SL000014	01749195756	\N	f	t	Payment Receive for SALES SL000014	Admin	2021-07-07 09:44:44.5976-07	\N	\N	\N	Admin	2021-07-07 09:44:44.5976-07
105	100	4000001	2021-07-07	1	5	SALES	1000000000001	14000001	13100001	D	8000.00	0.00	-10390.00	\N	\N	\N	SL000014	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000014	Admin	2021-07-07 09:44:44.5976-07	\N	\N	\N	Admin	2021-07-07 09:44:44.5976-07
108	100	0	2021-07-11	2	1	STOCK	0	13100001	0	D	50000.00	50000.00	-710194.00	\N	\N	\N	ST00000008	0007	Admin	f	t	Stock for Mobile Phone	Admin	2021-07-10 21:47:40.353686-07	Admin	2021-07-10 21:58:58.021703-07	Cancel Stock	Admin	2021-07-10 21:47:40.353686-07
109	100	0	2021-07-11	2	2	STOCK	1000000000011	24000001	13100000	C	50000.00	50000.00	18044.00	\N	\N	\N	ST00000008	0007	\N	f	t	Purchase bill for ST00000008	Admin	2021-07-10 21:47:40.353686-07	Admin	2021-07-10 21:58:58.021703-07	Cancel Stock	Admin	2021-07-10 21:47:40.353686-07
106	100	0	2021-07-11	1	1	STOCK	0	13100001	0	D	50000.00	50000.00	-660194.00	\N	\N	\N	ST00000007	0002	Admin	f	t	Stock for Mobile Phone	Admin	2021-07-10 21:46:16.730956-07	Admin	2021-07-10 21:57:57.050611-07	Cancel Stock	Admin	2021-07-10 21:46:16.730956-07
107	100	0	2021-07-11	1	2	STOCK	1000000000005	24000001	13100000	C	50000.00	50000.00	50.00	\N	\N	\N	ST00000007	0002	\N	f	t	Purchase bill for ST00000007	Admin	2021-07-10 21:46:16.730956-07	Admin	2021-07-10 21:57:57.050611-07	Cancel Stock	Admin	2021-07-10 21:46:16.730956-07
116	100	0	2021-07-11	6	1	STOCK	0	13100001	0	D	140.00	0.00	-610334.00	\N	\N	\N	ST00000012	0002	Admin	f	t	Stock for Water	Admin	2021-07-10 22:06:52.536575-07	\N	\N	\N	Admin	2021-07-10 22:06:52.536575-07
117	100	0	2021-07-11	6	2	STOCK	1000000000005	24000001	13100000	C	140.00	0.00	50.00	\N	\N	\N	ST00000012	0002	\N	f	t	Purchase bill for ST00000012	Admin	2021-07-10 22:06:52.536575-07	\N	\N	\N	Admin	2021-07-10 22:06:52.536575-07
114	100	0	2021-07-11	5	1	STOCK	0	13100001	0	D	140.00	140.00	-710614.00	\N	\N	\N	ST00000011	0002	Admin	f	t	Stock for Water	Admin	2021-07-10 21:57:37.368752-07	Admin	2021-07-10 21:58:14.078475-07	Cancel Stock	Admin	2021-07-10 21:57:37.368752-07
115	100	0	2021-07-11	5	2	STOCK	1000000000005	24000001	13100000	C	140.00	140.00	50330.00	\N	\N	\N	ST00000011	0002	\N	f	t	Purchase bill for ST00000011	Admin	2021-07-10 21:57:37.368752-07	Admin	2021-07-10 21:58:14.078475-07	Cancel Stock	Admin	2021-07-10 21:57:37.368752-07
112	100	0	2021-07-11	4	1	STOCK	0	13100001	0	D	140.00	140.00	-710474.00	\N	\N	\N	ST00000010	0002	Admin	f	t	Stock for Water	Admin	2021-07-10 21:55:13.89085-07	Admin	2021-07-10 21:58:19.26562-07	Cancel Stock	Admin	2021-07-10 21:55:13.89085-07
113	100	0	2021-07-11	4	2	STOCK	1000000000005	24000001	13100000	C	140.00	140.00	50190.00	\N	\N	\N	ST00000010	0002	\N	f	t	Purchase bill for ST00000010	Admin	2021-07-10 21:55:13.89085-07	Admin	2021-07-10 21:58:19.26562-07	Cancel Stock	Admin	2021-07-10 21:55:13.89085-07
110	100	0	2021-07-11	3	1	STOCK	0	13100001	0	D	140.00	140.00	-710334.00	\N	\N	\N	ST00000009	0002	Admin	f	t	Stock for Water	Admin	2021-07-10 21:52:33.597628-07	Admin	2021-07-10 21:58:53.660485-07	Cancel Stock	Admin	2021-07-10 21:52:33.597628-07
111	100	0	2021-07-11	3	2	STOCK	1000000000005	24000001	13100000	C	140.00	140.00	50050.00	\N	\N	\N	ST00000009	0002	\N	f	t	Purchase bill for ST00000009	Admin	2021-07-10 21:52:33.597628-07	Admin	2021-07-10 21:58:53.660485-07	Cancel Stock	Admin	2021-07-10 21:52:33.597628-07
120	100	0	2021-07-11	8	1	STOCK	0	13100001	0	D	50000.00	50000.00	-660474.00	\N	\N	\N	ST00000014	0007	Admin	f	t	Stock for Mobile Phone	Admin	2021-07-10 22:10:22.482197-07	Admin	2021-07-10 22:13:15.390927-07	Cancel Stock	Admin	2021-07-10 22:10:22.482197-07
121	100	0	2021-07-11	8	2	STOCK	1000000000011	24000001	13100000	C	50000.00	50000.00	18044.00	\N	\N	\N	ST00000014	0007	\N	f	t	Purchase bill for ST00000014	Admin	2021-07-10 22:10:22.482197-07	Admin	2021-07-10 22:13:15.390927-07	Cancel Stock	Admin	2021-07-10 22:10:22.482197-07
122	100	0	2021-07-11	9	1	STOCK	0	13100001	0	D	50000.00	50000.00	-710474.00	\N	\N	\N	ST00000015	0007	Admin	f	t	Stock for Mobile Phone	Admin	2021-07-10 22:12:08.309015-07	Admin	2021-07-10 22:13:09.512158-07	Cancel Stock	Admin	2021-07-10 22:12:08.309015-07
123	100	0	2021-07-11	9	2	STOCK	1000000000011	24000001	13100000	C	50000.00	50000.00	68044.00	\N	\N	\N	ST00000015	0007	\N	f	t	Purchase bill for ST00000015	Admin	2021-07-10 22:12:08.309015-07	Admin	2021-07-10 22:13:09.512158-07	Cancel Stock	Admin	2021-07-10 22:12:08.309015-07
118	100	0	2021-07-11	7	1	STOCK	0	13100001	0	D	140.00	140.00	-610474.00	\N	\N	\N	ST00000013	0002	Admin	f	t	Stock for Water	Admin	2021-07-10 22:08:55.582213-07	Admin	2021-07-10 22:13:25.195043-07	Cancel Stock	Admin	2021-07-10 22:08:55.582213-07
119	100	0	2021-07-11	7	2	STOCK	1000000000005	24000001	13100000	C	140.00	140.00	190.00	\N	\N	\N	ST00000013	0002	\N	f	t	Purchase bill for ST00000013	Admin	2021-07-10 22:08:55.582213-07	Admin	2021-07-10 22:13:25.195043-07	Cancel Stock	Admin	2021-07-10 22:08:55.582213-07
124	100	0	2021-07-11	10	1	STOCK	0	13100001	0	D	180000.00	0.00	-790334.00	\N	\N	\N	ST00000016	0006	Admin	f	t	Stock for White Washing Machine	Admin	2021-07-10 22:15:50.130016-07	\N	\N	\N	Admin	2021-07-10 22:15:50.130016-07
125	100	0	2021-07-11	10	2	STOCK	1000000000010	24000001	13100000	C	180000.00	0.00	0.00	\N	\N	\N	ST00000016	0006	\N	f	t	Purchase bill for ST00000016	Admin	2021-07-10 22:15:50.130016-07	\N	\N	\N	Admin	2021-07-10 22:15:50.130016-07
126	100	0	2021-07-11	11	1	STOCK	0	13100001	0	D	216000.00	0.00	-1006334.00	\N	\N	\N	ST00000017	0006	Admin	f	t	Stock for White Washing Machine	Admin	2021-07-10 22:17:42.70664-07	\N	\N	\N	Admin	2021-07-10 22:17:42.70664-07
127	100	0	2021-07-11	11	2	STOCK	1000000000010	24000001	13100000	C	216000.00	0.00	180000.00	\N	\N	\N	ST00000017	0006	\N	f	t	Purchase bill for ST00000017	Admin	2021-07-10 22:17:42.70664-07	\N	\N	\N	Admin	2021-07-10 22:17:42.70664-07
128	100	0	2021-07-11	12	1	STOCK	0	13100001	0	D	180000.00	0.00	-1186334.00	\N	\N	\N	ST00000019	0002	Admin	f	t	Stock for White Washing Machine	Admin	2021-07-11 00:39:22.285268-07	\N	\N	\N	Admin	2021-07-11 00:39:22.285268-07
129	100	0	2021-07-11	12	2	STOCK	1000000000005	24000001	13100000	C	180000.00	0.00	190.00	\N	\N	\N	ST00000019	0002	\N	f	t	Purchase bill for ST00000019	Admin	2021-07-11 00:39:22.285268-07	\N	\N	\N	Admin	2021-07-11 00:39:22.285268-07
130	100	0	2021-07-11	12	3	STOCK	0	11100001	13100000	C	180000.00	0.00	665470.00	\N	\N	\N	ST00000019	0002	\N	f	t	Purchase payment for ST00000019	Admin	2021-07-11 00:39:22.285268-07	\N	\N	\N	Admin	2021-07-11 00:39:22.285268-07
131	100	0	2021-07-11	12	4	STOCK	1000000000005	24000001	13100000	D	180000.00	0.00	180190.00	\N	\N	\N	ST00000019	0002	\N	f	t	Purchase Payment for ST00000019	Admin	2021-07-11 00:39:22.285268-07	\N	\N	\N	Admin	2021-07-11 00:39:22.285268-07
132	100	0	2021-07-11	13	1	STOCK	0	13100001	0	D	375.00	0.00	-1186709.00	\N	\N	\N	ST00000021	0002	Admin	f	t	Stock for Ata	Admin	2021-07-11 02:13:45.377568-07	\N	\N	\N	Admin	2021-07-11 02:13:45.377568-07
133	100	0	2021-07-11	13	2	STOCK	1000000000005	24000001	13100000	C	375.00	0.00	190.00	\N	\N	\N	ST00000021	0002	\N	f	t	Purchase bill for ST00000021	Admin	2021-07-11 02:13:45.377568-07	\N	\N	\N	Admin	2021-07-11 02:13:45.377568-07
134	100	0	2021-07-11	14	1	STOCK	0	13100001	0	D	330.00	0.00	-1187039.00	\N	\N	\N	ST00000022	0004	Admin	f	t	Stock for Chanachur	Admin	2021-07-11 02:15:12.345668-07	\N	\N	\N	Admin	2021-07-11 02:15:12.345668-07
135	100	0	2021-07-11	14	2	STOCK	1000000000007	24000001	13100000	C	330.00	0.00	0.00	\N	\N	\N	ST00000022	0004	\N	f	t	Purchase bill for ST00000022	Admin	2021-07-11 02:15:12.345668-07	\N	\N	\N	Admin	2021-07-11 02:15:12.345668-07
136	100	0	2021-07-11	14	3	STOCK	0	11100001	13100000	C	330.00	0.00	665800.00	\N	\N	\N	ST00000022	0004	\N	f	t	Purchase payment for ST00000022	Admin	2021-07-11 02:15:12.345668-07	\N	\N	\N	Admin	2021-07-11 02:15:12.345668-07
137	100	0	2021-07-11	14	4	STOCK	1000000000007	24000001	13100000	D	330.00	0.00	330.00	\N	\N	\N	ST00000022	0004	\N	f	t	Purchase Payment for ST00000022	Admin	2021-07-11 02:15:12.345668-07	\N	\N	\N	Admin	2021-07-11 02:15:12.345668-07
138	100	0	2021-07-12	1	1	STOCK	0	13100001	0	D	25.00	0.00	-1187064.00	\N	\N	\N	ST00000025	0002	Admin	f	t	Stock for Ata	Admin	2021-07-12 02:20:03.387766-07	\N	\N	\N	Admin	2021-07-12 02:20:03.387766-07
139	100	0	2021-07-12	1	2	STOCK	1000000000005	24000001	13100000	C	25.00	0.00	565.00	\N	\N	\N	ST00000025	0002	\N	f	t	Purchase bill for ST00000025	Admin	2021-07-12 02:20:03.387766-07	\N	\N	\N	Admin	2021-07-12 02:20:03.387766-07
140	100	4000001	2021-08-13	1	1	SALES	0	13100001	0	C	5000.00	0.00	-1182064.00	\N	\N	\N	SL000015	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-13 02:20:25.470538-07	\N	\N	\N	Admin	2021-08-13 02:20:25.470538-07
141	100	4000001	2021-08-13	1	2	SALES	0	31000001	0	C	1000.00	0.00	18020.00	\N	\N	\N	SL000015	1000000		f	t	Profit Posting for Invoice SL000015	Admin	2021-08-13 02:20:25.470538-07	\N	\N	\N	Admin	2021-08-13 02:20:25.470538-07
143	100	0	2021-08-13	2	1	STOCK	0	13100001	0	D	3000.00	0.00	-1185064.00	\N	\N	\N	ST00000074	0004	Admin	f	t	Stock for Chanachur	Admin	2021-08-13 02:26:38.611974-07	\N	\N	\N	Admin	2021-08-13 02:26:38.611974-07
144	100	0	2021-08-13	2	2	STOCK	1000000000007	24000001	13100000	C	3000.00	0.00	0.00	\N	\N	\N	ST00000074	0004	\N	f	t	Purchase bill for ST00000074	Admin	2021-08-13 02:26:38.611974-07	\N	\N	\N	Admin	2021-08-13 02:26:38.611974-07
145	100	4000001	2021-08-13	3	1	SALES	0	13100001	0	C	60.00	0.00	-1185004.00	\N	\N	\N	SL000016	1000000		f	t	Sales for Chanachur	Admin	2021-08-13 02:27:52.432185-07	\N	\N	\N	Admin	2021-08-13 02:27:52.432185-07
146	100	4000001	2021-08-13	3	2	SALES	0	31000001	0	C	10.00	0.00	18030.00	\N	\N	\N	SL000016	1000000		f	t	Profit Posting for Invoice SL000016	Admin	2021-08-13 02:27:52.432185-07	\N	\N	\N	Admin	2021-08-13 02:27:52.432185-07
147	100	4000001	2021-08-13	3	3	SALES	1000000000004	14000001	0	D	70.00	0.00	-39800.00	\N	\N	\N	SL000016	118486586	\N	f	t	Bill Payment for Purchase SALES SL000016	Admin	2021-08-13 02:27:52.432185-07	\N	\N	\N	Admin	2021-08-13 02:27:52.432185-07
148	100	0	2021-08-13	4	1	STOCK	0	13100001	0	D	2500.00	0.00	-1187504.00	\N	\N	\N	ST00000075	0004	Admin	f	t	Stock for Ata	Admin	2021-08-13 02:32:16.620175-07	\N	\N	\N	Admin	2021-08-13 02:32:16.620175-07
149	100	0	2021-08-13	4	2	STOCK	1000000000007	24000001	13100000	C	2500.00	0.00	3000.00	\N	\N	\N	ST00000075	0004	\N	f	t	Purchase bill for ST00000075	Admin	2021-08-13 02:32:16.620175-07	\N	\N	\N	Admin	2021-08-13 02:32:16.620175-07
150	100	4000001	2021-08-13	5	1	SALES	0	13100001	0	C	25.00	0.00	-1187479.00	\N	\N	\N	SL000017	1000000		f	t	Sales for Ata	Admin	2021-08-13 02:38:20.431668-07	\N	\N	\N	Admin	2021-08-13 02:38:20.431668-07
151	100	4000001	2021-08-13	5	2	SALES	0	31000001	0	C	5.00	0.00	18035.00	\N	\N	\N	SL000017	1000000		f	t	Profit Posting for Invoice SL000017	Admin	2021-08-13 02:38:20.431668-07	\N	\N	\N	Admin	2021-08-13 02:38:20.431668-07
152	100	4000001	2021-08-13	5	3	SALES	1000000000001	14000001	0	D	30.00	0.00	-18390.00	\N	\N	\N	SL000017	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000017	Admin	2021-08-13 02:38:20.431668-07	\N	\N	\N	Admin	2021-08-13 02:38:20.431668-07
153	100	4000001	2021-08-13	6	1	SALES	0	13100001	0	C	25.00	0.00	-1187454.00	\N	\N	\N	SL000018	1000000		f	t	Sales for Ata	Admin	2021-08-13 02:44:53.333008-07	\N	\N	\N	Admin	2021-08-13 02:44:53.333008-07
154	100	4000001	2021-08-13	6	2	SALES	0	31000001	0	C	5.00	0.00	18040.00	\N	\N	\N	SL000018	1000000		f	t	Profit Posting for Invoice SL000018	Admin	2021-08-13 02:44:53.333008-07	\N	\N	\N	Admin	2021-08-13 02:44:53.333008-07
155	100	4000001	2021-08-13	6	3	SALES	1000000000004	14000001	0	D	30.00	0.00	-39870.00	\N	\N	\N	SL000018	118486586	\N	f	t	Bill Payment for Purchase SALES SL000018	Admin	2021-08-13 02:44:53.333008-07	\N	\N	\N	Admin	2021-08-13 02:44:53.333008-07
156	100	0	2021-08-13	7	1	STOCK	0	13100001	0	D	1400.00	0.00	-1188854.00	\N	\N	\N	ST00000076	0005	Admin	f	t	Stock for Water	Admin	2021-08-13 02:49:13.860985-07	\N	\N	\N	Admin	2021-08-13 02:49:13.860985-07
157	100	0	2021-08-13	7	2	STOCK	1000000000009	24000001	13100000	C	1400.00	0.00	0.00	\N	\N	\N	ST00000076	0005	\N	f	t	Purchase bill for ST00000076	Admin	2021-08-13 02:49:13.860985-07	\N	\N	\N	Admin	2021-08-13 02:49:13.860985-07
163	100	4000001	2021-08-13	10	1	SALES	0	13100001	0	C	12000.00	0.00	-1178229.00	\N	\N	\N	SL000020	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-13 06:24:03.82957-07	\N	\N	\N	Admin	2021-08-13 06:24:03.82957-07
164	100	4000001	2021-08-13	10	2	SALES	0	31000001	0	C	4000.00	0.00	22045.00	\N	\N	\N	SL000020	1000000		f	t	Profit Posting for Invoice SL000020	Admin	2021-08-13 06:24:03.82957-07	\N	\N	\N	Admin	2021-08-13 06:24:03.82957-07
165	100	4000001	2021-08-13	10	3	SALES	1000000000004	14000001	0	D	16000.00	0.00	-39900.00	\N	\N	\N	SL000020	118486586	\N	f	t	Bill Payment for Purchase SALES SL000020	Admin	2021-08-13 06:24:03.82957-07	\N	\N	\N	Admin	2021-08-13 06:24:03.82957-07
166	100	4000001	2021-08-13	11	1	SALES	0	13100001	0	C	18000.00	0.00	-1160229.00	\N	\N	\N	SL000021	1000000		f	t	Sales for white washing machine	Admin	2021-08-13 06:36:40.459588-07	\N	\N	\N	Admin	2021-08-13 06:36:40.459588-07
167	100	4000001	2021-08-13	11	2	SALES	0	31000001	0	C	2000.00	0.00	24045.00	\N	\N	\N	SL000021	1000000		f	t	Profit Posting for Invoice SL000021	Admin	2021-08-13 06:36:40.459588-07	\N	\N	\N	Admin	2021-08-13 06:36:40.459588-07
169	100	4000001	2021-08-13	12	1	SALES	0	13100001	0	C	14.00	14.00	-1160215.00	\N	\N	\N	SL000022	1000000		f	t	Sales for Water	Admin	2021-08-13 06:42:19.525401-07	Admin	2021-08-26 02:43:31.66086-07	Cancel Invoice	Admin	2021-08-13 06:42:19.525401-07
170	100	4000001	2021-08-13	12	2	SALES	0	31000001	0	C	8.00	8.00	24053.00	\N	\N	\N	SL000022	1000000		f	t	Profit Posting for Invoice SL000022	Admin	2021-08-13 06:42:19.525401-07	Admin	2021-08-26 02:43:31.66086-07	Cancel Invoice	Admin	2021-08-13 06:42:19.525401-07
172	100	0	2021-08-14	1	1	STOCK	0	13100001	0	D	900000.00	0.00	-2060215.00	\N	\N	\N	ST00000077	0002	Admin	f	t	Stock for White Washing Machine	Admin	2021-08-13 22:28:58.693241-07	\N	\N	\N	Admin	2021-08-13 22:28:58.693241-07
173	100	0	2021-08-14	1	2	STOCK	1000000000005	24000001	13100000	C	900000.00	0.00	590.00	\N	\N	\N	ST00000077	0002	\N	f	t	Purchase bill for ST00000077	Admin	2021-08-13 22:28:58.693241-07	\N	\N	\N	Admin	2021-08-13 22:28:58.693241-07
177	100	0	2021-08-14	3	1	STOCK	0	13100001	0	D	2500000.00	0.00	-4542215.00	\N	\N	\N	ST00000078	0002	Admin	f	t	Stock for Mobile Phone	Admin	2021-08-13 22:37:35.331351-07	\N	\N	\N	Admin	2021-08-13 22:37:35.331351-07
178	100	0	2021-08-14	3	2	STOCK	0	13100001	0	D	900000.00	0.00	-5442215.00	\N	\N	\N	ST00000078	0002	Admin	f	t	Stock for White Washing Machine	Admin	2021-08-13 22:37:35.331351-07	\N	\N	\N	Admin	2021-08-13 22:37:35.331351-07
179	100	0	2021-08-14	3	3	STOCK	1000000000005	24000001	13100000	C	3400000.00	0.00	900590.00	\N	\N	\N	ST00000078	0002	\N	f	t	Purchase bill for ST00000078	Admin	2021-08-13 22:37:35.331351-07	\N	\N	\N	Admin	2021-08-13 22:37:35.331351-07
180	100	0	2021-08-14	4	1	STOCK	0	13100001	0	D	2500000.00	0.00	-7942215.00	\N	\N	\N	ST00000079	0002	Admin	f	t	Stock for Mobile Phone	Admin	2021-08-13 22:38:23.847779-07	\N	\N	\N	Admin	2021-08-13 22:38:23.847779-07
181	100	0	2021-08-14	4	2	STOCK	1000000000005	24000001	13100000	C	2500000.00	0.00	4300590.00	\N	\N	\N	ST00000079	0002	\N	f	t	Purchase bill for ST00000079	Admin	2021-08-13 22:38:23.847779-07	\N	\N	\N	Admin	2021-08-13 22:38:23.847779-07
182	100	0	2021-08-14	5	1	STOCK	0	13100001	0	D	3000000.00	0.00	-10942215.00	\N	\N	\N	ST00000080	0002	Admin	f	t	Stock for Aci Garden Chair	Admin	2021-08-14 00:09:24.284671-07	\N	\N	\N	Admin	2021-08-14 00:09:24.284671-07
183	100	0	2021-08-14	5	2	STOCK	1000000000005	24000001	13100000	C	3000000.00	0.00	6800590.00	\N	\N	\N	ST00000080	0002	\N	f	t	Purchase bill for ST00000080	Admin	2021-08-14 00:09:24.284671-07	\N	\N	\N	Admin	2021-08-14 00:09:24.284671-07
184	100	4000001	2021-08-14	6	1	SALES	0	13100001	0	C	60000.00	0.00	-10882215.00	\N	\N	\N	SL000024	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-14 00:10:35.978732-07	\N	\N	\N	Admin	2021-08-14 00:10:35.978732-07
185	100	4000001	2021-08-14	6	2	SALES	0	31000001	0	C	20000.00	0.00	46053.00	\N	\N	\N	SL000024	1000000		f	t	Profit Posting for Invoice SL000024	Admin	2021-08-14 00:10:35.978732-07	\N	\N	\N	Admin	2021-08-14 00:10:35.978732-07
186	100	4000001	2021-08-14	6	3	SALES	1000000000001	14000001	0	D	80000.00	0.00	-38472.00	\N	\N	\N	SL000024	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000024	Admin	2021-08-14 00:10:35.978732-07	\N	\N	\N	Admin	2021-08-14 00:10:35.978732-07
187	100	0	2021-08-14	7	1	STOCK	0	13100001	0	D	6000000.00	0.00	-16882215.00	\N	\N	\N	ST00000081	9999999999999	Admin	f	t	Stock for Aci Garden Chair	Admin	2021-08-14 00:12:01.103774-07	\N	\N	\N	Admin	2021-08-14 00:12:01.103774-07
188	100	0	2021-08-14	7	2	STOCK	9999999999999	59000001	13100000	C	6000000.00	0.00	0.00	\N	\N	\N	ST00000081	9999999999999	\N	f	t	Purchase bill for ST00000081	Admin	2021-08-14 00:12:01.103774-07	\N	\N	\N	Admin	2021-08-14 00:12:01.103774-07
189	100	4000001	2021-08-14	8	1	SALES	0	13100001	0	C	30000.00	0.00	-16852215.00	\N	\N	\N	SL000025	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-14 00:13:18.338246-07	\N	\N	\N	Admin	2021-08-14 00:13:18.338246-07
190	100	4000001	2021-08-14	8	2	SALES	0	31000001	0	C	10000.00	0.00	56053.00	\N	\N	\N	SL000025	1000000		f	t	Profit Posting for Invoice SL000025	Admin	2021-08-14 00:13:18.338246-07	\N	\N	\N	Admin	2021-08-14 00:13:18.338246-07
191	100	4000001	2021-08-14	8	3	SALES	1000000000001	14000001	0	D	40000.00	0.00	-118472.00	\N	\N	\N	SL000025	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000025	Admin	2021-08-14 00:13:18.338246-07	\N	\N	\N	Admin	2021-08-14 00:13:18.338246-07
192	100	0	2021-08-14	9	1	STOCK	0	13100001	0	D	1400.00	0.00	-16853615.00	\N	\N	\N	ST00000082	9999999999999	Admin	f	t	Stock for Water	Admin	2021-08-14 00:16:57.03692-07	\N	\N	\N	Admin	2021-08-14 00:16:57.03692-07
193	100	0	2021-08-14	9	2	STOCK	9999999999999	59000001	13100000	C	1400.00	0.00	6000000.00	\N	\N	\N	ST00000082	9999999999999	\N	f	t	Purchase bill for ST00000082	Admin	2021-08-14 00:16:57.03692-07	\N	\N	\N	Admin	2021-08-14 00:16:57.03692-07
194	100	4000001	2021-08-14	10	1	SALES	0	13100001	0	C	42.00	0.00	-16853573.00	\N	\N	\N	SL000026	1000000		f	t	Sales for Water	Admin	2021-08-14 00:18:43.066331-07	\N	\N	\N	Admin	2021-08-14 00:18:43.066331-07
195	100	4000001	2021-08-14	10	2	SALES	0	31000001	0	C	24.00	0.00	56077.00	\N	\N	\N	SL000026	1000000		f	t	Profit Posting for Invoice SL000026	Admin	2021-08-14 00:18:43.066331-07	\N	\N	\N	Admin	2021-08-14 00:18:43.066331-07
197	100	0	2021-08-14	11	1	STOCK	0	13100001	0	D	3000.00	0.00	-16856573.00	\N	\N	\N	ST00000083	9999999999999	Admin	f	t	Stock for Chanachur	Admin	2021-08-14 00:21:09.04099-07	\N	\N	\N	Admin	2021-08-14 00:21:09.04099-07
198	100	0	2021-08-14	11	2	STOCK	9999999999999	59000001	13100000	C	3000.00	0.00	6001400.00	\N	\N	\N	ST00000083	9999999999999	\N	f	t	Purchase bill for ST00000083	Admin	2021-08-14 00:21:09.04099-07	\N	\N	\N	Admin	2021-08-14 00:21:09.04099-07
199	100	0	2021-08-14	12	1	STOCK	0	13100001	0	D	12000.00	0.00	-16868573.00	\N	\N	\N	ST00000084	0002	Admin	f	t	Stock for Chanachur	Admin	2021-08-14 00:21:37.199565-07	\N	\N	\N	Admin	2021-08-14 00:21:37.199565-07
200	100	0	2021-08-14	12	2	STOCK	1000000000005	24000001	13100000	C	12000.00	0.00	9800590.00	\N	\N	\N	ST00000084	0002	\N	f	t	Purchase bill for ST00000084	Admin	2021-08-14 00:21:37.199565-07	\N	\N	\N	Admin	2021-08-14 00:21:37.199565-07
201	100	4000001	2021-08-14	13	1	SALES	0	13100001	0	C	150.00	0.00	-16868423.00	\N	\N	\N	SL000027	1000000		f	t	Sales for Chanachur	Admin	2021-08-14 00:23:37.408224-07	\N	\N	\N	Admin	2021-08-14 00:23:37.408224-07
202	100	4000001	2021-08-14	13	2	SALES	0	31000001	0	C	25.00	0.00	56102.00	\N	\N	\N	SL000027	1000000		f	t	Profit Posting for Invoice SL000027	Admin	2021-08-14 00:23:37.408224-07	\N	\N	\N	Admin	2021-08-14 00:23:37.408224-07
204	100	4000001	2021-08-14	14	1	SALES	0	13100001	0	C	50000.00	0.00	-16818423.00	\N	\N	\N	SL000028	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-14 02:39:26.497909-07	\N	\N	\N	Admin	2021-08-14 02:39:26.497909-07
205	100	4000001	2021-08-14	14	2	SALES	0	31000001	0	C	10000.00	0.00	66102.00	\N	\N	\N	SL000028	1000000		f	t	Profit Posting for Invoice SL000028	Admin	2021-08-14 02:39:26.497909-07	\N	\N	\N	Admin	2021-08-14 02:39:26.497909-07
206	100	4000001	2021-08-14	14	3	SALES	1000000000004	14000001	0	D	60000.00	0.00	-55900.00	\N	\N	\N	SL000028	118486586	\N	f	t	Bill Payment for Purchase SALES SL000028	Admin	2021-08-14 02:39:26.497909-07	\N	\N	\N	Admin	2021-08-14 02:39:26.497909-07
207	100	0	2021-08-14	15	1	STOCK	0	13100001	0	D	1500000.00	0.00	-18318423.00	\N	\N	\N	ST00000085	0002	Admin	f	t	Stock for Mobile Phone	Admin	2021-08-14 05:46:47.944294-07	\N	\N	\N	Admin	2021-08-14 05:46:47.944294-07
208	100	0	2021-08-14	15	2	STOCK	1000000000005	24000001	13100000	C	1500000.00	0.00	9812590.00	\N	\N	\N	ST00000085	0002	\N	f	t	Purchase bill for ST00000085	Admin	2021-08-14 05:46:47.944294-07	\N	\N	\N	Admin	2021-08-14 05:46:47.944294-07
209	100	4000001	2021-08-14	16	1	SALES	0	13100001	0	C	5000.00	0.00	-18313423.00	\N	\N	\N	SL000029	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-14 05:49:22.385101-07	\N	\N	\N	Admin	2021-08-14 05:49:22.385101-07
210	100	4000001	2021-08-14	16	2	SALES	0	31000001	0	C	1000.00	0.00	67102.00	\N	\N	\N	SL000029	1000000		f	t	Profit Posting for Invoice SL000029	Admin	2021-08-14 05:49:22.385101-07	\N	\N	\N	Admin	2021-08-14 05:49:22.385101-07
212	100	4000001	2021-08-15	1	1	SALES	0	13100001	0	C	15000.00	0.00	-18298423.00	\N	\N	\N	SL000030	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-15 04:48:17.857205-07	\N	\N	\N	Admin	2021-08-15 04:48:17.857205-07
171	100	4000001	2021-08-13	12	3	SALES	1000000000001	14000001	0	D	22.00	22.00	-18450.00	\N	\N	\N	SL000022	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000022	Admin	2021-08-13 06:42:19.525401-07	Admin	2021-08-26 02:43:31.66086-07	Cancel Invoice	Admin	2021-08-13 06:42:19.525401-07
213	100	4000001	2021-08-15	1	2	SALES	0	31000001	0	C	3000.00	0.00	70102.00	\N	\N	\N	SL000030	1000000		f	t	Profit Posting for Invoice SL000030	Admin	2021-08-15 04:48:17.857205-07	\N	\N	\N	Admin	2021-08-15 04:48:17.857205-07
215	100	4000001	2021-08-15	2	1	SALES	0	13100001	0	C	25.00	0.00	-18298398.00	\N	\N	\N	SL000031	1000000		f	t	Sales for Ata	Admin	2021-08-15 05:04:04.624779-07	\N	\N	\N	Admin	2021-08-15 05:04:04.624779-07
216	100	4000001	2021-08-15	2	2	SALES	0	31000001	0	C	5.00	0.00	70107.00	\N	\N	\N	SL000031	1000000		f	t	Profit Posting for Invoice SL000031	Admin	2021-08-15 05:04:04.624779-07	\N	\N	\N	Admin	2021-08-15 05:04:04.624779-07
218	100	4000001	2021-08-15	3	1	SALES	0	13100001	0	C	6000.00	0.00	-18292398.00	\N	\N	\N	SL000032	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-15 05:09:52.424823-07	\N	\N	\N	Admin	2021-08-15 05:09:52.424823-07
219	100	4000001	2021-08-15	3	2	SALES	0	31000001	0	C	2000.00	0.00	72107.00	\N	\N	\N	SL000032	1000000		f	t	Profit Posting for Invoice SL000032	Admin	2021-08-15 05:09:52.424823-07	\N	\N	\N	Admin	2021-08-15 05:09:52.424823-07
220	100	4000001	2021-08-15	3	3	SALES	1000000000004	14000001	0	D	8000.00	0.00	-115900.00	\N	\N	\N	SL000032	118486586	\N	f	t	Bill Payment for Purchase SALES SL000032	Admin	2021-08-15 05:09:52.424823-07	\N	\N	\N	Admin	2021-08-15 05:09:52.424823-07
221	100	4000001	2021-08-15	4	1	SALES	0	13100001	0	C	18000.00	0.00	-18274398.00	\N	\N	\N	SL000033	1000000		f	t	Sales for white washing machine	Admin	2021-08-15 05:24:46.914411-07	\N	\N	\N	Admin	2021-08-15 05:24:46.914411-07
222	100	4000001	2021-08-15	4	2	SALES	0	31000001	0	C	2000.00	0.00	74107.00	\N	\N	\N	SL000033	1000000		f	t	Profit Posting for Invoice SL000033	Admin	2021-08-15 05:24:46.914411-07	\N	\N	\N	Admin	2021-08-15 05:24:46.914411-07
224	100	0	2021-08-16	1	1	STOCK	0	13100001	0	D	250.00	0.00	-18274648.00	\N	\N	\N	ST00000087	0002	Admin	f	t	Stock for Ata	Admin	2021-08-15 23:18:18.234314-07	\N	\N	\N	Admin	2021-08-15 23:18:18.234314-07
225	100	0	2021-08-16	1	2	STOCK	1000000000005	24000001	13100000	C	250.00	0.00	11312590.00	\N	\N	\N	ST00000087	0002	\N	f	t	Purchase bill for ST00000087	Admin	2021-08-15 23:18:18.234314-07	\N	\N	\N	Admin	2021-08-15 23:18:18.234314-07
228	100	4000001	2021-08-16	3	1	SALES	0	13100001	0	C	14.00	0.00	-18274604.00	\N	\N	\N	SL000034	1000000		f	t	Sales for Water	Admin	2021-08-15 23:20:11.661503-07	\N	\N	\N	Admin	2021-08-15 23:20:11.661503-07
229	100	4000001	2021-08-16	3	2	SALES	0	31000001	0	C	8.00	0.00	74115.00	\N	\N	\N	SL000034	1000000		f	t	Profit Posting for Invoice SL000034	Admin	2021-08-15 23:20:11.661503-07	\N	\N	\N	Admin	2021-08-15 23:20:11.661503-07
230	100	4000001	2021-08-16	3	3	SALES	1000000000001	14000001	0	D	22.00	0.00	-158472.00	\N	\N	\N	SL000034	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000034	Admin	2021-08-15 23:20:11.661503-07	\N	\N	\N	Admin	2021-08-15 23:20:11.661503-07
231	100	4000001	2021-08-16	4	1	SALES	0	13100001	0	C	36000.00	0.00	-18238604.00	\N	\N	\N	SL000035	1000000		f	t	Sales for white washing machine	Admin	2021-08-15 23:20:39.456595-07	\N	\N	\N	Admin	2021-08-15 23:20:39.456595-07
232	100	4000001	2021-08-16	4	2	SALES	0	31000001	0	C	4000.00	0.00	78115.00	\N	\N	\N	SL000035	1000000		f	t	Profit Posting for Invoice SL000035	Admin	2021-08-15 23:20:39.456595-07	\N	\N	\N	Admin	2021-08-15 23:20:39.456595-07
233	100	4000001	2021-08-16	4	3	SALES	1000000000001	14000001	0	D	40000.00	0.00	-158494.00	\N	\N	\N	SL000035	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000035	Admin	2021-08-15 23:20:39.456595-07	\N	\N	\N	Admin	2021-08-15 23:20:39.456595-07
234	100	4000001	2021-08-17	1	1	SALES	0	13100001	0	C	5000.00	0.00	-18233604.00	\N	\N	\N	SL000036	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-17 02:45:24.655131-07	\N	\N	\N	Admin	2021-08-17 02:45:24.655131-07
235	100	4000001	2021-08-17	1	2	SALES	0	31000001	0	C	1000.00	0.00	79115.00	\N	\N	\N	SL000036	1000000		f	t	Profit Posting for Invoice SL000036	Admin	2021-08-17 02:45:24.655131-07	\N	\N	\N	Admin	2021-08-17 02:45:24.655131-07
237	100	4000001	2021-08-19	1	1	SALES	0	13100001	0	C	500000.00	0.00	-17733604.00	\N	\N	\N	SL000037	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-18 21:55:14.684309-07	\N	\N	\N	Admin	2021-08-18 21:55:14.684309-07
238	100	4000001	2021-08-19	1	2	SALES	0	31000001	0	C	100000.00	0.00	179115.00	\N	\N	\N	SL000037	1000000		f	t	Profit Posting for Invoice SL000037	Admin	2021-08-18 21:55:14.684309-07	\N	\N	\N	Admin	2021-08-18 21:55:14.684309-07
240	100	4000001	2021-08-19	2	1	SALES	0	13100001	0	C	25000.00	0.00	-17708604.00	\N	\N	\N	SL000038	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-18 21:58:29.506147-07	\N	\N	\N	Admin	2021-08-18 21:58:29.506147-07
241	100	4000001	2021-08-19	2	2	SALES	0	31000001	0	C	5000.00	0.00	184115.00	\N	\N	\N	SL000038	1000000		f	t	Profit Posting for Invoice SL000038	Admin	2021-08-18 21:58:29.506147-07	\N	\N	\N	Admin	2021-08-18 21:58:29.506147-07
242	100	4000001	2021-08-19	2	3	SALES	1000000000012	14000001	0	D	30000.00	0.00	0.00	\N	\N	\N	SL000038	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000038	Admin	2021-08-18 21:58:29.506147-07	\N	\N	\N	Admin	2021-08-18 21:58:29.506147-07
243	100	4000001	2021-08-19	3	1	SALES	0	13100001	0	C	25000.00	0.00	-17683604.00	\N	\N	\N	SL000039	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-18 21:59:58.169774-07	\N	\N	\N	Admin	2021-08-18 21:59:58.169774-07
244	100	4000001	2021-08-19	3	2	SALES	0	31000001	0	C	5000.00	0.00	189115.00	\N	\N	\N	SL000039	1000000		f	t	Profit Posting for Invoice SL000039	Admin	2021-08-18 21:59:58.169774-07	\N	\N	\N	Admin	2021-08-18 21:59:58.169774-07
245	100	4000001	2021-08-19	3	3	SALES	1000000000012	14000001	0	D	30000.00	0.00	-30000.00	\N	\N	\N	SL000039	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000039	Admin	2021-08-18 21:59:58.169774-07	\N	\N	\N	Admin	2021-08-18 21:59:58.169774-07
246	100	4000001	2021-08-19	4	1	SALES	0	13100001	0	C	35000.00	0.00	-17648604.00	\N	\N	\N	SL000040	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-18 22:03:22.949299-07	\N	\N	\N	Admin	2021-08-18 22:03:22.949299-07
247	100	4000001	2021-08-19	4	2	SALES	0	31000001	0	C	7000.00	0.00	196115.00	\N	\N	\N	SL000040	1000000		f	t	Profit Posting for Invoice SL000040	Admin	2021-08-18 22:03:22.949299-07	\N	\N	\N	Admin	2021-08-18 22:03:22.949299-07
249	100	4000001	2021-08-19	5	1	SALES	0	13100001	0	C	15000.00	0.00	-17633604.00	\N	\N	\N	SL000041	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-18 22:04:44.110096-07	\N	\N	\N	Admin	2021-08-18 22:04:44.110096-07
250	100	4000001	2021-08-19	5	2	SALES	0	31000001	0	C	3000.00	0.00	199115.00	\N	\N	\N	SL000041	1000000		f	t	Profit Posting for Invoice SL000041	Admin	2021-08-18 22:04:44.110096-07	\N	\N	\N	Admin	2021-08-18 22:04:44.110096-07
252	100	4000001	2021-08-19	6	1	SALES	0	13100001	0	C	25000.00	0.00	-17608604.00	\N	\N	\N	SL000042	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-18 22:06:40.751041-07	\N	\N	\N	Admin	2021-08-18 22:06:40.751041-07
253	100	4000001	2021-08-19	6	2	SALES	0	31000001	0	C	5000.00	0.00	204115.00	\N	\N	\N	SL000042	1000000		f	t	Profit Posting for Invoice SL000042	Admin	2021-08-18 22:06:40.751041-07	\N	\N	\N	Admin	2021-08-18 22:06:40.751041-07
226	100	0	2021-08-16	2	1	STOCK_RETURN	0	13100001	24000001	C	30.00	30.00	-18274618.00	\N	\N	\N	RT00000002			f	t	Stock Return for Ata 1	Admin	2021-08-15 23:19:34.850989-07	Admin	2021-08-21 00:17:57.605956-07	Cancel by Admin	Admin	2021-08-15 23:19:34.850989-07
227	100	0	2021-08-16	2	2	STOCK_RETURN	1000000000005	24000001	13100001	D	30.00	30.00	11312840.00	\N	\N	\N	RT00000002			f	t	Stock Return for Ata 1	Admin	2021-08-15 23:19:34.850989-07	Admin	2021-08-21 00:17:57.605956-07	Cancel by Admin	Admin	2021-08-15 23:19:34.850989-07
255	100	4000001	2021-08-19	7	1	SALES	0	13100001	0	C	25000.00	0.00	-17583604.00	\N	\N	\N	SL000043	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-18 22:06:52.941934-07	\N	\N	\N	Admin	2021-08-18 22:06:52.941934-07
256	100	4000001	2021-08-19	7	2	SALES	0	31000001	0	C	5000.00	0.00	209115.00	\N	\N	\N	SL000043	1000000		f	t	Profit Posting for Invoice SL000043	Admin	2021-08-18 22:06:52.941934-07	\N	\N	\N	Admin	2021-08-18 22:06:52.941934-07
258	100	4000001	2021-08-19	8	1	SALES	0	13100001	0	C	25000.00	0.00	-17558604.00	\N	\N	\N	SL000044	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-18 22:08:47.259341-07	\N	\N	\N	Admin	2021-08-18 22:08:47.259341-07
259	100	4000001	2021-08-19	8	2	SALES	0	31000001	0	C	5000.00	0.00	214115.00	\N	\N	\N	SL000044	1000000		f	t	Profit Posting for Invoice SL000044	Admin	2021-08-18 22:08:47.259341-07	\N	\N	\N	Admin	2021-08-18 22:08:47.259341-07
261	100	4000001	2021-08-19	9	1	SALES	0	13100001	0	C	30000.00	0.00	-17528604.00	\N	\N	\N	SL000045	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-18 22:14:20.374808-07	\N	\N	\N	Admin	2021-08-18 22:14:20.374808-07
262	100	4000001	2021-08-19	9	2	SALES	0	31000001	0	C	6000.00	0.00	220115.00	\N	\N	\N	SL000045	1000000		f	t	Profit Posting for Invoice SL000045	Admin	2021-08-18 22:14:20.374808-07	\N	\N	\N	Admin	2021-08-18 22:14:20.374808-07
263	100	4000001	2021-08-19	9	3	SALES	1000000000001	14000001	0	D	36000.00	0.00	-198494.00	\N	\N	\N	SL000045	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000045	Admin	2021-08-18 22:14:20.374808-07	\N	\N	\N	Admin	2021-08-18 22:14:20.374808-07
264	100	4000001	2021-08-20	1	1	SALES	0	13100001	0	C	6000.00	0.00	-17522604.00	\N	\N	\N	SL000046	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-20 05:02:13.518409-07	\N	\N	\N	Admin	2021-08-20 05:02:13.518409-07
265	100	4000001	2021-08-20	1	2	SALES	0	31000001	0	C	2000.00	0.00	222115.00	\N	\N	\N	SL000046	1000000		f	t	Profit Posting for Invoice SL000046	Admin	2021-08-20 05:02:13.518409-07	\N	\N	\N	Admin	2021-08-20 05:02:13.518409-07
267	100	4000001	2021-08-20	2	1	SALES	0	13100001	0	C	5000.00	0.00	-17517604.00	\N	\N	\N	SL000047	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-20 05:10:13.65358-07	\N	\N	\N	Admin	2021-08-20 05:10:13.65358-07
268	100	4000001	2021-08-20	2	2	SALES	0	31000001	0	C	1000.00	0.00	223115.00	\N	\N	\N	SL000047	1000000		f	t	Profit Posting for Invoice SL000047	Admin	2021-08-20 05:10:13.65358-07	\N	\N	\N	Admin	2021-08-20 05:10:13.65358-07
270	100	4000001	2021-08-20	3	1	SALES	0	13100001	0	C	50000.00	0.00	-17467604.00	\N	\N	\N	SL000048	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-20 05:14:44.627518-07	\N	\N	\N	Admin	2021-08-20 05:14:44.627518-07
271	100	4000001	2021-08-20	3	2	SALES	0	31000001	0	C	10000.00	0.00	233115.00	\N	\N	\N	SL000048	1000000		f	t	Profit Posting for Invoice SL000048	Admin	2021-08-20 05:14:44.627518-07	\N	\N	\N	Admin	2021-08-20 05:14:44.627518-07
272	100	4000001	2021-08-20	3	3	SALES	1000000000004	14000001	0	D	60000.00	0.00	-123900.00	\N	\N	\N	SL000048	118486586	\N	f	t	Bill Payment for Purchase SALES SL000048	Admin	2021-08-20 05:14:44.627518-07	\N	\N	\N	Admin	2021-08-20 05:14:44.627518-07
273	100	4000001	2021-08-20	4	1	SALES	0	13100001	0	C	12000.00	0.00	-17455604.00	\N	\N	\N	SL000049	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-20 05:16:12.879549-07	\N	\N	\N	Admin	2021-08-20 05:16:12.879549-07
274	100	4000001	2021-08-20	4	2	SALES	0	31000001	0	C	4000.00	0.00	237115.00	\N	\N	\N	SL000049	1000000		f	t	Profit Posting for Invoice SL000049	Admin	2021-08-20 05:16:12.879549-07	\N	\N	\N	Admin	2021-08-20 05:16:12.879549-07
275	100	4000001	2021-08-20	4	3	SALES	1000000000001	14000001	0	D	16000.00	0.00	-234494.00	\N	\N	\N	SL000049	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000049	Admin	2021-08-20 05:16:12.879549-07	\N	\N	\N	Admin	2021-08-20 05:16:12.879549-07
142	100	4000001	2021-08-13	1	3	SALES	1000000000008	14000001	0	D	6000.00	0.00	0.00	\N	\N	\N	SL000015	5465676	\N	f	t	Bill Payment for Purchase SALES SL000015	Admin	2021-08-13 02:20:25.470538-07	\N	\N	\N	Admin	2021-08-13 02:20:25.470538-07
168	100	4000001	2021-08-13	11	3	SALES	1000000000008	14000001	0	D	20000.00	0.00	-6000.00	\N	\N	\N	SL000021	5465676	\N	f	t	Bill Payment for Purchase SALES SL000021	Admin	2021-08-13 06:36:40.459588-07	\N	\N	\N	Admin	2021-08-13 06:36:40.459588-07
196	100	4000001	2021-08-14	10	3	SALES	1000000000008	14000001	0	D	66.00	0.00	-26000.00	\N	\N	\N	SL000026	5465676	\N	f	t	Bill Payment for Purchase SALES SL000026	Admin	2021-08-14 00:18:43.066331-07	\N	\N	\N	Admin	2021-08-14 00:18:43.066331-07
203	100	4000001	2021-08-14	13	3	SALES	1000000000008	14000001	0	D	175.00	0.00	-26066.00	\N	\N	\N	SL000027	5465676	\N	f	t	Bill Payment for Purchase SALES SL000027	Admin	2021-08-14 00:23:37.408224-07	\N	\N	\N	Admin	2021-08-14 00:23:37.408224-07
211	100	4000001	2021-08-14	16	3	SALES	1000000000008	14000001	0	D	6000.00	0.00	-26241.00	\N	\N	\N	SL000029	5465676	\N	f	t	Bill Payment for Purchase SALES SL000029	Admin	2021-08-14 05:49:22.385101-07	\N	\N	\N	Admin	2021-08-14 05:49:22.385101-07
214	100	4000001	2021-08-15	1	3	SALES	1000000000008	14000001	0	D	18000.00	0.00	-32241.00	\N	\N	\N	SL000030	5465676	\N	f	t	Bill Payment for Purchase SALES SL000030	Admin	2021-08-15 04:48:17.857205-07	\N	\N	\N	Admin	2021-08-15 04:48:17.857205-07
217	100	4000001	2021-08-15	2	3	SALES	1000000000008	14000001	0	D	30.00	0.00	-50241.00	\N	\N	\N	SL000031	5465676	\N	f	t	Bill Payment for Purchase SALES SL000031	Admin	2021-08-15 05:04:04.624779-07	\N	\N	\N	Admin	2021-08-15 05:04:04.624779-07
223	100	4000001	2021-08-15	4	3	SALES	1000000000008	14000001	0	D	20000.00	0.00	-50271.00	\N	\N	\N	SL000033	5465676	\N	f	t	Bill Payment for Purchase SALES SL000033	Admin	2021-08-15 05:24:46.914411-07	\N	\N	\N	Admin	2021-08-15 05:24:46.914411-07
236	100	4000001	2021-08-17	1	3	SALES	1000000000008	14000001	0	D	6000.00	0.00	-70271.00	\N	\N	\N	SL000036	5465676	\N	f	t	Bill Payment for Purchase SALES SL000036	Admin	2021-08-17 02:45:24.655131-07	\N	\N	\N	Admin	2021-08-17 02:45:24.655131-07
239	100	4000001	2021-08-19	1	3	SALES	1000000000008	14000001	0	D	600000.00	0.00	-76271.00	\N	\N	\N	SL000037	5465676	\N	f	t	Bill Payment for Purchase SALES SL000037	Admin	2021-08-18 21:55:14.684309-07	\N	\N	\N	Admin	2021-08-18 21:55:14.684309-07
248	100	4000001	2021-08-19	4	3	SALES	1000000000008	14000001	0	D	42000.00	0.00	-676271.00	\N	\N	\N	SL000040	5465676	\N	f	t	Bill Payment for Purchase SALES SL000040	Admin	2021-08-18 22:03:22.949299-07	\N	\N	\N	Admin	2021-08-18 22:03:22.949299-07
251	100	4000001	2021-08-19	5	3	SALES	1000000000008	14000001	0	D	18000.00	0.00	-718271.00	\N	\N	\N	SL000041	5465676	\N	f	t	Bill Payment for Purchase SALES SL000041	Admin	2021-08-18 22:04:44.110096-07	\N	\N	\N	Admin	2021-08-18 22:04:44.110096-07
254	100	4000001	2021-08-19	6	3	SALES	1000000000008	14000001	0	D	30000.00	0.00	-736271.00	\N	\N	\N	SL000042	5465676	\N	f	t	Bill Payment for Purchase SALES SL000042	Admin	2021-08-18 22:06:40.751041-07	\N	\N	\N	Admin	2021-08-18 22:06:40.751041-07
257	100	4000001	2021-08-19	7	3	SALES	1000000000008	14000001	0	D	30000.00	0.00	-766271.00	\N	\N	\N	SL000043	5465676	\N	f	t	Bill Payment for Purchase SALES SL000043	Admin	2021-08-18 22:06:52.941934-07	\N	\N	\N	Admin	2021-08-18 22:06:52.941934-07
260	100	4000001	2021-08-19	8	3	SALES	1000000000008	14000001	0	D	30000.00	0.00	-796271.00	\N	\N	\N	SL000044	5465676	\N	f	t	Bill Payment for Purchase SALES SL000044	Admin	2021-08-18 22:08:47.259341-07	\N	\N	\N	Admin	2021-08-18 22:08:47.259341-07
266	100	4000001	2021-08-20	1	3	SALES	1000000000008	14000001	0	D	8000.00	0.00	-826271.00	\N	\N	\N	SL000046	5465676	\N	f	t	Bill Payment for Purchase SALES SL000046	Admin	2021-08-20 05:02:13.518409-07	\N	\N	\N	Admin	2021-08-20 05:02:13.518409-07
269	100	4000001	2021-08-20	2	3	SALES	1000000000008	14000001	0	D	6000.00	0.00	-834271.00	\N	\N	\N	SL000047	5465676	\N	f	t	Bill Payment for Purchase SALES SL000047	Admin	2021-08-20 05:10:13.65358-07	\N	\N	\N	Admin	2021-08-20 05:10:13.65358-07
161	100	0	2021-08-13	9	1	STOCK_RETURN	1000000000009	24000001	13100001	C	1400.00	1400.00	1400.00	\N	\N	\N	ST00000076	\N		f	t	Stock Return for ST00000076	Admin	2021-08-13 03:33:42.258841-07	Admin	2021-08-21 00:14:08.287827-07	Cancel by Admin	Admin	2021-08-13 03:33:42.258841-07
162	100	0	2021-08-13	9	2	STOCK_RETURN	0	13100001	24000001	D	1400.00	1400.00	-1190229.00	\N	\N	\N	ST00000076	\N	\N	f	t	Stock Return for ST00000076	Admin	2021-08-13 03:33:42.258841-07	Admin	2021-08-21 00:14:08.287827-07	Cancel by Admin	Admin	2021-08-13 03:33:42.258841-07
276	100	0	2021-08-21	1	1	STOCK	0	13100001	0	D	2500.00	0.00	-17456704.00	\N	\N	\N	ST00000088	0002	Admin	f	t	Stock for Ata	Admin	2021-08-21 00:16:20.051197-07	\N	\N	\N	Admin	2021-08-21 00:16:20.051197-07
277	100	0	2021-08-21	1	2	STOCK	1000000000005	24000001	13100000	C	2500.00	0.00	11312810.00	\N	\N	\N	ST00000088	0002	\N	f	t	Purchase bill for ST00000088	Admin	2021-08-21 00:16:20.051197-07	\N	\N	\N	Admin	2021-08-21 00:16:20.051197-07
278	100	0	2021-08-16	5	1	STOCK	0	13100001	0	D	140.00	0.00	-17456844.00	\N	\N	\N	ST00000086	0002	Admin	f	t	Stock for Water	Admin	2021-08-21 00:16:31.853937-07	\N	\N	\N	Admin	2021-08-21 00:16:31.853937-07
279	100	0	2021-08-16	5	2	STOCK	1000000000005	24000001	13100000	C	140.00	0.00	11315310.00	\N	\N	\N	ST00000086	0002	\N	f	t	Purchase bill for ST00000086	Admin	2021-08-21 00:16:31.853937-07	\N	\N	\N	Admin	2021-08-21 00:16:31.853937-07
280	100	4000001	2021-08-21	2	1	SALES	0	13100001	0	C	60000.00	0.00	-17396874.00	\N	\N	\N	SL000050	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-21 00:24:30.615783-07	\N	\N	\N	Admin	2021-08-21 00:24:30.615783-07
281	100	4000001	2021-08-21	2	2	SALES	0	31000001	0	C	20000.00	0.00	257115.00	\N	\N	\N	SL000050	1000000		f	t	Profit Posting for Invoice SL000050	Admin	2021-08-21 00:24:30.615783-07	\N	\N	\N	Admin	2021-08-21 00:24:30.615783-07
282	100	4000001	2021-08-21	2	3	SALES	0	13100001	0	C	250.00	0.00	-17396624.00	\N	\N	\N	SL000050	1000000		f	t	Sales for Ata	Admin	2021-08-21 00:24:30.615783-07	\N	\N	\N	Admin	2021-08-21 00:24:30.615783-07
283	100	4000001	2021-08-21	2	4	SALES	0	31000001	0	C	50.00	0.00	257165.00	\N	\N	\N	SL000050	1000000		f	t	Profit Posting for Invoice SL000050	Admin	2021-08-21 00:24:30.615783-07	\N	\N	\N	Admin	2021-08-21 00:24:30.615783-07
284	100	4000001	2021-08-21	2	5	SALES	1000000000012	14000001	0	D	80300.00	0.00	-60000.00	\N	\N	\N	SL000050	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000050	Admin	2021-08-21 00:24:30.615783-07	\N	\N	\N	Admin	2021-08-21 00:24:30.615783-07
285	100	0	2021-08-22	1	1	STOCK	0	13100001	0	D	200000.00	0.00	-17596624.00	\N	\N	\N	ST00000091	0009	Admin	f	t	Stock for Refrigaretor	Admin	2021-08-21 21:46:24.442204-07	\N	\N	\N	Admin	2021-08-21 21:46:24.442204-07
286	100	0	2021-08-22	1	2	STOCK	1000000000019	24000001	13100000	C	200000.00	0.00	0.00	\N	\N	\N	ST00000091	0009	\N	f	t	Purchase bill for ST00000091	Admin	2021-08-21 21:46:24.442204-07	\N	\N	\N	Admin	2021-08-21 21:46:24.442204-07
287	100	0	2021-08-22	2	1	STOCK_RETURN	0	13100001	24000001	C	20000.00	0.00	-17576624.00	\N	\N	\N	RT00000003			f	t	Stock Return for refrigaretor RF-01	Admin	2021-08-21 21:48:00.81122-07	\N	\N	\N	Admin	2021-08-21 21:48:00.81122-07
288	100	0	2021-08-22	2	2	STOCK_RETURN	1000000000019	24000001	13100001	D	20000.00	0.00	200000.00	\N	\N	\N	RT00000003			f	t	Stock Return for refrigaretor RF-01	Admin	2021-08-21 21:48:00.81122-07	\N	\N	\N	Admin	2021-08-21 21:48:00.81122-07
289	100	0	2021-08-22	3	1	STOCK_RETURN	0	13100001	24000001	C	14.00	0.00	-17576610.00	\N	\N	\N	RT00000004			f	t	Stock Return for Ata 1	Admin	2021-08-21 21:55:28.649768-07	\N	\N	\N	Admin	2021-08-21 21:55:28.649768-07
290	100	0	2021-08-22	3	2	STOCK_RETURN	1000000000005	24000001	13100001	D	14.00	0.00	11315480.00	\N	\N	\N	RT00000004			f	t	Stock Return for Ata 1	Admin	2021-08-21 21:55:28.649768-07	\N	\N	\N	Admin	2021-08-21 21:55:28.649768-07
309	100	4000001	2021-08-22	10	1	SALES_RETURN	0	13100001	14000001	D	600000.00	0.00	-17931610.00	\N	\N	\N	SL000053	01749195756		f	t	Invoice Return for SL000053	Admin	2021-08-21 22:41:56.301403-07	\N	\N	\N	Admin	2021-08-21 22:41:56.301403-07
310	100	4000001	2021-08-22	10	2	SALES_RETURN	1000000000001	14000001	13100001	C	800000.00	0.00	-610494.00	\N	\N	\N	SL000053	01749195756		f	t	Invoice Return for SL000053	Admin	2021-08-21 22:41:56.301403-07	\N	\N	\N	Admin	2021-08-21 22:41:56.301403-07
311	100	4000001	2021-08-22	10	3	SALES_RETURN	0	31000001	13100001	D	200000.00	0.00	142165.00	\N	\N	\N	SL000053	01749195756		f	t	Profit Reverse for Invoice SL000053	Admin	2021-08-21 22:41:56.301403-07	\N	\N	\N	Admin	2021-08-21 22:41:56.301403-07
312	100	4000001	2021-08-22	11	1	SALES_RETURN	0	13100001	14000001	D	420000.00	0.00	-18351610.00	\N	\N	\N	SL000053	01749195756		f	t	Invoice Return for SL000053	Admin	2021-08-21 22:42:20.054023-07	\N	\N	\N	Admin	2021-08-21 22:42:20.054023-07
313	100	4000001	2021-08-22	11	2	SALES_RETURN	1000000000001	14000001	13100001	C	560000.00	0.00	189506.00	\N	\N	\N	SL000053	01749195756		f	t	Invoice Return for SL000053	Admin	2021-08-21 22:42:20.054023-07	\N	\N	\N	Admin	2021-08-21 22:42:20.054023-07
314	100	4000001	2021-08-22	11	3	SALES_RETURN	0	31000001	13100001	D	140000.00	0.00	2165.00	\N	\N	\N	SL000053	01749195756		f	t	Profit Reverse for Invoice SL000053	Admin	2021-08-21 22:42:20.054023-07	\N	\N	\N	Admin	2021-08-21 22:42:20.054023-07
291	100	4000001	2021-08-22	4	1	SALES	0	13100001	0	C	5000.00	5000.00	-17571610.00	\N	\N	\N	SL000051	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-21 21:57:43.07523-07	Admin	2021-08-21 22:01:22.880259-07	Cancel Invoice	Admin	2021-08-21 21:57:43.07523-07
292	100	4000001	2021-08-22	4	2	SALES	0	31000001	0	C	1000.00	1000.00	258165.00	\N	\N	\N	SL000051	1000000		f	t	Profit Posting for Invoice SL000051	Admin	2021-08-21 21:57:43.07523-07	Admin	2021-08-21 22:01:22.880259-07	Cancel Invoice	Admin	2021-08-21 21:57:43.07523-07
293	100	4000001	2021-08-22	4	3	SALES	1000000000001	14000001	0	D	6000.00	6000.00	-250494.00	\N	\N	\N	SL000051	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000051	Admin	2021-08-21 21:57:43.07523-07	Admin	2021-08-21 22:01:22.880259-07	Cancel Invoice	Admin	2021-08-21 21:57:43.07523-07
294	100	4000001	2021-08-22	5	1	SALES	0	13100001	0	C	325000.00	0.00	-17251610.00	\N	\N	\N	SL000052	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-21 22:27:25.519366-07	\N	\N	\N	Admin	2021-08-21 22:27:25.519366-07
295	100	4000001	2021-08-22	5	2	SALES	0	31000001	0	C	65000.00	0.00	322165.00	\N	\N	\N	SL000052	1000000		f	t	Profit Posting for Invoice SL000052	Admin	2021-08-21 22:27:25.519366-07	\N	\N	\N	Admin	2021-08-21 22:27:25.519366-07
296	100	4000001	2021-08-22	5	3	SALES	1000000000004	14000001	0	D	390000.00	0.00	-183900.00	\N	\N	\N	SL000052	118486586	\N	f	t	Bill Payment for Purchase SALES SL000052	Admin	2021-08-21 22:27:25.519366-07	\N	\N	\N	Admin	2021-08-21 22:27:25.519366-07
303	100	4000001	2021-08-22	8	1	SALES	0	13100001	0	C	300000.00	0.00	-17301610.00	\N	\N	\N	SL000053	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-21 22:38:51.504223-07	\N	\N	\N	Admin	2021-08-21 22:38:51.504223-07
304	100	4000001	2021-08-22	8	2	SALES	0	31000001	0	C	100000.00	0.00	352165.00	\N	\N	\N	SL000053	1000000		f	t	Profit Posting for Invoice SL000053	Admin	2021-08-21 22:38:51.504223-07	\N	\N	\N	Admin	2021-08-21 22:38:51.504223-07
305	100	4000001	2021-08-22	8	3	SALES	1000000000001	14000001	0	D	400000.00	0.00	-250494.00	\N	\N	\N	SL000053	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000053	Admin	2021-08-21 22:38:51.504223-07	\N	\N	\N	Admin	2021-08-21 22:38:51.504223-07
315	100	4000001	2021-08-22	12	1	SALES_RETURN	0	13100001	14000001	D	3000000.00	0.00	-21351610.00	\N	\N	\N	SL000053	01749195756		f	t	Invoice Return for SL000053	Admin	2021-08-21 22:42:43.817981-07	\N	\N	\N	Admin	2021-08-21 22:42:43.817981-07
316	100	4000001	2021-08-22	12	2	SALES_RETURN	1000000000001	14000001	13100001	C	4000000.00	0.00	749506.00	\N	\N	\N	SL000053	01749195756		f	t	Invoice Return for SL000053	Admin	2021-08-21 22:42:43.817981-07	\N	\N	\N	Admin	2021-08-21 22:42:43.817981-07
317	100	4000001	2021-08-22	12	3	SALES_RETURN	0	31000001	13100001	D	1000000.00	0.00	-997835.00	\N	\N	\N	SL000053	01749195756		f	t	Profit Reverse for Invoice SL000053	Admin	2021-08-21 22:42:43.817981-07	\N	\N	\N	Admin	2021-08-21 22:42:43.817981-07
318	100	4000001	2021-08-22	13	1	SALES_RETURN	0	13100001	14000001	D	3000000.00	0.00	-24351610.00	\N	\N	\N	SL000053	01749195756		f	t	Invoice Return for SL000053	Admin	2021-08-21 22:43:13.184432-07	\N	\N	\N	Admin	2021-08-21 22:43:13.184432-07
319	100	4000001	2021-08-22	13	2	SALES_RETURN	1000000000001	14000001	13100001	C	4000000.00	0.00	4749506.00	\N	\N	\N	SL000053	01749195756		f	t	Invoice Return for SL000053	Admin	2021-08-21 22:43:13.184432-07	\N	\N	\N	Admin	2021-08-21 22:43:13.184432-07
320	100	4000001	2021-08-22	13	3	SALES_RETURN	0	31000001	13100001	D	1000000.00	0.00	-1997835.00	\N	\N	\N	SL000053	01749195756		f	t	Profit Reverse for Invoice SL000053	Admin	2021-08-21 22:43:13.184432-07	\N	\N	\N	Admin	2021-08-21 22:43:13.184432-07
297	100	4000001	2021-08-22	6	1	SALES_RETURN	0	13100001	14000001	D	25000.00	25000.00	-17276610.00	\N	\N	\N	SL000052	118486586		f	t	Invoice Return for SL000052	Admin	2021-08-21 22:28:40.236259-07	Admin	2021-08-21 23:18:23.300019-07	Cancel by Admin	Admin	2021-08-21 22:28:40.236259-07
298	100	4000001	2021-08-22	6	2	SALES_RETURN	1000000000004	14000001	13100001	C	30000.00	30000.00	-573900.00	\N	\N	\N	SL000052	118486586		f	t	Invoice Return for SL000052	Admin	2021-08-21 22:28:40.236259-07	Admin	2021-08-21 23:18:23.300019-07	Cancel by Admin	Admin	2021-08-21 22:28:40.236259-07
299	100	4000001	2021-08-22	6	3	SALES_RETURN	0	31000001	13100001	D	5000.00	5000.00	317165.00	\N	\N	\N	SL000052	118486586		f	t	Profit Reverse for Invoice SL000052	Admin	2021-08-21 22:28:40.236259-07	Admin	2021-08-21 23:18:23.300019-07	Cancel by Admin	Admin	2021-08-21 22:28:40.236259-07
300	100	4000001	2021-08-22	7	1	SALES_RETURN	0	13100001	14000001	D	325000.00	325000.00	-17601610.00	\N	\N	\N	SL000052	118486586		f	t	Invoice Return for SL000052	Admin	2021-08-21 22:35:08.223662-07	Admin	2021-08-21 23:18:35.830329-07	Cancel by Admin	Admin	2021-08-21 22:35:08.223662-07
301	100	4000001	2021-08-22	7	2	SALES_RETURN	1000000000004	14000001	13100001	C	390000.00	390000.00	-543900.00	\N	\N	\N	SL000052	118486586		f	t	Invoice Return for SL000052	Admin	2021-08-21 22:35:08.223662-07	Admin	2021-08-21 23:18:35.830329-07	Cancel by Admin	Admin	2021-08-21 22:35:08.223662-07
302	100	4000001	2021-08-22	7	3	SALES_RETURN	0	31000001	13100001	D	65000.00	65000.00	252165.00	\N	\N	\N	SL000052	118486586		f	t	Profit Reverse for Invoice SL000052	Admin	2021-08-21 22:35:08.223662-07	Admin	2021-08-21 23:18:35.830329-07	Cancel by Admin	Admin	2021-08-21 22:35:08.223662-07
306	100	4000001	2021-08-22	9	1	SALES_RETURN	0	13100001	14000001	D	30000.00	30000.00	-17331610.00	\N	\N	\N	SL000053	01749195756		f	t	Invoice Return for SL000053	Admin	2021-08-21 22:40:31.143435-07	Admin	2021-08-21 23:19:01.181878-07	Cancel by Admin	Admin	2021-08-21 22:40:31.143435-07
307	100	4000001	2021-08-22	9	2	SALES_RETURN	1000000000001	14000001	13100001	C	40000.00	40000.00	-650494.00	\N	\N	\N	SL000053	01749195756		f	t	Invoice Return for SL000053	Admin	2021-08-21 22:40:31.143435-07	Admin	2021-08-21 23:19:01.181878-07	Cancel by Admin	Admin	2021-08-21 22:40:31.143435-07
308	100	4000001	2021-08-22	9	3	SALES_RETURN	0	31000001	13100001	D	10000.00	10000.00	342165.00	\N	\N	\N	SL000053	01749195756		f	t	Profit Reverse for Invoice SL000053	Admin	2021-08-21 22:40:31.143435-07	Admin	2021-08-21 23:19:01.181878-07	Cancel by Admin	Admin	2021-08-21 22:40:31.143435-07
321	100	4000001	2021-08-22	14	1	SALES	0	13100001	0	C	300.00	0.00	-23971310.00	\N	\N	\N	SL000054	1000000		f	t	Sales for Chanachur	Admin	2021-08-21 23:21:46.113107-07	\N	\N	\N	Admin	2021-08-21 23:21:46.113107-07
322	100	4000001	2021-08-22	14	2	SALES	0	31000001	0	C	50.00	0.00	-1917785.00	\N	\N	\N	SL000054	1000000		f	t	Profit Posting for Invoice SL000054	Admin	2021-08-21 23:21:46.113107-07	\N	\N	\N	Admin	2021-08-21 23:21:46.113107-07
323	100	4000001	2021-08-22	14	3	SALES	1000000000013	14000001	0	D	350.00	0.00	0.00	\N	\N	\N	SL000054	01995297063	\N	f	t	Bill Payment for Purchase SALES SL000054	Admin	2021-08-21 23:21:46.113107-07	\N	\N	\N	Admin	2021-08-21 23:21:46.113107-07
324	100	4000001	2021-08-22	15	1	SALES	0	13100001	0	C	250.00	0.00	-23971060.00	\N	\N	\N	SL000055	1000000		f	t	Sales for Ata	Admin	2021-08-21 23:24:51.105337-07	\N	\N	\N	Admin	2021-08-21 23:24:51.105337-07
325	100	4000001	2021-08-22	15	2	SALES	0	31000001	0	C	50.00	0.00	-1917735.00	\N	\N	\N	SL000055	1000000		f	t	Profit Posting for Invoice SL000055	Admin	2021-08-21 23:24:51.105337-07	\N	\N	\N	Admin	2021-08-21 23:24:51.105337-07
326	100	4000001	2021-08-22	15	3	SALES	1000000000013	14000001	0	D	300.00	0.00	-350.00	\N	\N	\N	SL000055	01995297063	\N	f	t	Bill Payment for Purchase SALES SL000055	Admin	2021-08-21 23:24:51.105337-07	\N	\N	\N	Admin	2021-08-21 23:24:51.105337-07
100	100	0	2021-07-06	7	6	SALES	9999999999999	59000001	13100001	D	7500.00	7500.00	7500.00	\N	\N	\N	SL000013	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000013	Admin	2021-07-06 10:46:36.133426-07	Admin	2021-08-21 23:27:45.173403-07	Cancel Invoice	Admin	2021-07-06 10:46:36.133426-07
95	100	0	2021-07-06	7	1	SALES	0	13100001	11100001	C	6000.00	6000.00	-616194.00	\N	\N	\N	SL000013	1000000		f	t	Sales for Aci garden chair	Admin	2021-07-06 10:46:36.133426-07	Admin	2021-08-21 23:27:45.173403-07	Cancel Invoice	Admin	2021-07-06 10:46:36.133426-07
96	100	0	2021-07-06	7	2	SALES	0	31000001	11100001	C	2000.00	2000.00	15020.00	\N	\N	\N	SL000013	1000000		f	t	Profit Posting for Invoice SL000013	Admin	2021-07-06 10:46:36.133426-07	Admin	2021-08-21 23:27:45.173403-07	Cancel Invoice	Admin	2021-07-06 10:46:36.133426-07
97	100	0	2021-07-06	7	3	SALES	0	41000002	0	D	500.00	500.00	-1000.00	\N	\N	\N	SL000013	01749195756	\N	f	t	Discount for SALES SL000013	Admin	2021-07-06 10:46:36.133426-07	Admin	2021-08-21 23:27:45.173403-07	Cancel Invoice	Admin	2021-07-06 10:46:36.133426-07
98	100	0	2021-07-06	7	4	SALES	0	11100001	13100001	D	7500.00	7500.00	492470.00	\N	\N	\N	SL000013	01749195756	\N	f	t	Payment Receive for SALES SL000013	Admin	2021-07-06 10:46:36.133426-07	Admin	2021-08-21 23:27:45.173403-07	Cancel Invoice	Admin	2021-07-06 10:46:36.133426-07
99	100	0	2021-07-06	7	5	SALES	9999999999999	59000001	13100001	C	7500.00	7500.00	0.00	\N	\N	\N	SL000013	01749195756	\N	f	t	Payment Receive for SALES SL000013	Admin	2021-07-06 10:46:36.133426-07	Admin	2021-08-21 23:27:45.173403-07	Cancel Invoice	Admin	2021-07-06 10:46:36.133426-07
327	100	4000001	2021-08-22	16	1	SALES	0	13100001	0	C	60000.00	0.00	-23917060.00	\N	\N	\N	SL000056	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-21 23:38:17.569211-07	\N	\N	\N	Admin	2021-08-21 23:38:17.569211-07
328	100	4000001	2021-08-22	16	2	SALES	0	31000001	0	C	20000.00	0.00	-1899735.00	\N	\N	\N	SL000056	1000000		f	t	Profit Posting for Invoice SL000056	Admin	2021-08-21 23:38:17.569211-07	\N	\N	\N	Admin	2021-08-21 23:38:17.569211-07
329	100	4000001	2021-08-22	16	3	SALES	1000000000004	14000001	0	D	80000.00	0.00	-573900.00	\N	\N	\N	SL000056	118486586	\N	f	t	Bill Payment for Purchase SALES SL000056	Admin	2021-08-21 23:38:17.569211-07	\N	\N	\N	Admin	2021-08-21 23:38:17.569211-07
330	100	0	2021-08-22	17	1	STOCK	0	13100001	0	D	15000.00	0.00	-23932060.00	\N	\N	\N	ST00000092	9999999999999	Admin	f	t	Stock for Chanachur	Admin	2021-08-21 23:55:21.469096-07	\N	\N	\N	Admin	2021-08-21 23:55:21.469096-07
331	100	0	2021-08-22	17	2	STOCK	9999999999999	59000001	13100000	C	15000.00	0.00	6004400.00	\N	\N	\N	ST00000092	9999999999999	\N	f	t	Purchase bill for ST00000092	Admin	2021-08-21 23:55:21.469096-07	\N	\N	\N	Admin	2021-08-21 23:55:21.469096-07
332	100	4000001	2021-08-22	18	1	SALES	0	13100001	0	C	300.00	0.00	-23931760.00	\N	\N	\N	SL000057	1000000		f	t	Sales for Chanachur	Admin	2021-08-21 23:58:17.683021-07	\N	\N	\N	Admin	2021-08-21 23:58:17.683021-07
333	100	4000001	2021-08-22	18	2	SALES	0	31000001	0	C	50.00	0.00	-1899685.00	\N	\N	\N	SL000057	1000000		f	t	Profit Posting for Invoice SL000057	Admin	2021-08-21 23:58:17.683021-07	\N	\N	\N	Admin	2021-08-21 23:58:17.683021-07
334	100	4000001	2021-08-22	18	3	SALES	1000000000001	14000001	0	D	350.00	0.00	8709506.00	\N	\N	\N	SL000057	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000057	Admin	2021-08-21 23:58:17.683021-07	\N	\N	\N	Admin	2021-08-21 23:58:17.683021-07
335	100	0	2021-08-22	19	1	STOCK	0	13100001	0	D	1400.00	0.00	-23933160.00	\N	\N	\N	ST00000093	0009	Admin	f	t	Stock for Water	Admin	2021-08-22 00:02:21.47914-07	\N	\N	\N	Admin	2021-08-22 00:02:21.47914-07
336	100	0	2021-08-22	19	2	STOCK	1000000000019	24000001	13100000	C	1400.00	0.00	180000.00	\N	\N	\N	ST00000093	0009	\N	f	t	Purchase bill for ST00000093	Admin	2021-08-22 00:02:21.47914-07	\N	\N	\N	Admin	2021-08-22 00:02:21.47914-07
337	100	4000001	2021-08-22	20	1	SALES	0	13100001	0	C	14.00	0.00	-23933146.00	\N	\N	\N	SL000058	1000000		f	t	Sales for Water	Admin	2021-08-22 00:03:37.791372-07	\N	\N	\N	Admin	2021-08-22 00:03:37.791372-07
338	100	4000001	2021-08-22	20	2	SALES	0	31000001	0	C	8.00	0.00	-1899677.00	\N	\N	\N	SL000058	1000000		f	t	Profit Posting for Invoice SL000058	Admin	2021-08-22 00:03:37.791372-07	\N	\N	\N	Admin	2021-08-22 00:03:37.791372-07
339	100	4000001	2021-08-22	20	3	SALES	1000000000001	14000001	0	D	22.00	0.00	8709156.00	\N	\N	\N	SL000058	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000058	Admin	2021-08-22 00:03:37.791372-07	\N	\N	\N	Admin	2021-08-22 00:03:37.791372-07
340	100	0	2021-08-22	21	1	STOCK	0	13100001	0	D	1800000.00	0.00	-25733146.00	\N	\N	\N	ST00000094	0009	Admin	f	t	Stock for White Washing Machine	Admin	2021-08-22 00:05:11.855227-07	\N	\N	\N	Admin	2021-08-22 00:05:11.855227-07
341	100	0	2021-08-22	21	2	STOCK	1000000000019	24000001	13100000	C	1800000.00	0.00	181400.00	\N	\N	\N	ST00000094	0009	\N	f	t	Purchase bill for ST00000094	Admin	2021-08-22 00:05:11.855227-07	\N	\N	\N	Admin	2021-08-22 00:05:11.855227-07
342	100	4000001	2021-08-22	22	1	SALES	0	13100001	0	C	18000.00	0.00	-25715146.00	\N	\N	\N	SL000059	1000000		f	t	Sales for white washing machine	Admin	2021-08-22 00:06:11.713135-07	\N	\N	\N	Admin	2021-08-22 00:06:11.713135-07
343	100	4000001	2021-08-22	22	2	SALES	0	31000001	0	C	2000.00	0.00	-1897677.00	\N	\N	\N	SL000059	1000000		f	t	Profit Posting for Invoice SL000059	Admin	2021-08-22 00:06:11.713135-07	\N	\N	\N	Admin	2021-08-22 00:06:11.713135-07
344	100	4000001	2021-08-22	22	3	SALES	1000000000012	14000001	0	D	20000.00	0.00	-140300.00	\N	\N	\N	SL000059	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000059	Admin	2021-08-22 00:06:11.713135-07	\N	\N	\N	Admin	2021-08-22 00:06:11.713135-07
345	100	4000001	2021-08-22	23	1	SALES	0	13100001	0	C	90000.00	0.00	-25625146.00	\N	\N	\N	SL000060	1000000		f	t	Sales for white washing machine	Admin	2021-08-22 00:07:10.103548-07	\N	\N	\N	Admin	2021-08-22 00:07:10.103548-07
346	100	4000001	2021-08-22	23	2	SALES	0	31000001	0	C	10000.00	0.00	-1887677.00	\N	\N	\N	SL000060	1000000		f	t	Profit Posting for Invoice SL000060	Admin	2021-08-22 00:07:10.103548-07	\N	\N	\N	Admin	2021-08-22 00:07:10.103548-07
347	100	4000001	2021-08-22	23	3	SALES	1000000000001	14000001	0	D	100000.00	0.00	8709134.00	\N	\N	\N	SL000060	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000060	Admin	2021-08-22 00:07:10.103548-07	\N	\N	\N	Admin	2021-08-22 00:07:10.103548-07
348	100	0	2021-08-22	24	1	STOCK	0	13100001	0	D	2000000.00	0.00	-27625146.00	\N	\N	\N	ST00000095	0002	Admin	f	t	Stock for Mobile Phone	Admin	2021-08-22 00:07:53.464737-07	\N	\N	\N	Admin	2021-08-22 00:07:53.464737-07
349	100	0	2021-08-22	24	2	STOCK	1000000000005	24000001	13100000	C	2000000.00	0.00	11315466.00	\N	\N	\N	ST00000095	0002	\N	f	t	Purchase bill for ST00000095	Admin	2021-08-22 00:07:53.464737-07	\N	\N	\N	Admin	2021-08-22 00:07:53.464737-07
350	100	4000001	2021-08-22	25	1	SALES	0	13100001	0	C	25000.00	0.00	-27600146.00	\N	\N	\N	SL000061	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-22 00:08:50.163917-07	\N	\N	\N	Admin	2021-08-22 00:08:50.163917-07
351	100	4000001	2021-08-22	25	2	SALES	0	31000001	0	C	5000.00	0.00	-1882677.00	\N	\N	\N	SL000061	1000000		f	t	Profit Posting for Invoice SL000061	Admin	2021-08-22 00:08:50.163917-07	\N	\N	\N	Admin	2021-08-22 00:08:50.163917-07
352	100	4000001	2021-08-22	25	3	SALES	1000000000004	14000001	0	D	30000.00	0.00	-653900.00	\N	\N	\N	SL000061	118486586	\N	f	t	Bill Payment for Purchase SALES SL000061	Admin	2021-08-22 00:08:50.163917-07	\N	\N	\N	Admin	2021-08-22 00:08:50.163917-07
353	100	0	2021-08-22	26	1	STOCK	0	13100001	0	D	2500.00	0.00	-27602646.00	\N	\N	\N	ST00000096	0009	Admin	f	t	Stock for Ata	Admin	2021-08-22 00:10:32.505824-07	\N	\N	\N	Admin	2021-08-22 00:10:32.505824-07
354	100	0	2021-08-22	26	2	STOCK	1000000000019	24000001	13100000	C	2500.00	0.00	1981400.00	\N	\N	\N	ST00000096	0009	\N	f	t	Purchase bill for ST00000096	Admin	2021-08-22 00:10:32.505824-07	\N	\N	\N	Admin	2021-08-22 00:10:32.505824-07
355	100	4000001	2021-08-22	27	1	SALES	0	13100001	0	C	25.00	0.00	-27602621.00	\N	\N	\N	SL000062	1000000		f	t	Sales for Ata	Admin	2021-08-22 00:11:34.562894-07	\N	\N	\N	Admin	2021-08-22 00:11:34.562894-07
356	100	4000001	2021-08-22	27	2	SALES	0	31000001	0	C	5.00	0.00	-1882672.00	\N	\N	\N	SL000062	1000000		f	t	Profit Posting for Invoice SL000062	Admin	2021-08-22 00:11:34.562894-07	\N	\N	\N	Admin	2021-08-22 00:11:34.562894-07
357	100	4000001	2021-08-22	27	3	SALES	1000000000001	14000001	0	D	30.00	0.00	8609134.00	\N	\N	\N	SL000062	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000062	Admin	2021-08-22 00:11:34.562894-07	\N	\N	\N	Admin	2021-08-22 00:11:34.562894-07
358	100	4000001	2021-08-22	28	1	SALES_RETURN	0	13100001	14000001	D	125.00	0.00	-27602746.00	\N	\N	\N	SL000050	01673489595		f	t	Invoice Return for SL000050	Admin	2021-08-22 02:14:08.974912-07	\N	\N	\N	Admin	2021-08-22 02:14:08.974912-07
359	100	4000001	2021-08-22	28	2	SALES_RETURN	1000000000012	14000001	13100001	C	150.00	0.00	-160300.00	\N	\N	\N	SL000050	01673489595		f	t	Invoice Return for SL000050	Admin	2021-08-22 02:14:08.974912-07	\N	\N	\N	Admin	2021-08-22 02:14:08.974912-07
360	100	4000001	2021-08-22	28	3	SALES_RETURN	0	31000001	13100001	D	25.00	0.00	-1882697.00	\N	\N	\N	SL000050	01673489595		f	t	Profit Reverse for Invoice SL000050	Admin	2021-08-22 02:14:08.974912-07	\N	\N	\N	Admin	2021-08-22 02:14:08.974912-07
361	100	0	2021-08-22	29	1	STOCK	0	13100001	0	D	3000.00	0.00	-27605746.00	\N	\N	\N	ST00000097	0002	Admin	f	t	Stock for Chanachur	Admin	2021-08-22 02:16:33.253703-07	\N	\N	\N	Admin	2021-08-22 02:16:33.253703-07
362	100	0	2021-08-22	29	2	STOCK	1000000000005	24000001	13100000	C	3000.00	0.00	13315466.00	\N	\N	\N	ST00000097	0002	\N	f	t	Purchase bill for ST00000097	Admin	2021-08-22 02:16:33.253703-07	\N	\N	\N	Admin	2021-08-22 02:16:33.253703-07
363	100	4000001	2021-08-22	30	1	SALES	0	13100001	0	C	300.00	0.00	-27605446.00	\N	\N	\N	SL000063	1000000		f	t	Sales for Chanachur	Admin	2021-08-22 02:18:41.819681-07	\N	\N	\N	Admin	2021-08-22 02:18:41.819681-07
364	100	4000001	2021-08-22	30	2	SALES	0	31000001	0	C	50.00	0.00	-1882647.00	\N	\N	\N	SL000063	1000000		f	t	Profit Posting for Invoice SL000063	Admin	2021-08-22 02:18:41.819681-07	\N	\N	\N	Admin	2021-08-22 02:18:41.819681-07
365	100	4000001	2021-08-22	30	3	SALES	1000000000004	14000001	0	D	350.00	0.00	-683900.00	\N	\N	\N	SL000063	118486586	\N	f	t	Bill Payment for Purchase SALES SL000063	Admin	2021-08-22 02:18:41.819681-07	\N	\N	\N	Admin	2021-08-22 02:18:41.819681-07
366	100	4000001	2021-08-22	31	1	SALES_RETURN	0	13100001	14000001	D	150.00	0.00	-27605596.00	\N	\N	\N	SL000063	118486586		f	t	Invoice Return for SL000063	Admin	2021-08-22 02:19:53.397894-07	\N	\N	\N	Admin	2021-08-22 02:19:53.397894-07
367	100	4000001	2021-08-22	31	2	SALES_RETURN	1000000000004	14000001	13100001	C	175.00	0.00	-684250.00	\N	\N	\N	SL000063	118486586		f	t	Invoice Return for SL000063	Admin	2021-08-22 02:19:53.397894-07	\N	\N	\N	Admin	2021-08-22 02:19:53.397894-07
368	100	4000001	2021-08-22	31	3	SALES_RETURN	0	31000001	13100001	D	25.00	0.00	-1882672.00	\N	\N	\N	SL000063	118486586		f	t	Profit Reverse for Invoice SL000063	Admin	2021-08-22 02:19:53.397894-07	\N	\N	\N	Admin	2021-08-22 02:19:53.397894-07
369	100	0	2021-08-22	32	1	STOCK	0	13100001	0	D	600000.00	0.00	-28205596.00	\N	\N	\N	ST00000098	0002	Admin	f	t	Stock for Aci Garden Chair	Admin	2021-08-22 02:44:14.408237-07	\N	\N	\N	Admin	2021-08-22 02:44:14.408237-07
370	100	0	2021-08-22	32	2	STOCK	1000000000005	24000001	13100000	C	600000.00	0.00	13318466.00	\N	\N	\N	ST00000098	0002	\N	f	t	Purchase bill for ST00000098	Admin	2021-08-22 02:44:14.408237-07	\N	\N	\N	Admin	2021-08-22 02:44:14.408237-07
371	100	0	2019-08-23	1	1	STOCK_RETURN	0	13100001	24000001	C	6000.00	0.00	-28199596.00	\N	\N	\N	RT00000005			f	t	Stock Return for Aci garden chair Aci garden chair	Admin	2021-08-22 21:22:07.924441-07	\N	\N	\N	Admin	2021-08-22 21:22:07.924441-07
372	100	0	2019-08-23	1	2	STOCK_RETURN	1000000000019	24000001	13100001	D	6000.00	0.00	1983900.00	\N	\N	\N	RT00000005			f	t	Stock Return for Aci garden chair Aci garden chair	Admin	2021-08-22 21:22:07.924441-07	\N	\N	\N	Admin	2021-08-22 21:22:07.924441-07
373	100	4000001	2021-08-23	1	1	SALES	0	13100001	0	C	25.00	0.00	-28199571.00	\N	\N	\N	SL000064	1000000		f	t	Sales for Ata	Admin	2021-08-22 21:24:49.469901-07	\N	\N	\N	Admin	2021-08-22 21:24:49.469901-07
374	100	4000001	2021-08-23	1	2	SALES	0	31000001	0	C	5.00	0.00	-1882667.00	\N	\N	\N	SL000064	1000000		f	t	Profit Posting for Invoice SL000064	Admin	2021-08-22 21:24:49.469901-07	\N	\N	\N	Admin	2021-08-22 21:24:49.469901-07
375	100	4000001	2021-08-23	1	3	SALES	1000000000012	14000001	0	D	30.00	0.00	-160150.00	\N	\N	\N	SL000064	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000064	Admin	2021-08-22 21:24:49.469901-07	\N	\N	\N	Admin	2021-08-22 21:24:49.469901-07
376	100	4000001	2021-08-23	2	1	SALES	0	13100001	0	C	25.00	0.00	-28199546.00	\N	\N	\N	SL000065	1000000		f	t	Sales for Ata	Admin	2021-08-22 21:32:48.238086-07	\N	\N	\N	Admin	2021-08-22 21:32:48.238086-07
377	100	4000001	2021-08-23	2	2	SALES	0	31000001	0	C	5.00	0.00	-1882662.00	\N	\N	\N	SL000065	1000000		f	t	Profit Posting for Invoice SL000065	Admin	2021-08-22 21:32:48.238086-07	\N	\N	\N	Admin	2021-08-22 21:32:48.238086-07
378	100	4000001	2021-08-23	2	3	SALES	1000000000012	14000001	0	D	30.00	0.00	-160180.00	\N	\N	\N	SL000065	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000065	Admin	2021-08-22 21:32:48.238086-07	\N	\N	\N	Admin	2021-08-22 21:32:48.238086-07
379	100	4000001	2021-08-23	3	1	SALES	0	13100001	0	C	5000.00	0.00	-28194546.00	\N	\N	\N	SL000066	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-22 22:42:01.534673-07	\N	\N	\N	Admin	2021-08-22 22:42:01.534673-07
380	100	4000001	2021-08-23	3	2	SALES	0	31000001	0	C	1000.00	0.00	-1881662.00	\N	\N	\N	SL000066	1000000		f	t	Profit Posting for Invoice SL000066	Admin	2021-08-22 22:42:01.534673-07	\N	\N	\N	Admin	2021-08-22 22:42:01.534673-07
381	100	4000001	2021-08-23	3	3	SALES	1000000000001	14000001	0	D	6000.00	0.00	8609104.00	\N	\N	\N	SL000066	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000066	Admin	2021-08-22 22:42:01.534673-07	\N	\N	\N	Admin	2021-08-22 22:42:01.534673-07
382	100	0	2021-08-23	4	1	STOCK	0	13100001	0	D	4000000.00	0.00	-32194546.00	\N	\N	\N	ST00000099	0009	Admin	f	t	Stock for Refrigaretor	Admin	2021-08-22 22:49:49.6501-07	\N	\N	\N	Admin	2021-08-22 22:49:49.6501-07
383	100	0	2021-08-23	4	2	STOCK	1000000000019	24000001	13100000	C	4000000.00	0.00	1977900.00	\N	\N	\N	ST00000099	0009	\N	f	t	Purchase bill for ST00000099	Admin	2021-08-22 22:49:49.6501-07	\N	\N	\N	Admin	2021-08-22 22:49:49.6501-07
384	100	0	2021-08-23	4	3	STOCK	0	11100001	13100000	C	4000000.00	0.00	4673300.00	\N	\N	\N	ST00000099	0009	\N	f	t	Purchase payment for ST00000099	Admin	2021-08-22 22:49:49.6501-07	\N	\N	\N	Admin	2021-08-22 22:49:49.6501-07
385	100	0	2021-08-23	4	4	STOCK	1000000000019	24000001	13100000	D	4000000.00	0.00	5977900.00	\N	\N	\N	ST00000099	0009	\N	f	t	Purchase Payment for ST00000099	Admin	2021-08-22 22:49:49.6501-07	\N	\N	\N	Admin	2021-08-22 22:49:49.6501-07
158	100	4000001	2021-08-13	8	1	SALES	0	13100001	0	C	25.00	25.00	-1188829.00	\N	\N	\N	SL000019	1000000		f	t	Sales for Ata	Admin	2021-08-13 02:51:50.699446-07	Admin	2021-08-22 22:51:38.097053-07	Cancel Invoice	Admin	2021-08-13 02:51:50.699446-07
159	100	4000001	2021-08-13	8	2	SALES	0	31000001	0	C	5.00	5.00	18045.00	\N	\N	\N	SL000019	1000000		f	t	Profit Posting for Invoice SL000019	Admin	2021-08-13 02:51:50.699446-07	Admin	2021-08-22 22:51:38.097053-07	Cancel Invoice	Admin	2021-08-13 02:51:50.699446-07
160	100	4000001	2021-08-13	8	3	SALES	1000000000001	14000001	0	D	30.00	30.00	-18420.00	\N	\N	\N	SL000019	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000019	Admin	2021-08-13 02:51:50.699446-07	Admin	2021-08-22 22:51:38.097053-07	Cancel Invoice	Admin	2021-08-13 02:51:50.699446-07
386	100	4000001	2021-08-23	5	1	SALES	0	13100001	0	C	60000.00	0.00	-32134571.00	\N	\N	\N	SL000067	1000000		f	t	Sales for refrigaretor	Admin	2021-08-22 22:52:20.221662-07	\N	\N	\N	Admin	2021-08-22 22:52:20.221662-07
387	100	4000001	2021-08-23	5	2	SALES	0	31000001	0	C	15000.00	0.00	-1866667.00	\N	\N	\N	SL000067	1000000		f	t	Profit Posting for Invoice SL000067	Admin	2021-08-22 22:52:20.221662-07	\N	\N	\N	Admin	2021-08-22 22:52:20.221662-07
388	100	4000001	2021-08-23	5	3	SALES	1000000000008	14000001	0	D	75000.00	0.00	-840271.00	\N	\N	\N	SL000067	5465676	\N	f	t	Bill Payment for Purchase SALES SL000067	Admin	2021-08-22 22:52:20.221662-07	\N	\N	\N	Admin	2021-08-22 22:52:20.221662-07
389	100	0	2021-08-23	6	1	STOCK	0	13100001	0	D	3000.00	0.00	-32137571.00	\N	\N	\N	ST00000100	0003	Admin	f	t	Stock for Fresh-Oil	Admin	2021-08-23 02:55:40.57085-07	\N	\N	\N	Admin	2021-08-23 02:55:40.57085-07
390	100	0	2021-08-23	6	2	STOCK	1000000000006	24000001	13100000	C	3000.00	0.00	18000.00	\N	\N	\N	ST00000100	0003	\N	f	t	Purchase bill for ST00000100	Admin	2021-08-23 02:55:40.57085-07	\N	\N	\N	Admin	2021-08-23 02:55:40.57085-07
391	100	0	2021-08-23	6	3	STOCK	0	11100001	13100000	C	3000.00	0.00	4676300.00	\N	\N	\N	ST00000100	0003	\N	f	t	Purchase payment for ST00000100	Admin	2021-08-23 02:55:40.57085-07	\N	\N	\N	Admin	2021-08-23 02:55:40.57085-07
392	100	0	2021-08-23	6	4	STOCK	1000000000006	24000001	13100000	D	3000.00	0.00	21000.00	\N	\N	\N	ST00000100	0003	\N	f	t	Purchase Payment for ST00000100	Admin	2021-08-23 02:55:40.57085-07	\N	\N	\N	Admin	2021-08-23 02:55:40.57085-07
393	100	4000001	2021-08-23	7	1	SALES	0	13100001	0	C	120.00	0.00	-32137451.00	\N	\N	\N	SL000068	1000000		f	t	Sales for fresh-oil	Admin	2021-08-23 02:59:52.572537-07	\N	\N	\N	Admin	2021-08-23 02:59:52.572537-07
394	100	4000001	2021-08-23	7	2	SALES	0	31000001	0	C	40.00	0.00	-1866627.00	\N	\N	\N	SL000068	1000000		f	t	Profit Posting for Invoice SL000068	Admin	2021-08-23 02:59:52.572537-07	\N	\N	\N	Admin	2021-08-23 02:59:52.572537-07
395	100	4000001	2021-08-23	7	3	SALES	1000000000012	14000001	0	D	160.00	0.00	-160210.00	\N	\N	\N	SL000068	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000068	Admin	2021-08-23 02:59:52.572537-07	\N	\N	\N	Admin	2021-08-23 02:59:52.572537-07
396	100	4000001	2021-08-23	8	1	SALES	0	13100001	0	C	90.00	0.00	-32137361.00	\N	\N	\N	SL000069	1000000		f	t	Sales for fresh-oil	Admin	2021-08-23 03:04:48.274191-07	\N	\N	\N	Admin	2021-08-23 03:04:48.274191-07
397	100	4000001	2021-08-23	8	2	SALES	0	31000001	0	C	30.00	0.00	-1866597.00	\N	\N	\N	SL000069	1000000		f	t	Profit Posting for Invoice SL000069	Admin	2021-08-23 03:04:48.274191-07	\N	\N	\N	Admin	2021-08-23 03:04:48.274191-07
398	100	4000001	2021-08-23	8	3	SALES	1000000000004	14000001	0	D	120.00	0.00	-684075.00	\N	\N	\N	SL000069	118486586	\N	f	t	Bill Payment for Purchase SALES SL000069	Admin	2021-08-23 03:04:48.274191-07	\N	\N	\N	Admin	2021-08-23 03:04:48.274191-07
399	100	4000001	2021-08-26	1	1	SALES	0	13100001	0	C	200000.00	0.00	-31937361.00	\N	\N	\N	SL000070	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-25 21:59:14.769023-07	\N	\N	\N	Admin	2021-08-25 21:59:14.769023-07
400	100	4000001	2021-08-26	1	2	SALES	0	31000001	0	C	40000.00	0.00	-1826597.00	\N	\N	\N	SL000070	1000000		f	t	Profit Posting for Invoice SL000070	Admin	2021-08-25 21:59:14.769023-07	\N	\N	\N	Admin	2021-08-25 21:59:14.769023-07
401	100	4000001	2021-08-26	1	3	SALES	1000000000001	14000001	0	D	240000.00	0.00	8603134.00	\N	\N	\N	SL000070	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000070	Admin	2021-08-25 21:59:14.769023-07	\N	\N	\N	Admin	2021-08-25 21:59:14.769023-07
402	100	4000001	2021-08-26	2	1	SALES	0	13100001	0	C	100000.00	0.00	-31837361.00	\N	\N	\N	SL000071	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-25 21:59:30.661836-07	\N	\N	\N	Admin	2021-08-25 21:59:30.661836-07
403	100	4000001	2021-08-26	2	2	SALES	0	31000001	0	C	20000.00	0.00	-1806597.00	\N	\N	\N	SL000071	1000000		f	t	Profit Posting for Invoice SL000071	Admin	2021-08-25 21:59:30.661836-07	\N	\N	\N	Admin	2021-08-25 21:59:30.661836-07
404	100	4000001	2021-08-26	2	3	SALES	1000000000001	14000001	0	D	120000.00	0.00	8363134.00	\N	\N	\N	SL000071	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000071	Admin	2021-08-25 21:59:30.661836-07	\N	\N	\N	Admin	2021-08-25 21:59:30.661836-07
405	100	4000001	2021-08-26	3	1	SALES	0	13100001	0	C	35000.00	0.00	-31802361.00	\N	\N	\N	SL000072	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-25 22:06:59.996485-07	\N	\N	\N	Admin	2021-08-25 22:06:59.996485-07
406	100	4000001	2021-08-26	3	2	SALES	0	31000001	0	C	7000.00	0.00	-1799597.00	\N	\N	\N	SL000072	1000000		f	t	Profit Posting for Invoice SL000072	Admin	2021-08-25 22:06:59.996485-07	\N	\N	\N	Admin	2021-08-25 22:06:59.996485-07
407	100	4000001	2021-08-26	3	3	SALES	1000000000004	14000001	0	D	42000.00	0.00	-684195.00	\N	\N	\N	SL000072	118486586	\N	f	t	Bill Payment for Purchase SALES SL000072	Admin	2021-08-25 22:06:59.996485-07	\N	\N	\N	Admin	2021-08-25 22:06:59.996485-07
408	100	4000001	2021-08-26	4	1	SALES	0	13100001	0	C	390.00	0.00	-31801971.00	\N	\N	\N	SL000073	1000000		f	t	Sales for fresh-oil	Admin	2021-08-25 22:16:58.719488-07	\N	\N	\N	Admin	2021-08-25 22:16:58.719488-07
409	100	4000001	2021-08-26	4	2	SALES	0	31000001	0	C	130.00	0.00	-1799467.00	\N	\N	\N	SL000073	1000000		f	t	Profit Posting for Invoice SL000073	Admin	2021-08-25 22:16:58.719488-07	\N	\N	\N	Admin	2021-08-25 22:16:58.719488-07
410	100	4000001	2021-08-26	4	3	SALES	1000000000001	14000001	0	D	520.00	0.00	8243134.00	\N	\N	\N	SL000073	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000073	Admin	2021-08-25 22:16:58.719488-07	\N	\N	\N	Admin	2021-08-25 22:16:58.719488-07
411	100	4000001	2021-08-26	5	1	SALES	0	13100001	0	C	198000.00	0.00	-31603971.00	\N	\N	\N	SL000074	1000000		f	t	Sales for white washing machine	Admin	2021-08-25 22:21:21.729147-07	\N	\N	\N	Admin	2021-08-25 22:21:21.729147-07
412	100	4000001	2021-08-26	5	2	SALES	0	31000001	0	C	22000.00	0.00	-1777467.00	\N	\N	\N	SL000074	1000000		f	t	Profit Posting for Invoice SL000074	Admin	2021-08-25 22:21:21.729147-07	\N	\N	\N	Admin	2021-08-25 22:21:21.729147-07
413	100	4000001	2021-08-26	5	3	SALES	1000000000008	14000001	0	D	220000.00	0.00	-915271.00	\N	\N	\N	SL000074	5465676	\N	f	t	Bill Payment for Purchase SALES SL000074	Admin	2021-08-25 22:21:21.729147-07	\N	\N	\N	Admin	2021-08-25 22:21:21.729147-07
414	100	4000001	2021-08-26	6	1	SALES	0	13100001	0	C	75.00	0.00	-31603896.00	\N	\N	\N	SL000075	1000000		f	t	Sales for Ata	Admin	2021-08-25 22:28:08.27502-07	\N	\N	\N	Admin	2021-08-25 22:28:08.27502-07
415	100	4000001	2021-08-26	6	2	SALES	0	31000001	0	C	15.00	0.00	-1777452.00	\N	\N	\N	SL000075	1000000		f	t	Profit Posting for Invoice SL000075	Admin	2021-08-25 22:28:08.27502-07	\N	\N	\N	Admin	2021-08-25 22:28:08.27502-07
416	100	4000001	2021-08-26	6	3	SALES	1000000000012	14000001	0	D	90.00	0.00	-160370.00	\N	\N	\N	SL000075	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000075	Admin	2021-08-25 22:28:08.27502-07	\N	\N	\N	Admin	2021-08-25 22:28:08.27502-07
417	100	4000001	2021-08-26	7	1	SALES	0	13100001	0	C	126.00	0.00	-31603770.00	\N	\N	\N	SL000076	1000000		f	t	Sales for Water	Admin	2021-08-25 22:45:36.794057-07	\N	\N	\N	Admin	2021-08-25 22:45:36.794057-07
418	100	4000001	2021-08-26	7	2	SALES	0	31000001	0	C	72.00	0.00	-1777380.00	\N	\N	\N	SL000076	1000000		f	t	Profit Posting for Invoice SL000076	Admin	2021-08-25 22:45:36.794057-07	\N	\N	\N	Admin	2021-08-25 22:45:36.794057-07
419	100	4000001	2021-08-26	7	3	SALES	1000000000001	14000001	0	D	198.00	0.00	8242614.00	\N	\N	\N	SL000076	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000076	Admin	2021-08-25 22:45:36.794057-07	\N	\N	\N	Admin	2021-08-25 22:45:36.794057-07
420	100	4000001	2021-08-26	8	1	SALES	0	13100001	0	C	56.00	0.00	-31603714.00	\N	\N	\N	SL000077	1000000		f	t	Sales for Water	Admin	2021-08-25 22:54:10.842757-07	\N	\N	\N	Admin	2021-08-25 22:54:10.842757-07
421	100	4000001	2021-08-26	8	2	SALES	0	31000001	0	C	32.00	0.00	-1777348.00	\N	\N	\N	SL000077	1000000		f	t	Profit Posting for Invoice SL000077	Admin	2021-08-25 22:54:10.842757-07	\N	\N	\N	Admin	2021-08-25 22:54:10.842757-07
422	100	4000001	2021-08-26	8	3	SALES	1000000000008	14000001	0	D	88.00	0.00	-1135271.00	\N	\N	\N	SL000077	5465676	\N	f	t	Bill Payment for Purchase SALES SL000077	Admin	2021-08-25 22:54:10.842757-07	\N	\N	\N	Admin	2021-08-25 22:54:10.842757-07
423	100	4000001	2021-08-26	9	1	SALES	0	13100001	0	C	108000.00	0.00	-31495714.00	\N	\N	\N	SL000078	1000000		f	t	Sales for white washing machine	Admin	2021-08-25 23:07:24.938994-07	\N	\N	\N	Admin	2021-08-25 23:07:24.938994-07
424	100	4000001	2021-08-26	9	2	SALES	0	31000001	0	C	12000.00	0.00	-1765348.00	\N	\N	\N	SL000078	1000000		f	t	Profit Posting for Invoice SL000078	Admin	2021-08-25 23:07:24.938994-07	\N	\N	\N	Admin	2021-08-25 23:07:24.938994-07
425	100	4000001	2021-08-26	9	3	SALES	1000000000012	14000001	0	D	120000.00	0.00	-160460.00	\N	\N	\N	SL000078	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000078	Admin	2021-08-25 23:07:24.938994-07	\N	\N	\N	Admin	2021-08-25 23:07:24.938994-07
426	100	0	2021-08-26	10	1	STOCK	0	13100001	0	D	30.00	0.00	-31495744.00	\N	\N	\N	ST00000101	0009	Admin	f	t	Stock for Chanachur	Admin	2021-08-26 02:03:50.979567-07	\N	\N	\N	Admin	2021-08-26 02:03:50.979567-07
427	100	0	2021-08-26	10	2	STOCK	0	13100001	0	D	14.00	0.00	-31495758.00	\N	\N	\N	ST00000101	0009	Admin	f	t	Stock for Water	Admin	2021-08-26 02:03:50.979567-07	\N	\N	\N	Admin	2021-08-26 02:03:50.979567-07
428	100	0	2021-08-26	10	3	STOCK	1000000000019	24000001	13100000	C	44.00	0.00	1977900.00	\N	\N	\N	ST00000101	0009	\N	f	t	Purchase bill for ST00000101	Admin	2021-08-26 02:03:50.979567-07	\N	\N	\N	Admin	2021-08-26 02:03:50.979567-07
429	100	0	2021-08-26	10	4	STOCK	0	11100001	13100000	C	30.00	0.00	4676330.00	\N	\N	\N	ST00000101	0009	\N	f	t	Purchase payment for ST00000101	Admin	2021-08-26 02:03:50.979567-07	\N	\N	\N	Admin	2021-08-26 02:03:50.979567-07
430	100	0	2021-08-26	10	5	STOCK	1000000000019	24000001	13100000	D	30.00	0.00	1977944.00	\N	\N	\N	ST00000101	0009	\N	f	t	Purchase Payment for ST00000101	Admin	2021-08-26 02:03:50.979567-07	\N	\N	\N	Admin	2021-08-26 02:03:50.979567-07
431	100	0	2021-08-26	11	1	STOCK	0	13100001	0	D	18000.00	0.00	-31513758.00	\N	\N	\N	ST00000102	0009	Admin	f	t	Stock for White Washing Machine	Admin	2021-08-26 02:04:33.817964-07	\N	\N	\N	Admin	2021-08-26 02:04:33.817964-07
432	100	0	2021-08-26	11	2	STOCK	1000000000019	24000001	13100000	C	18000.00	0.00	1977914.00	\N	\N	\N	ST00000102	0009	\N	f	t	Purchase bill for ST00000102	Admin	2021-08-26 02:04:33.817964-07	\N	\N	\N	Admin	2021-08-26 02:04:33.817964-07
433	100	0	2021-08-26	12	1	STOCK_RETURN	1000000000019	24000001	13100001	C	18000.00	0.00	1995914.00	\N	\N	\N	ST00000102	\N		f	t	Stock Return for ST00000102	Admin	2021-08-26 02:05:00.370845-07	\N	\N	\N	Admin	2021-08-26 02:05:00.370845-07
434	100	0	2021-08-26	12	2	STOCK_RETURN	0	13100001	24000001	D	18000.00	0.00	-31531758.00	\N	\N	\N	ST00000102	\N	\N	f	t	Stock Return for ST00000102	Admin	2021-08-26 02:05:00.370845-07	\N	\N	\N	Admin	2021-08-26 02:05:00.370845-07
435	100	0	2021-08-26	13	1	STOCK_RETURN	0	13100001	24000001	C	20.00	0.00	-31531738.00	\N	\N	\N	RT00000007			f	t	Stock Return for fresh-oil 1	Admin	2021-08-26 02:05:58.558513-07	\N	\N	\N	Admin	2021-08-26 02:05:58.558513-07
436	100	0	2021-08-26	13	2	STOCK_RETURN	1000000000019	24000001	13100001	D	20.00	0.00	2013914.00	\N	\N	\N	RT00000007			f	t	Stock Return for fresh-oil 1	Admin	2021-08-26 02:05:58.558513-07	\N	\N	\N	Admin	2021-08-26 02:05:58.558513-07
437	100	0	2021-08-26	14	1	STOCK	0	13100001	0	D	50000.00	0.00	-31581738.00	\N	\N	\N	ST00000103	0009	Admin	f	t	Stock for Mobile Phone	Admin	2021-08-26 02:06:36.589337-07	\N	\N	\N	Admin	2021-08-26 02:06:36.589337-07
438	100	0	2021-08-26	14	2	STOCK	1000000000019	24000001	13100000	C	50000.00	0.00	2013894.00	\N	\N	\N	ST00000103	0009	\N	f	t	Purchase bill for ST00000103	Admin	2021-08-26 02:06:36.589337-07	\N	\N	\N	Admin	2021-08-26 02:06:36.589337-07
439	100	0	2021-08-26	15	1	STOCK_RETURN	0	13100001	24000001	C	4000.00	0.00	-31577738.00	\N	\N	\N	RT00000008			f	t	Stock Return for Mobile Phone S10	Admin	2021-08-26 02:07:39.177333-07	\N	\N	\N	Admin	2021-08-26 02:07:39.177333-07
440	100	0	2021-08-26	15	2	STOCK_RETURN	1000000000019	24000001	13100001	D	4000.00	0.00	2063894.00	\N	\N	\N	RT00000008			f	t	Stock Return for Mobile Phone S10	Admin	2021-08-26 02:07:39.177333-07	\N	\N	\N	Admin	2021-08-26 02:07:39.177333-07
441	100	4000001	2021-08-26	16	1	SALES	0	13100001	0	C	24000.00	0.00	-31553738.00	\N	\N	\N	SL000079	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-26 02:13:47.021473-07	\N	\N	\N	Admin	2021-08-26 02:13:47.021473-07
442	100	4000001	2021-08-26	16	2	SALES	0	31000001	0	C	8000.00	0.00	-1757348.00	\N	\N	\N	SL000079	1000000		f	t	Profit Posting for Invoice SL000079	Admin	2021-08-26 02:13:47.021473-07	\N	\N	\N	Admin	2021-08-26 02:13:47.021473-07
443	100	4000001	2021-08-26	16	3	SALES	1000000000012	14000001	0	D	32000.00	0.00	-280460.00	\N	\N	\N	SL000079	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000079	Admin	2021-08-26 02:13:47.021473-07	\N	\N	\N	Admin	2021-08-26 02:13:47.021473-07
444	100	4000001	2021-08-26	17	1	SALES	0	13100001	0	C	50.00	0.00	-31553688.00	\N	\N	\N	SL000080	1000000		f	t	Sales for Ata	Admin	2021-08-26 02:14:29.946524-07	\N	\N	\N	Admin	2021-08-26 02:14:29.946524-07
445	100	4000001	2021-08-26	17	2	SALES	0	31000001	0	C	10.00	0.00	-1757338.00	\N	\N	\N	SL000080	1000000		f	t	Profit Posting for Invoice SL000080	Admin	2021-08-26 02:14:29.946524-07	\N	\N	\N	Admin	2021-08-26 02:14:29.946524-07
446	100	4000001	2021-08-26	17	3	SALES	1000000000001	14000001	0	D	60.00	0.00	8242416.00	\N	\N	\N	SL000080	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000080	Admin	2021-08-26 02:14:29.946524-07	\N	\N	\N	Admin	2021-08-26 02:14:29.946524-07
468	100	4000001	2021-08-26	25	1	SALES	0	13100001	0	C	10000.00	0.00	-31371552.00	\N	\N	\N	SL000087	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-26 02:47:03.040036-07	\N	\N	\N	Admin	2021-08-26 02:47:03.040036-07
469	100	4000001	2021-08-26	25	2	SALES	0	31000001	0	C	2000.00	0.00	-1711296.00	\N	\N	\N	SL000087	1000000		f	t	Profit Posting for Invoice SL000087	Admin	2021-08-26 02:47:03.040036-07	\N	\N	\N	Admin	2021-08-26 02:47:03.040036-07
470	100	4000001	2021-08-26	25	3	SALES	1000000000004	14000001	0	D	12000.00	0.00	-934195.00	\N	\N	\N	SL000087	118486586	\N	f	t	Bill Payment for Purchase SALES SL000087	Admin	2021-08-26 02:47:03.040036-07	\N	\N	\N	Admin	2021-08-26 02:47:03.040036-07
447	100	4000001	2021-08-26	18	1	SALES	0	13100001	0	C	150.00	150.00	-31553538.00	\N	\N	\N	SL000081	1000000		f	t	Sales for fresh-oil	Admin	2021-08-26 02:15:36.888639-07	Admin	2021-08-26 02:17:17.936838-07	Cancel Invoice	Admin	2021-08-26 02:15:36.888639-07
448	100	4000001	2021-08-26	18	2	SALES	0	31000001	0	C	50.00	50.00	-1757288.00	\N	\N	\N	SL000081	1000000		f	t	Profit Posting for Invoice SL000081	Admin	2021-08-26 02:15:36.888639-07	Admin	2021-08-26 02:17:17.936838-07	Cancel Invoice	Admin	2021-08-26 02:15:36.888639-07
449	100	4000001	2021-08-26	18	3	SALES	1000000000012	14000001	0	D	200.00	200.00	-312460.00	\N	\N	\N	SL000081	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000081	Admin	2021-08-26 02:15:36.888639-07	Admin	2021-08-26 02:17:17.936838-07	Cancel Invoice	Admin	2021-08-26 02:15:36.888639-07
450	100	4000001	2021-08-26	19	1	SALES	0	13100001	0	C	200000.00	0.00	-31353688.00	\N	\N	\N	SL000082	1000000		f	t	Sales for refrigaretor	Admin	2021-08-26 02:17:49.467669-07	\N	\N	\N	Admin	2021-08-26 02:17:49.467669-07
451	100	4000001	2021-08-26	19	2	SALES	0	31000001	0	C	50000.00	0.00	-1707338.00	\N	\N	\N	SL000082	1000000		f	t	Profit Posting for Invoice SL000082	Admin	2021-08-26 02:17:49.467669-07	\N	\N	\N	Admin	2021-08-26 02:17:49.467669-07
452	100	4000001	2021-08-26	19	3	SALES	1000000000004	14000001	0	D	250000.00	0.00	-726195.00	\N	\N	\N	SL000082	118486586	\N	f	t	Bill Payment for Purchase SALES SL000082	Admin	2021-08-26 02:17:49.467669-07	\N	\N	\N	Admin	2021-08-26 02:17:49.467669-07
453	100	4000001	2021-08-26	20	1	SALES_RETURN	0	13100001	14000001	D	40000.00	0.00	-31393688.00	\N	\N	\N	SL000082	118486586		f	t	Invoice Return for SL000082	Admin	2021-08-26 02:20:35.132521-07	\N	\N	\N	Admin	2021-08-26 02:20:35.132521-07
454	100	4000001	2021-08-26	20	2	SALES_RETURN	1000000000004	14000001	13100001	C	50000.00	0.00	-976195.00	\N	\N	\N	SL000082	118486586		f	t	Invoice Return for SL000082	Admin	2021-08-26 02:20:35.132521-07	\N	\N	\N	Admin	2021-08-26 02:20:35.132521-07
455	100	4000001	2021-08-26	20	3	SALES_RETURN	0	31000001	13100001	D	10000.00	0.00	-1717338.00	\N	\N	\N	SL000082	118486586		f	t	Profit Reverse for Invoice SL000082	Admin	2021-08-26 02:20:35.132521-07	\N	\N	\N	Admin	2021-08-26 02:20:35.132521-07
456	100	4000001	2021-08-26	21	1	SALES	0	13100001	0	C	90.00	0.00	-31393598.00	\N	\N	\N	SL000083	1000000		f	t	Sales for fresh-oil	Admin	2021-08-26 02:30:37.467411-07	\N	\N	\N	Admin	2021-08-26 02:30:37.467411-07
457	100	4000001	2021-08-26	21	2	SALES	0	31000001	0	C	30.00	0.00	-1717308.00	\N	\N	\N	SL000083	1000000		f	t	Profit Posting for Invoice SL000083	Admin	2021-08-26 02:30:37.467411-07	\N	\N	\N	Admin	2021-08-26 02:30:37.467411-07
458	100	4000001	2021-08-26	21	3	SALES	1000000000008	14000001	0	D	120.00	0.00	-1135359.00	\N	\N	\N	SL000083	5465676	\N	f	t	Bill Payment for Purchase SALES SL000083	Admin	2021-08-26 02:30:37.467411-07	\N	\N	\N	Admin	2021-08-26 02:30:37.467411-07
459	100	4000001	2021-08-26	22	1	SALES	0	13100001	0	C	60.00	0.00	-31393538.00	\N	\N	\N	SL000084	1000000		f	t	Sales for fresh-oil	Admin	2021-08-26 02:30:55.254461-07	\N	\N	\N	Admin	2021-08-26 02:30:55.254461-07
460	100	4000001	2021-08-26	22	2	SALES	0	31000001	0	C	20.00	0.00	-1717288.00	\N	\N	\N	SL000084	1000000		f	t	Profit Posting for Invoice SL000084	Admin	2021-08-26 02:30:55.254461-07	\N	\N	\N	Admin	2021-08-26 02:30:55.254461-07
461	100	4000001	2021-08-26	22	3	SALES	1000000000008	14000001	0	D	80.00	0.00	-1135479.00	\N	\N	\N	SL000084	5465676	\N	f	t	Bill Payment for Purchase SALES SL000084	Admin	2021-08-26 02:30:55.254461-07	\N	\N	\N	Admin	2021-08-26 02:30:55.254461-07
462	100	4000001	2021-08-26	23	1	SALES	0	13100001	0	C	6000.00	0.00	-31387538.00	\N	\N	\N	SL000085	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-26 02:35:49.19233-07	\N	\N	\N	Admin	2021-08-26 02:35:49.19233-07
463	100	4000001	2021-08-26	23	2	SALES	0	31000001	0	C	2000.00	0.00	-1715288.00	\N	\N	\N	SL000085	1000000		f	t	Profit Posting for Invoice SL000085	Admin	2021-08-26 02:35:49.19233-07	\N	\N	\N	Admin	2021-08-26 02:35:49.19233-07
464	100	4000001	2021-08-26	23	3	SALES	1000000000001	14000001	0	D	8000.00	0.00	8242356.00	\N	\N	\N	SL000085	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000085	Admin	2021-08-26 02:35:49.19233-07	\N	\N	\N	Admin	2021-08-26 02:35:49.19233-07
465	100	4000001	2021-08-26	24	1	SALES	0	13100001	0	C	6000.00	0.00	-31381538.00	\N	\N	\N	SL000086	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-26 02:37:23.575036-07	\N	\N	\N	Admin	2021-08-26 02:37:23.575036-07
466	100	4000001	2021-08-26	24	2	SALES	0	31000001	0	C	2000.00	0.00	-1713288.00	\N	\N	\N	SL000086	1000000		f	t	Profit Posting for Invoice SL000086	Admin	2021-08-26 02:37:23.575036-07	\N	\N	\N	Admin	2021-08-26 02:37:23.575036-07
467	100	4000001	2021-08-26	24	3	SALES	1000000000004	14000001	0	D	8000.00	0.00	-926195.00	\N	\N	\N	SL000086	118486586	\N	f	t	Bill Payment for Purchase SALES SL000086	Admin	2021-08-26 02:37:23.575036-07	\N	\N	\N	Admin	2021-08-26 02:37:23.575036-07
174	100	4000001	2021-08-14	2	1	SALES	0	13100001	0	C	18000.00	18000.00	-2042215.00	\N	\N	\N	SL000023	1000000		f	t	Sales for white washing machine	Admin	2021-08-13 22:35:18.922602-07	Admin	2021-08-26 02:48:58.71438-07	Cancel Invoice	Admin	2021-08-13 22:35:18.922602-07
175	100	4000001	2021-08-14	2	2	SALES	0	31000001	0	C	2000.00	2000.00	26053.00	\N	\N	\N	SL000023	1000000		f	t	Profit Posting for Invoice SL000023	Admin	2021-08-13 22:35:18.922602-07	Admin	2021-08-26 02:48:58.71438-07	Cancel Invoice	Admin	2021-08-13 22:35:18.922602-07
176	100	4000001	2021-08-14	2	3	SALES	1000000000001	14000001	0	D	20000.00	20000.00	-18472.00	\N	\N	\N	SL000023	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000023	Admin	2021-08-13 22:35:18.922602-07	Admin	2021-08-26 02:48:58.71438-07	Cancel Invoice	Admin	2021-08-13 22:35:18.922602-07
471	100	4000001	2021-08-26	26	1	SALES	0	13100001	0	C	20000.00	0.00	-31369552.00	\N	\N	\N	SL000088	1000000		f	t	Sales for refrigaretor	Admin	2021-08-26 02:50:14.339851-07	\N	\N	\N	Admin	2021-08-26 02:50:14.339851-07
472	100	4000001	2021-08-26	26	2	SALES	0	31000001	0	C	5000.00	0.00	-1708296.00	\N	\N	\N	SL000088	1000000		f	t	Profit Posting for Invoice SL000088	Admin	2021-08-26 02:50:14.339851-07	\N	\N	\N	Admin	2021-08-26 02:50:14.339851-07
473	100	4000001	2021-08-26	26	3	SALES	1000000000004	14000001	0	D	25000.00	0.00	-946195.00	\N	\N	\N	SL000088	118486586	\N	f	t	Bill Payment for Purchase SALES SL000088	Admin	2021-08-26 02:50:14.339851-07	\N	\N	\N	Admin	2021-08-26 02:50:14.339851-07
475	100	4000001	2021-08-26	27	2	SALES	0	31000001	0	C	10.00	0.00	-1708286.00	\N	\N	\N	SL000089	1000000		f	t	Profit Posting for Invoice SL000089	Admin	2021-08-26 02:52:43.702033-07	\N	\N	\N	Admin	2021-08-26 02:52:43.702033-07
476	100	4000001	2021-08-26	27	3	SALES	1000000000001	14000001	0	D	60.00	0.00	8254378.00	\N	\N	\N	SL000089	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000089	Admin	2021-08-26 02:52:43.702033-07	\N	\N	\N	Admin	2021-08-26 02:52:43.702033-07
477	100	4000001	2021-08-26	28	1	SALES	0	13100001	0	C	30.00	0.00	-31369472.00	\N	\N	\N	SL000090	1000000		f	t	Sales for fresh-oil	Admin	2021-08-26 03:46:38.720135-07	\N	\N	\N	Admin	2021-08-26 03:46:38.720135-07
478	100	4000001	2021-08-26	28	2	SALES	0	31000001	0	C	10.00	0.00	-1708276.00	\N	\N	\N	SL000090	1000000		f	t	Profit Posting for Invoice SL000090	Admin	2021-08-26 03:46:38.720135-07	\N	\N	\N	Admin	2021-08-26 03:46:38.720135-07
479	100	4000001	2021-08-26	28	3	SALES	1000000000004	14000001	0	D	40.00	0.00	-971195.00	\N	\N	\N	SL000090	118486586	\N	f	t	Bill Payment for Purchase SALES SL000090	Admin	2021-08-26 03:46:38.720135-07	\N	\N	\N	Admin	2021-08-26 03:46:38.720135-07
480	100	4000001	2021-08-27	1	1	SALES	0	13100001	0	C	200000.00	0.00	-31169472.00	\N	\N	\N	SL000091	1000000		f	t	Sales for refrigaretor	Admin	2021-08-26 22:04:48.501549-07	\N	\N	\N	Admin	2021-08-26 22:04:48.501549-07
481	100	4000001	2021-08-27	1	2	SALES	0	31000001	0	C	50000.00	0.00	-1658276.00	\N	\N	\N	SL000091	1000000		f	t	Profit Posting for Invoice SL000091	Admin	2021-08-26 22:04:48.501549-07	\N	\N	\N	Admin	2021-08-26 22:04:48.501549-07
482	100	4000001	2021-08-27	1	3	SALES	1000000000001	14000001	0	D	250000.00	0.00	8254318.00	\N	\N	\N	SL000091	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000091	Admin	2021-08-26 22:04:48.501549-07	\N	\N	\N	Admin	2021-08-26 22:04:48.501549-07
483	100	4000001	2021-08-27	2	1	SALES_RETURN	0	13100001	14000001	D	80000.00	0.00	-31249472.00	\N	\N	\N	SL000091	01749195756		f	t	Invoice Return for SL000091	Admin	2021-08-26 22:05:29.487922-07	\N	\N	\N	Admin	2021-08-26 22:05:29.487922-07
484	100	4000001	2021-08-27	2	2	SALES_RETURN	1000000000001	14000001	13100001	C	100000.00	0.00	8004318.00	\N	\N	\N	SL000091	01749195756		f	t	Invoice Return for SL000091	Admin	2021-08-26 22:05:29.487922-07	\N	\N	\N	Admin	2021-08-26 22:05:29.487922-07
485	100	4000001	2021-08-27	2	3	SALES_RETURN	0	31000001	13100001	D	20000.00	0.00	-1678276.00	\N	\N	\N	SL000091	01749195756		f	t	Profit Reverse for Invoice SL000091	Admin	2021-08-26 22:05:29.487922-07	\N	\N	\N	Admin	2021-08-26 22:05:29.487922-07
486	100	4000001	2021-08-27	3	1	SALES_RETURN	0	13100001	14000001	D	140000.00	0.00	-31389472.00	\N	\N	\N	SL000091	01749195756		f	t	Invoice Return for SL000091	Admin	2021-08-26 22:06:18.875369-07	\N	\N	\N	Admin	2021-08-26 22:06:18.875369-07
487	100	4000001	2021-08-27	3	2	SALES_RETURN	1000000000001	14000001	13100001	C	175000.00	0.00	8104318.00	\N	\N	\N	SL000091	01749195756		f	t	Invoice Return for SL000091	Admin	2021-08-26 22:06:18.875369-07	\N	\N	\N	Admin	2021-08-26 22:06:18.875369-07
488	100	4000001	2021-08-27	3	3	SALES_RETURN	0	31000001	13100001	D	35000.00	0.00	-1713276.00	\N	\N	\N	SL000091	01749195756		f	t	Profit Reverse for Invoice SL000091	Admin	2021-08-26 22:06:18.875369-07	\N	\N	\N	Admin	2021-08-26 22:06:18.875369-07
489	100	4000001	2021-08-27	4	1	SALES_RETURN	0	13100001	14000001	D	60000.00	0.00	-31449472.00	\N	\N	\N	SL000091	01749195756		f	t	Invoice Return for SL000091	Admin	2021-08-26 22:06:43.956335-07	\N	\N	\N	Admin	2021-08-26 22:06:43.956335-07
490	100	4000001	2021-08-27	4	2	SALES_RETURN	1000000000001	14000001	13100001	C	75000.00	0.00	8279318.00	\N	\N	\N	SL000091	01749195756		f	t	Invoice Return for SL000091	Admin	2021-08-26 22:06:43.956335-07	\N	\N	\N	Admin	2021-08-26 22:06:43.956335-07
491	100	4000001	2021-08-27	4	3	SALES_RETURN	0	31000001	13100001	D	15000.00	0.00	-1728276.00	\N	\N	\N	SL000091	01749195756		f	t	Profit Reverse for Invoice SL000091	Admin	2021-08-26 22:06:43.956335-07	\N	\N	\N	Admin	2021-08-26 22:06:43.956335-07
492	100	4000001	2021-08-27	5	1	SALES	0	13100001	0	C	50000.00	0.00	-31399472.00	\N	\N	\N	SL000092	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-26 22:15:21.270818-07	\N	\N	\N	Admin	2021-08-26 22:15:21.270818-07
493	100	4000001	2021-08-27	5	2	SALES	0	31000001	0	C	10000.00	0.00	-1718276.00	\N	\N	\N	SL000092	1000000		f	t	Profit Posting for Invoice SL000092	Admin	2021-08-26 22:15:21.270818-07	\N	\N	\N	Admin	2021-08-26 22:15:21.270818-07
494	100	4000001	2021-08-27	5	3	SALES	1000000000012	14000001	0	D	60000.00	0.00	-312460.00	\N	\N	\N	SL000092	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000092	Admin	2021-08-26 22:15:21.270818-07	\N	\N	\N	Admin	2021-08-26 22:15:21.270818-07
495	100	4000001	2021-08-27	6	1	SALES_RETURN	0	13100001	14000001	D	20000.00	0.00	-31419472.00	\N	\N	\N	SL000092	01673489595		f	t	Invoice Return for SL000092	Admin	2021-08-26 22:16:19.539169-07	\N	\N	\N	Admin	2021-08-26 22:16:19.539169-07
496	100	4000001	2021-08-27	6	2	SALES_RETURN	1000000000012	14000001	13100001	C	24000.00	0.00	-372460.00	\N	\N	\N	SL000092	01673489595		f	t	Invoice Return for SL000092	Admin	2021-08-26 22:16:19.539169-07	\N	\N	\N	Admin	2021-08-26 22:16:19.539169-07
497	100	4000001	2021-08-27	6	3	SALES_RETURN	0	31000001	13100001	D	4000.00	0.00	-1722276.00	\N	\N	\N	SL000092	01673489595		f	t	Profit Reverse for Invoice SL000092	Admin	2021-08-26 22:16:19.539169-07	\N	\N	\N	Admin	2021-08-26 22:16:19.539169-07
498	100	4000001	2021-08-27	7	1	SALES_RETURN	0	13100001	14000001	D	10000.00	0.00	-31429472.00	\N	\N	\N	SL000092	01673489595		f	t	Invoice Return for SL000092	Admin	2021-08-26 22:22:25.407246-07	\N	\N	\N	Admin	2021-08-26 22:22:25.407246-07
499	100	4000001	2021-08-27	7	2	SALES_RETURN	1000000000012	14000001	13100001	C	12000.00	0.00	-348460.00	\N	\N	\N	SL000092	01673489595		f	t	Invoice Return for SL000092	Admin	2021-08-26 22:22:25.407246-07	\N	\N	\N	Admin	2021-08-26 22:22:25.407246-07
500	100	4000001	2021-08-27	7	3	SALES_RETURN	0	31000001	13100001	D	2000.00	0.00	-1724276.00	\N	\N	\N	SL000092	01673489595		f	t	Profit Reverse for Invoice SL000092	Admin	2021-08-26 22:22:25.407246-07	\N	\N	\N	Admin	2021-08-26 22:22:25.407246-07
501	100	4000001	2021-08-27	8	1	SALES_RETURN	0	13100001	14000001	D	15000.00	0.00	-31444472.00	\N	\N	\N	SL000092	01673489595		f	t	Invoice Return for SL000092	Admin	2021-08-26 22:27:01.905277-07	\N	\N	\N	Admin	2021-08-26 22:27:01.905277-07
502	100	4000001	2021-08-27	8	2	SALES_RETURN	1000000000012	14000001	13100001	C	18000.00	0.00	-336460.00	\N	\N	\N	SL000092	01673489595		f	t	Invoice Return for SL000092	Admin	2021-08-26 22:27:01.905277-07	\N	\N	\N	Admin	2021-08-26 22:27:01.905277-07
503	100	4000001	2021-08-27	8	3	SALES_RETURN	0	31000001	13100001	D	3000.00	0.00	-1727276.00	\N	\N	\N	SL000092	01673489595		f	t	Profit Reverse for Invoice SL000092	Admin	2021-08-26 22:27:01.905277-07	\N	\N	\N	Admin	2021-08-26 22:27:01.905277-07
504	100	4000001	2021-08-27	9	1	SALES	0	13100001	0	C	60000.00	0.00	-31384472.00	\N	\N	\N	SL000093	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-26 23:55:16.342569-07	\N	\N	\N	Admin	2021-08-26 23:55:16.342569-07
505	100	4000001	2021-08-27	9	2	SALES	0	31000001	0	C	20000.00	0.00	-1707276.00	\N	\N	\N	SL000093	1000000		f	t	Profit Posting for Invoice SL000093	Admin	2021-08-26 23:55:16.342569-07	\N	\N	\N	Admin	2021-08-26 23:55:16.342569-07
506	100	4000001	2021-08-27	9	3	SALES	1000000000001	14000001	0	D	80000.00	0.00	8354318.00	\N	\N	\N	SL000093	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000093	Admin	2021-08-26 23:55:16.342569-07	\N	\N	\N	Admin	2021-08-26 23:55:16.342569-07
507	100	4000001	2021-08-27	10	1	SALES	0	13100001	0	C	200000.00	0.00	-31184472.00	\N	\N	\N	SL000094	1000000		f	t	Sales for refrigaretor	Admin	2021-08-26 23:57:04.983697-07	\N	\N	\N	Admin	2021-08-26 23:57:04.983697-07
508	100	4000001	2021-08-27	10	2	SALES	0	31000001	0	C	50000.00	0.00	-1657276.00	\N	\N	\N	SL000094	1000000		f	t	Profit Posting for Invoice SL000094	Admin	2021-08-26 23:57:04.983697-07	\N	\N	\N	Admin	2021-08-26 23:57:04.983697-07
509	100	4000001	2021-08-27	10	3	SALES	1000000000012	14000001	0	D	250000.00	0.00	-318460.00	\N	\N	\N	SL000094	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000094	Admin	2021-08-26 23:57:04.983697-07	\N	\N	\N	Admin	2021-08-26 23:57:04.983697-07
510	100	4000001	2021-08-27	11	1	SALES_RETURN	0	13100001	14000001	D	100000.00	0.00	-31284472.00	\N	\N	\N	SL000094	01673489595		f	t	Invoice Return for SL000094	Admin	2021-08-26 23:57:24.933749-07	\N	\N	\N	Admin	2021-08-26 23:57:24.933749-07
511	100	4000001	2021-08-27	11	2	SALES_RETURN	1000000000012	14000001	13100001	C	125000.00	0.00	-568460.00	\N	\N	\N	SL000094	01673489595		f	t	Invoice Return for SL000094	Admin	2021-08-26 23:57:24.933749-07	\N	\N	\N	Admin	2021-08-26 23:57:24.933749-07
512	100	4000001	2021-08-27	11	3	SALES_RETURN	0	31000001	13100001	D	25000.00	0.00	-1682276.00	\N	\N	\N	SL000094	01673489595		f	t	Profit Reverse for Invoice SL000094	Admin	2021-08-26 23:57:24.933749-07	\N	\N	\N	Admin	2021-08-26 23:57:24.933749-07
513	100	4000001	2021-08-27	12	1	SALES_RETURN	0	13100001	14000001	D	120000.00	0.00	-31404472.00	\N	\N	\N	SL000094	01673489595		f	t	Invoice Return for SL000094	Admin	2021-08-26 23:57:51.764222-07	\N	\N	\N	Admin	2021-08-26 23:57:51.764222-07
514	100	4000001	2021-08-27	12	2	SALES_RETURN	1000000000012	14000001	13100001	C	300000.00	0.00	-443460.00	\N	\N	\N	SL000094	01673489595		f	t	Invoice Return for SL000094	Admin	2021-08-26 23:57:51.764222-07	\N	\N	\N	Admin	2021-08-26 23:57:51.764222-07
515	100	4000001	2021-08-27	12	3	SALES_RETURN	0	31000001	13100001	D	180000.00	0.00	-1862276.00	\N	\N	\N	SL000094	01673489595		f	t	Profit Reverse for Invoice SL000094	Admin	2021-08-26 23:57:51.764222-07	\N	\N	\N	Admin	2021-08-26 23:57:51.764222-07
516	100	4000001	2021-08-27	13	1	SALES	0	13100001	0	C	140.00	0.00	-31404332.00	\N	\N	\N	SL000095	1000000		f	t	Sales for Water	Admin	2021-08-26 23:59:14.254652-07	\N	\N	\N	Admin	2021-08-26 23:59:14.254652-07
517	100	4000001	2021-08-27	13	2	SALES	0	31000001	0	C	80.00	0.00	-1862196.00	\N	\N	\N	SL000095	1000000		f	t	Profit Posting for Invoice SL000095	Admin	2021-08-26 23:59:14.254652-07	\N	\N	\N	Admin	2021-08-26 23:59:14.254652-07
518	100	4000001	2021-08-27	13	3	SALES	1000000000001	14000001	0	D	220.00	0.00	8274318.00	\N	\N	\N	SL000095	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000095	Admin	2021-08-26 23:59:14.254652-07	\N	\N	\N	Admin	2021-08-26 23:59:14.254652-07
519	100	4000001	2021-08-27	14	1	SALES	0	13100001	0	C	250.00	0.00	-31404082.00	\N	\N	\N	SL000096	1000000		f	t	Sales for Ata	Admin	2021-08-26 23:59:50.663307-07	\N	\N	\N	Admin	2021-08-26 23:59:50.663307-07
520	100	4000001	2021-08-27	14	2	SALES	0	31000001	0	C	50.00	0.00	-1862146.00	\N	\N	\N	SL000096	1000000		f	t	Profit Posting for Invoice SL000096	Admin	2021-08-26 23:59:50.663307-07	\N	\N	\N	Admin	2021-08-26 23:59:50.663307-07
521	100	4000001	2021-08-27	14	3	SALES	1000000000012	14000001	0	D	300.00	0.00	-143460.00	\N	\N	\N	SL000096	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000096	Admin	2021-08-26 23:59:50.663307-07	\N	\N	\N	Admin	2021-08-26 23:59:50.663307-07
522	100	4000001	2021-08-27	15	1	SALES_RETURN	0	13100001	14000001	D	100.00	0.00	-31404182.00	\N	\N	\N	SL000096	01673489595		f	t	Invoice Return for SL000096	Admin	2021-08-27 00:00:09.268928-07	\N	\N	\N	Admin	2021-08-27 00:00:09.268928-07
523	100	4000001	2021-08-27	15	2	SALES_RETURN	1000000000012	14000001	13100001	C	120.00	0.00	-143760.00	\N	\N	\N	SL000096	01673489595		f	t	Invoice Return for SL000096	Admin	2021-08-27 00:00:09.268928-07	\N	\N	\N	Admin	2021-08-27 00:00:09.268928-07
524	100	4000001	2021-08-27	15	3	SALES_RETURN	0	31000001	13100001	D	20.00	0.00	-1862166.00	\N	\N	\N	SL000096	01673489595		f	t	Profit Reverse for Invoice SL000096	Admin	2021-08-27 00:00:09.268928-07	\N	\N	\N	Admin	2021-08-27 00:00:09.268928-07
525	100	4000001	2021-08-27	16	1	SALES_RETURN	0	13100001	14000001	D	75.00	0.00	-31404257.00	\N	\N	\N	SL000096	01673489595		f	t	Invoice Return for SL000096	Admin	2021-08-27 02:08:59.674084-07	\N	\N	\N	Admin	2021-08-27 02:08:59.674084-07
526	100	4000001	2021-08-27	16	2	SALES_RETURN	1000000000012	14000001	13100001	C	150.00	0.00	-143640.00	\N	\N	\N	SL000096	01673489595		f	t	Invoice Return for SL000096	Admin	2021-08-27 02:08:59.674084-07	\N	\N	\N	Admin	2021-08-27 02:08:59.674084-07
527	100	4000001	2021-08-27	16	3	SALES_RETURN	0	31000001	13100001	D	75.00	0.00	-1862241.00	\N	\N	\N	SL000096	01673489595		f	t	Profit Reverse for Invoice SL000096	Admin	2021-08-27 02:08:59.674084-07	\N	\N	\N	Admin	2021-08-27 02:08:59.674084-07
528	100	4000001	2021-08-27	17	1	SALES	0	13100001	0	C	90000.00	0.00	-31314257.00	\N	\N	\N	SL000097	1000000		f	t	Sales for white washing machine	Admin	2021-08-27 02:13:31.153193-07	\N	\N	\N	Admin	2021-08-27 02:13:31.153193-07
529	100	4000001	2021-08-27	17	2	SALES	0	31000001	0	C	10000.00	0.00	-1852241.00	\N	\N	\N	SL000097	1000000		f	t	Profit Posting for Invoice SL000097	Admin	2021-08-27 02:13:31.153193-07	\N	\N	\N	Admin	2021-08-27 02:13:31.153193-07
530	100	4000001	2021-08-27	17	3	SALES	1000000000008	14000001	0	D	100000.00	0.00	-1135559.00	\N	\N	\N	SL000097	5465676	\N	f	t	Bill Payment for Purchase SALES SL000097	Admin	2021-08-27 02:13:31.153193-07	\N	\N	\N	Admin	2021-08-27 02:13:31.153193-07
531	100	4000001	2021-08-27	18	1	SALES_RETURN	0	13100001	14000001	D	72000.00	0.00	-31386257.00	\N	\N	\N	SL000078	01673489595		f	t	Invoice Return for SL000078	Admin	2021-08-27 02:14:46.494838-07	\N	\N	\N	Admin	2021-08-27 02:14:46.494838-07
532	100	4000001	2021-08-27	18	2	SALES_RETURN	1000000000012	14000001	13100001	C	80000.00	0.00	-143490.00	\N	\N	\N	SL000078	01673489595		f	t	Invoice Return for SL000078	Admin	2021-08-27 02:14:46.494838-07	\N	\N	\N	Admin	2021-08-27 02:14:46.494838-07
533	100	4000001	2021-08-27	18	3	SALES_RETURN	0	31000001	13100001	D	8000.00	0.00	-1860241.00	\N	\N	\N	SL000078	01673489595		f	t	Profit Reverse for Invoice SL000078	Admin	2021-08-27 02:14:46.494838-07	\N	\N	\N	Admin	2021-08-27 02:14:46.494838-07
534	100	4000001	2021-08-28	1	1	SALES	0	13100001	0	C	5000.00	0.00	-31381257.00	\N	\N	\N	SL000098	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-27 22:46:27.39735-07	\N	\N	\N	Admin	2021-08-27 22:46:27.39735-07
535	100	4000001	2021-08-28	1	2	SALES	0	31000001	0	C	1000.00	0.00	-1859241.00	\N	\N	\N	SL000098	1000000		f	t	Profit Posting for Invoice SL000098	Admin	2021-08-27 22:46:27.39735-07	\N	\N	\N	Admin	2021-08-27 22:46:27.39735-07
536	100	4000001	2021-08-28	1	3	SALES	1000000000012	14000001	0	D	6000.00	0.00	-63490.00	\N	\N	\N	SL000098	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000098	Admin	2021-08-27 22:46:27.39735-07	\N	\N	\N	Admin	2021-08-27 22:46:27.39735-07
537	100	4000001	2021-08-28	2	1	SALES	0	13100001	0	C	20000.00	0.00	-31361257.00	\N	\N	\N	SL000099	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-27 22:53:15.910317-07	\N	\N	\N	Admin	2021-08-27 22:53:15.910317-07
538	100	4000001	2021-08-28	2	2	SALES	0	31000001	0	C	4000.00	0.00	-1855241.00	\N	\N	\N	SL000099	1000000		f	t	Profit Posting for Invoice SL000099	Admin	2021-08-27 22:53:15.910317-07	\N	\N	\N	Admin	2021-08-27 22:53:15.910317-07
539	100	4000001	2021-08-28	2	3	SALES	1000000000004	14000001	0	D	24000.00	0.00	-971235.00	\N	\N	\N	SL000099	118486586	\N	f	t	Bill Payment for Purchase SALES SL000099	Admin	2021-08-27 22:53:15.910317-07	\N	\N	\N	Admin	2021-08-27 22:53:15.910317-07
540	100	4000001	2021-08-28	3	1	SALES	0	13100001	0	C	15000.00	0.00	-31346257.00	\N	\N	\N	SL000100	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-27 22:53:52.60427-07	\N	\N	\N	Admin	2021-08-27 22:53:52.60427-07
541	100	4000001	2021-08-28	3	2	SALES	0	31000001	0	C	3000.00	0.00	-1852241.00	\N	\N	\N	SL000100	1000000		f	t	Profit Posting for Invoice SL000100	Admin	2021-08-27 22:53:52.60427-07	\N	\N	\N	Admin	2021-08-27 22:53:52.60427-07
542	100	4000001	2021-08-28	3	3	SALES	1000000000004	14000001	0	D	18000.00	0.00	-995235.00	\N	\N	\N	SL000100	118486586	\N	f	t	Bill Payment for Purchase SALES SL000100	Admin	2021-08-27 22:53:52.60427-07	\N	\N	\N	Admin	2021-08-27 22:53:52.60427-07
549	100	4000001	2021-08-28	4	1	SALES_RETURN	0	13100001	14000001	D	18000.00	0.00	-31364257.00	\N	\N	\N	SL000078	01673489595		f	t	Invoice Return for SL000078	Admin	2021-08-28 00:25:44.380986-07	\N	\N	\N	Admin	2021-08-28 00:25:44.380986-07
550	100	4000001	2021-08-28	4	2	SALES_RETURN	1000000000012	14000001	13100001	C	60000.00	0.00	-69490.00	\N	\N	\N	SL000078	01673489595		f	t	Invoice Return for SL000078	Admin	2021-08-28 00:25:44.380986-07	\N	\N	\N	Admin	2021-08-28 00:25:44.380986-07
551	100	4000001	2021-08-28	4	3	SALES_RETURN	0	31000001	13100001	D	42000.00	0.00	-1894241.00	\N	\N	\N	SL000078	01673489595		f	t	Profit Reverse for Invoice SL000078	Admin	2021-08-28 00:25:44.380986-07	\N	\N	\N	Admin	2021-08-28 00:25:44.380986-07
552	100	4000001	2021-08-28	5	1	SALES	0	13100001	0	C	150.00	0.00	-31364107.00	\N	\N	\N	SL000101	1000000		f	t	Sales for Ata	Admin	2021-08-28 00:23:19.161784-07	\N	\N	\N	Admin	2021-08-28 00:23:19.161784-07
553	100	4000001	2021-08-28	5	2	SALES	0	31000001	0	C	30.00	0.00	-1894211.00	\N	\N	\N	SL000101	1000000		f	t	Profit Posting for Invoice SL000101	Admin	2021-08-28 00:23:19.161784-07	\N	\N	\N	Admin	2021-08-28 00:23:19.161784-07
554	100	4000001	2021-08-28	5	3	SALES	0	13100001	0	C	60.00	0.00	-31364047.00	\N	\N	\N	SL000101	1000000		f	t	Sales for fresh-oil	Admin	2021-08-28 00:23:19.161784-07	\N	\N	\N	Admin	2021-08-28 00:23:19.161784-07
555	100	4000001	2021-08-28	5	4	SALES	0	31000001	0	C	20.00	0.00	-1894191.00	\N	\N	\N	SL000101	1000000		f	t	Profit Posting for Invoice SL000101	Admin	2021-08-28 00:23:19.161784-07	\N	\N	\N	Admin	2021-08-28 00:23:19.161784-07
556	100	4000001	2021-08-28	5	5	SALES	0	13100001	0	C	100000.00	0.00	-31264047.00	\N	\N	\N	SL000101	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-28 00:23:19.161784-07	\N	\N	\N	Admin	2021-08-28 00:23:19.161784-07
557	100	4000001	2021-08-28	5	6	SALES	0	31000001	0	C	20000.00	0.00	-1874191.00	\N	\N	\N	SL000101	1000000		f	t	Profit Posting for Invoice SL000101	Admin	2021-08-28 00:23:19.161784-07	\N	\N	\N	Admin	2021-08-28 00:23:19.161784-07
558	100	4000001	2021-08-28	5	7	SALES	1000000000012	14000001	0	D	120260.00	0.00	-9490.00	\N	\N	\N	SL000101	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000101	Admin	2021-08-28 00:23:19.161784-07	\N	\N	\N	Admin	2021-08-28 00:23:19.161784-07
559	100	4000001	2021-08-28	6	1	SALES	0	13100001	0	C	24000.00	0.00	-31240047.00	\N	\N	\N	SL000102	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-28 00:36:57.293422-07	\N	\N	\N	Admin	2021-08-28 00:36:57.293422-07
560	100	4000001	2021-08-28	6	2	SALES	0	31000001	0	C	8000.00	0.00	-1866191.00	\N	\N	\N	SL000102	1000000		f	t	Profit Posting for Invoice SL000102	Admin	2021-08-28 00:36:57.293422-07	\N	\N	\N	Admin	2021-08-28 00:36:57.293422-07
561	100	4000001	2021-08-28	6	3	SALES	1000000000012	14000001	0	D	32000.00	0.00	-129750.00	\N	\N	\N	SL000102	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000102	Admin	2021-08-28 00:36:57.293422-07	\N	\N	\N	Admin	2021-08-28 00:36:57.293422-07
562	100	4000001	2021-08-28	7	1	SALES	0	13100001	0	C	6000.00	0.00	-31234047.00	\N	\N	\N	SL000103	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-28 00:37:43.137545-07	\N	\N	\N	Admin	2021-08-28 00:37:43.137545-07
563	100	4000001	2021-08-28	7	2	SALES	0	31000001	0	C	2000.00	0.00	-1864191.00	\N	\N	\N	SL000103	1000000		f	t	Profit Posting for Invoice SL000103	Admin	2021-08-28 00:37:43.137545-07	\N	\N	\N	Admin	2021-08-28 00:37:43.137545-07
564	100	4000001	2021-08-28	7	3	SALES	0	13100001	0	C	150.00	0.00	-31233897.00	\N	\N	\N	SL000103	1000000		f	t	Sales for fresh-oil	Admin	2021-08-28 00:37:43.137545-07	\N	\N	\N	Admin	2021-08-28 00:37:43.137545-07
565	100	4000001	2021-08-28	7	4	SALES	0	31000001	0	C	50.00	0.00	-1864141.00	\N	\N	\N	SL000103	1000000		f	t	Profit Posting for Invoice SL000103	Admin	2021-08-28 00:37:43.137545-07	\N	\N	\N	Admin	2021-08-28 00:37:43.137545-07
566	100	4000001	2021-08-28	7	5	SALES	1000000000001	14000001	0	D	8200.00	0.00	8274098.00	\N	\N	\N	SL000103	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000103	Admin	2021-08-28 00:37:43.137545-07	\N	\N	\N	Admin	2021-08-28 00:37:43.137545-07
567	100	4000001	2021-08-28	8	1	SALES	0	13100001	0	C	25000.00	0.00	-31208897.00	\N	\N	\N	SL000104	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-28 00:38:29.009408-07	\N	\N	\N	Admin	2021-08-28 00:38:29.009408-07
568	100	4000001	2021-08-28	8	2	SALES	0	31000001	0	C	5000.00	0.00	-1859141.00	\N	\N	\N	SL000104	1000000		f	t	Profit Posting for Invoice SL000104	Admin	2021-08-28 00:38:29.009408-07	\N	\N	\N	Admin	2021-08-28 00:38:29.009408-07
569	100	4000001	2021-08-28	8	3	SALES	1000000000008	14000001	0	D	30000.00	0.00	-1235559.00	\N	\N	\N	SL000104	5465676	\N	f	t	Bill Payment for Purchase SALES SL000104	Admin	2021-08-28 00:38:29.009408-07	\N	\N	\N	Admin	2021-08-28 00:38:29.009408-07
570	100	4000001	2021-08-28	9	1	SALES	0	13100001	0	C	10000.00	0.00	-31198897.00	\N	\N	\N	SL000105	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-28 00:38:43.675954-07	\N	\N	\N	Admin	2021-08-28 00:38:43.675954-07
571	100	4000001	2021-08-28	9	2	SALES	0	31000001	0	C	2000.00	0.00	-1857141.00	\N	\N	\N	SL000105	1000000		f	t	Profit Posting for Invoice SL000105	Admin	2021-08-28 00:38:43.675954-07	\N	\N	\N	Admin	2021-08-28 00:38:43.675954-07
572	100	4000001	2021-08-28	9	3	SALES	1000000000008	14000001	0	D	12000.00	0.00	-1265559.00	\N	\N	\N	SL000105	5465676	\N	f	t	Bill Payment for Purchase SALES SL000105	Admin	2021-08-28 00:38:43.675954-07	\N	\N	\N	Admin	2021-08-28 00:38:43.675954-07
573	100	4000001	2021-08-28	10	1	SALES_RETURN	0	13100001	14000001	D	50000.00	0.00	-31248897.00	\N	\N	\N	SL000101	01673489595		f	t	Invoice Return for SL000101	Admin	2021-08-28 00:39:02.697389-07	\N	\N	\N	Admin	2021-08-28 00:39:02.697389-07
574	100	4000001	2021-08-28	10	2	SALES_RETURN	1000000000012	14000001	13100001	C	60000.00	0.00	-161750.00	\N	\N	\N	SL000101	01673489595		f	t	Invoice Return for SL000101	Admin	2021-08-28 00:39:02.697389-07	\N	\N	\N	Admin	2021-08-28 00:39:02.697389-07
575	100	4000001	2021-08-28	10	3	SALES_RETURN	0	31000001	13100001	D	10000.00	0.00	-1867141.00	\N	\N	\N	SL000101	01673489595		f	t	Profit Reverse for Invoice SL000101	Admin	2021-08-28 00:39:02.697389-07	\N	\N	\N	Admin	2021-08-28 00:39:02.697389-07
576	100	4000001	2021-08-28	11	1	SALES	0	13100001	0	C	18000.00	0.00	-31230897.00	\N	\N	\N	SL000106	1000000		f	t	Sales for white washing machine	Admin	2021-08-28 00:46:11.892077-07	\N	\N	\N	Admin	2021-08-28 00:46:11.892077-07
577	100	4000001	2021-08-28	11	2	SALES	0	31000001	0	C	2000.00	0.00	-1865141.00	\N	\N	\N	SL000106	1000000		f	t	Profit Posting for Invoice SL000106	Admin	2021-08-28 00:46:11.892077-07	\N	\N	\N	Admin	2021-08-28 00:46:11.892077-07
578	100	4000001	2021-08-28	11	3	SALES	1000000000001	14000001	0	D	20000.00	0.00	8265898.00	\N	\N	\N	SL000106	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000106	Admin	2021-08-28 00:46:11.892077-07	\N	\N	\N	Admin	2021-08-28 00:46:11.892077-07
579	100	4000001	2021-08-28	12	1	SALES_RETURN	0	13100001	14000001	D	30.00	0.00	-31230927.00	\N	\N	\N	SL000101	01673489595		f	t	Invoice Return for SL000101	Admin	2021-08-28 03:07:59.537134-07	\N	\N	\N	Admin	2021-08-28 03:07:59.537134-07
580	100	4000001	2021-08-28	12	2	SALES_RETURN	1000000000012	14000001	13100001	C	40.00	0.00	-101750.00	\N	\N	\N	SL000101	01673489595		f	t	Invoice Return for SL000101	Admin	2021-08-28 03:07:59.537134-07	\N	\N	\N	Admin	2021-08-28 03:07:59.537134-07
581	100	4000001	2021-08-28	12	3	SALES_RETURN	0	31000001	13100001	D	10.00	0.00	-1865151.00	\N	\N	\N	SL000101	01673489595		f	t	Profit Reverse for Invoice SL000101	Admin	2021-08-28 03:07:59.537134-07	\N	\N	\N	Admin	2021-08-28 03:07:59.537134-07
585	100	4000001	2021-08-28	13	1	SALES	0	13100001	0	C	18000.00	0.00	-31212927.00	\N	\N	\N	SL000107	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-28 02:59:41.521587-07	\N	\N	\N	Admin	2021-08-28 02:59:41.521587-07
586	100	4000001	2021-08-28	13	2	SALES	0	31000001	0	C	6000.00	0.00	-1859151.00	\N	\N	\N	SL000107	1000000		f	t	Profit Posting for Invoice SL000107	Admin	2021-08-28 02:59:41.521587-07	\N	\N	\N	Admin	2021-08-28 02:59:41.521587-07
587	100	4000001	2021-08-28	13	3	SALES	1000000000001	14000001	0	D	24000.00	0.00	8245898.00	\N	\N	\N	SL000107	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000107	Admin	2021-08-28 02:59:41.521587-07	\N	\N	\N	Admin	2021-08-28 02:59:41.521587-07
588	100	4000001	2021-08-28	14	1	SALES	0	13100001	0	C	18000.00	0.00	-31194927.00	\N	\N	\N	SL000108	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-28 02:59:43.422731-07	\N	\N	\N	Admin	2021-08-28 02:59:43.422731-07
589	100	4000001	2021-08-28	14	2	SALES	0	31000001	0	C	6000.00	0.00	-1853151.00	\N	\N	\N	SL000108	1000000		f	t	Profit Posting for Invoice SL000108	Admin	2021-08-28 02:59:43.422731-07	\N	\N	\N	Admin	2021-08-28 02:59:43.422731-07
590	100	4000001	2021-08-28	14	3	SALES	1000000000001	14000001	0	D	24000.00	0.00	8221898.00	\N	\N	\N	SL000108	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000108	Admin	2021-08-28 02:59:43.422731-07	\N	\N	\N	Admin	2021-08-28 02:59:43.422731-07
591	100	4000001	2021-08-28	15	1	SALES	0	13100001	0	C	12000.00	0.00	-31182927.00	\N	\N	\N	SL000109	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-28 03:34:47.375014-07	\N	\N	\N	Admin	2021-08-28 03:34:47.375014-07
592	100	4000001	2021-08-28	15	2	SALES	0	31000001	0	C	4000.00	0.00	-1849151.00	\N	\N	\N	SL000109	1000000		f	t	Profit Posting for Invoice SL000109	Admin	2021-08-28 03:34:47.375014-07	\N	\N	\N	Admin	2021-08-28 03:34:47.375014-07
593	100	4000001	2021-08-28	15	3	SALES	1000000000001	14000001	0	D	16000.00	0.00	8197898.00	\N	\N	\N	SL000109	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000109	Admin	2021-08-28 03:34:47.375014-07	\N	\N	\N	Admin	2021-08-28 03:34:47.375014-07
594	100	4000001	2021-08-28	16	1	SALES_RETURN	0	13100001	14000001	D	6000.00	0.00	-31188927.00	\N	\N	\N	SL000109	01749195756		f	t	Invoice Return for SL000109	Admin	2021-08-28 03:35:03.741087-07	\N	\N	\N	Admin	2021-08-28 03:35:03.741087-07
595	100	4000001	2021-08-28	16	2	SALES_RETURN	1000000000001	14000001	13100001	C	8000.00	0.00	8181898.00	\N	\N	\N	SL000109	01749195756		f	t	Invoice Return for SL000109	Admin	2021-08-28 03:35:03.741087-07	\N	\N	\N	Admin	2021-08-28 03:35:03.741087-07
596	100	4000001	2021-08-28	16	3	SALES_RETURN	0	31000001	13100001	D	2000.00	0.00	-1851151.00	\N	\N	\N	SL000109	01749195756		f	t	Profit Reverse for Invoice SL000109	Admin	2021-08-28 03:35:03.741087-07	\N	\N	\N	Admin	2021-08-28 03:35:03.741087-07
597	100	4000001	2021-08-28	17	1	SALES	0	13100001	0	C	15000.00	0.00	-31173927.00	\N	\N	\N	SL000110	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-28 03:36:13.250284-07	\N	\N	\N	Admin	2021-08-28 03:36:13.250284-07
598	100	4000001	2021-08-28	17	2	SALES	0	31000001	0	C	3000.00	0.00	-1848151.00	\N	\N	\N	SL000110	1000000		f	t	Profit Posting for Invoice SL000110	Admin	2021-08-28 03:36:13.250284-07	\N	\N	\N	Admin	2021-08-28 03:36:13.250284-07
599	100	4000001	2021-08-28	17	3	SALES	1000000000012	14000001	0	D	18000.00	0.00	-101710.00	\N	\N	\N	SL000110	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000110	Admin	2021-08-28 03:36:13.250284-07	\N	\N	\N	Admin	2021-08-28 03:36:13.250284-07
600	100	4000001	2021-08-28	18	1	SALES	0	13100001	0	C	45000.00	0.00	-31128927.00	\N	\N	\N	SL000111	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-28 03:36:25.761969-07	\N	\N	\N	Admin	2021-08-28 03:36:25.761969-07
601	100	4000001	2021-08-28	18	2	SALES	0	31000001	0	C	9000.00	0.00	-1839151.00	\N	\N	\N	SL000111	1000000		f	t	Profit Posting for Invoice SL000111	Admin	2021-08-28 03:36:25.761969-07	\N	\N	\N	Admin	2021-08-28 03:36:25.761969-07
602	100	4000001	2021-08-28	18	3	SALES	1000000000012	14000001	0	D	54000.00	0.00	-119710.00	\N	\N	\N	SL000111	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000111	Admin	2021-08-28 03:36:25.761969-07	\N	\N	\N	Admin	2021-08-28 03:36:25.761969-07
603	100	4000001	2021-08-28	19	1	SALES	0	13100001	0	C	50000.00	0.00	-31078927.00	\N	\N	\N	SL000112	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-28 03:36:40.623743-07	\N	\N	\N	Admin	2021-08-28 03:36:40.623743-07
604	100	4000001	2021-08-28	19	2	SALES	0	31000001	0	C	10000.00	0.00	-1829151.00	\N	\N	\N	SL000112	1000000		f	t	Profit Posting for Invoice SL000112	Admin	2021-08-28 03:36:40.623743-07	\N	\N	\N	Admin	2021-08-28 03:36:40.623743-07
605	100	4000001	2021-08-28	19	3	SALES	1000000000012	14000001	0	D	60000.00	0.00	-173710.00	\N	\N	\N	SL000112	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000112	Admin	2021-08-28 03:36:40.623743-07	\N	\N	\N	Admin	2021-08-28 03:36:40.623743-07
606	100	4000001	2021-08-28	20	1	SALES	0	13100001	0	C	120.00	0.00	-31078807.00	\N	\N	\N	SL000113	1000000		f	t	Sales for fresh-oil	Admin	2021-08-28 03:37:31.648953-07	\N	\N	\N	Admin	2021-08-28 03:37:31.648953-07
607	100	4000001	2021-08-28	20	2	SALES	0	31000001	0	C	40.00	0.00	-1829111.00	\N	\N	\N	SL000113	1000000		f	t	Profit Posting for Invoice SL000113	Admin	2021-08-28 03:37:31.648953-07	\N	\N	\N	Admin	2021-08-28 03:37:31.648953-07
608	100	4000001	2021-08-28	20	3	SALES	1000000000008	14000001	0	D	160.00	0.00	-1277559.00	\N	\N	\N	SL000113	5465676	\N	f	t	Bill Payment for Purchase SALES SL000113	Admin	2021-08-28 03:37:31.648953-07	\N	\N	\N	Admin	2021-08-28 03:37:31.648953-07
609	100	4000001	2021-08-28	21	1	SALES	0	13100001	0	C	6000.00	0.00	-31072807.00	\N	\N	\N	SL000114	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-28 03:51:07.805169-07	\N	\N	\N	Admin	2021-08-28 03:51:07.805169-07
610	100	4000001	2021-08-28	21	2	SALES	0	31000001	0	C	2000.00	0.00	-1827111.00	\N	\N	\N	SL000114	1000000		f	t	Profit Posting for Invoice SL000114	Admin	2021-08-28 03:51:07.805169-07	\N	\N	\N	Admin	2021-08-28 03:51:07.805169-07
611	100	4000001	2021-08-28	21	3	SALES	1000000000004	14000001	0	D	8000.00	0.00	-1013235.00	\N	\N	\N	SL000114	118486586	\N	f	t	Bill Payment for Purchase SALES SL000114	Admin	2021-08-28 03:51:07.805169-07	\N	\N	\N	Admin	2021-08-28 03:51:07.805169-07
612	100	4000001	2021-08-28	22	1	SALES	0	13100001	0	C	6000.00	0.00	-31066807.00	\N	\N	\N	SL000115	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-28 03:51:26.400951-07	\N	\N	\N	Admin	2021-08-28 03:51:26.400951-07
613	100	4000001	2021-08-28	22	2	SALES	0	31000001	0	C	2000.00	0.00	-1825111.00	\N	\N	\N	SL000115	1000000		f	t	Profit Posting for Invoice SL000115	Admin	2021-08-28 03:51:26.400951-07	\N	\N	\N	Admin	2021-08-28 03:51:26.400951-07
614	100	4000001	2021-08-28	22	3	SALES	1000000000001	14000001	0	D	8000.00	0.00	8189898.00	\N	\N	\N	SL000115	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000115	Admin	2021-08-28 03:51:26.400951-07	\N	\N	\N	Admin	2021-08-28 03:51:26.400951-07
615	100	4000001	2021-08-28	23	1	SALES	0	13100001	0	C	28.00	0.00	-31066779.00	\N	\N	\N	SL000116	1000000		f	t	Sales for Water	Admin	2021-08-28 03:56:25.467273-07	\N	\N	\N	Admin	2021-08-28 03:56:25.467273-07
616	100	4000001	2021-08-28	23	2	SALES	0	31000001	0	C	16.00	0.00	-1825095.00	\N	\N	\N	SL000116	1000000		f	t	Profit Posting for Invoice SL000116	Admin	2021-08-28 03:56:25.467273-07	\N	\N	\N	Admin	2021-08-28 03:56:25.467273-07
617	100	4000001	2021-08-28	23	3	SALES	1000000000012	14000001	0	D	44.00	0.00	-233710.00	\N	\N	\N	SL000116	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000116	Admin	2021-08-28 03:56:25.467273-07	\N	\N	\N	Admin	2021-08-28 03:56:25.467273-07
618	100	4000001	2021-08-28	24	1	SALES_RETURN	0	13100001	14000001	D	14.00	0.00	-31066793.00	\N	\N	\N	SL000116	01673489595		f	t	Invoice Return for SL000116	Admin	2021-08-28 03:56:43.953326-07	\N	\N	\N	Admin	2021-08-28 03:56:43.953326-07
619	100	4000001	2021-08-28	24	2	SALES_RETURN	1000000000012	14000001	13100001	C	22.00	0.00	-233754.00	\N	\N	\N	SL000116	01673489595		f	t	Invoice Return for SL000116	Admin	2021-08-28 03:56:43.953326-07	\N	\N	\N	Admin	2021-08-28 03:56:43.953326-07
620	100	4000001	2021-08-28	24	3	SALES_RETURN	0	31000001	13100001	D	8.00	0.00	-1825103.00	\N	\N	\N	SL000116	01673489595		f	t	Profit Reverse for Invoice SL000116	Admin	2021-08-28 03:56:43.953326-07	\N	\N	\N	Admin	2021-08-28 03:56:43.953326-07
621	100	4000001	2021-08-29	1	1	SALES	0	13100001	0	C	25000.00	0.00	-31041793.00	\N	\N	\N	SL000117	1000000		f	t	Sales for Mobile Phone	Admin	2021-08-28 21:26:04.160421-07	\N	\N	\N	Admin	2021-08-28 21:26:04.160421-07
622	100	4000001	2021-08-29	1	2	SALES	0	31000001	0	C	5000.00	0.00	-1820103.00	\N	\N	\N	SL000117	1000000		f	t	Profit Posting for Invoice SL000117	Admin	2021-08-28 21:26:04.160421-07	\N	\N	\N	Admin	2021-08-28 21:26:04.160421-07
623	100	4000001	2021-08-29	1	3	SALES	1000000000012	14000001	0	D	30000.00	0.00	-233732.00	\N	\N	\N	SL000117	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000117	Admin	2021-08-28 21:26:04.160421-07	\N	\N	\N	Admin	2021-08-28 21:26:04.160421-07
624	100	4000001	2021-08-29	2	1	SALES_RETURN	0	13100001	14000001	D	15000.00	0.00	-31056793.00	\N	\N	\N	SL000117	01673489595		f	t	Invoice Return for SL000117	Admin	2021-08-28 21:26:30.274594-07	\N	\N	\N	Admin	2021-08-28 21:26:30.274594-07
625	100	4000001	2021-08-29	2	2	SALES_RETURN	1000000000012	14000001	13100001	C	18000.00	0.00	-263732.00	\N	\N	\N	SL000117	01673489595		f	t	Invoice Return for SL000117	Admin	2021-08-28 21:26:30.274594-07	\N	\N	\N	Admin	2021-08-28 21:26:30.274594-07
626	100	4000001	2021-08-29	2	3	SALES_RETURN	0	31000001	13100001	D	3000.00	0.00	-1823103.00	\N	\N	\N	SL000117	01673489595		f	t	Profit Reverse for Invoice SL000117	Admin	2021-08-28 21:26:30.274594-07	\N	\N	\N	Admin	2021-08-28 21:26:30.274594-07
627	100	4000001	2021-08-29	3	1	SALES	0	13100001	0	C	60.00	0.00	-31056733.00	\N	\N	\N	SL000118	1000000		f	t	Sales for fresh-oil	Admin	2021-08-28 21:26:49.914423-07	\N	\N	\N	Admin	2021-08-28 21:26:49.914423-07
628	100	4000001	2021-08-29	3	2	SALES	0	31000001	0	C	20.00	0.00	-1823083.00	\N	\N	\N	SL000118	1000000		f	t	Profit Posting for Invoice SL000118	Admin	2021-08-28 21:26:49.914423-07	\N	\N	\N	Admin	2021-08-28 21:26:49.914423-07
629	100	4000001	2021-08-29	3	3	SALES	1000000000004	14000001	0	D	80.00	0.00	-1021235.00	\N	\N	\N	SL000118	118486586	\N	f	t	Bill Payment for Purchase SALES SL000118	Admin	2021-08-28 21:26:49.914423-07	\N	\N	\N	Admin	2021-08-28 21:26:49.914423-07
630	100	4000001	2021-08-29	4	1	SALES	0	13100001	0	C	30.00	0.00	-31056703.00	\N	\N	\N	SL000119	1000000		f	t	Sales for Chanachur	Admin	2021-08-28 21:27:57.333934-07	\N	\N	\N	Admin	2021-08-28 21:27:57.333934-07
631	100	4000001	2021-08-29	4	2	SALES	0	31000001	0	C	5.00	0.00	-1823078.00	\N	\N	\N	SL000119	1000000		f	t	Profit Posting for Invoice SL000119	Admin	2021-08-28 21:27:57.333934-07	\N	\N	\N	Admin	2021-08-28 21:27:57.333934-07
632	100	4000001	2021-08-29	4	3	SALES	1000000000004	14000001	0	D	35.00	0.00	-1021315.00	\N	\N	\N	SL000119	118486586	\N	f	t	Bill Payment for Purchase SALES SL000119	Admin	2021-08-28 21:27:57.333934-07	\N	\N	\N	Admin	2021-08-28 21:27:57.333934-07
633	100	4000001	2021-08-30	1	1	SALES_RETURN	0	13100001	14000001	D	6000.00	0.00	-31062703.00	\N	\N	\N	SL000114	118486586		f	t	Invoice Return for SL000114	Admin	2021-08-29 21:09:16.926698-07	\N	\N	\N	Admin	2021-08-29 21:09:16.926698-07
634	100	4000001	2021-08-30	1	2	SALES_RETURN	1000000000004	14000001	13100001	C	8000.00	0.00	-1021350.00	\N	\N	\N	SL000114	118486586		f	t	Invoice Return for SL000114	Admin	2021-08-29 21:09:16.926698-07	\N	\N	\N	Admin	2021-08-29 21:09:16.926698-07
635	100	4000001	2021-08-30	1	3	SALES_RETURN	0	31000001	13100001	D	2000.00	0.00	-1825078.00	\N	\N	\N	SL000114	118486586		f	t	Profit Reverse for Invoice SL000114	Admin	2021-08-29 21:09:16.926698-07	\N	\N	\N	Admin	2021-08-29 21:09:16.926698-07
636	100	4000001	2021-08-30	2	1	SALES	0	13100001	0	C	30.00	0.00	-31062673.00	\N	\N	\N	SL000120	1000000		f	t	Sales for fresh-oil	Admin	2021-08-29 21:11:00.052477-07	\N	\N	\N	Admin	2021-08-29 21:11:00.052477-07
637	100	4000001	2021-08-30	2	2	SALES	0	31000001	0	C	10.00	0.00	-1825068.00	\N	\N	\N	SL000120	1000000		f	t	Profit Posting for Invoice SL000120	Admin	2021-08-29 21:11:00.052477-07	\N	\N	\N	Admin	2021-08-29 21:11:00.052477-07
638	100	4000001	2021-08-30	2	3	SALES	1000000000012	14000001	0	D	40.00	0.00	-245732.00	\N	\N	\N	SL000120	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000120	Admin	2021-08-29 21:11:00.052477-07	\N	\N	\N	Admin	2021-08-29 21:11:00.052477-07
639	100	0	2021-08-30	3	1	STOCK	0	13100001	0	D	14.00	0.00	-31062687.00	\N	\N	\N	ST00000104	0009	Admin	f	t	Stock for Water	Admin	2021-08-29 21:54:56.009819-07	\N	\N	\N	Admin	2021-08-29 21:54:56.009819-07
640	100	0	2021-08-30	3	2	STOCK	1000000000019	24000001	13100000	C	14.00	0.00	2059894.00	\N	\N	\N	ST00000104	0009	\N	f	t	Purchase bill for ST00000104	Admin	2021-08-29 21:54:56.009819-07	\N	\N	\N	Admin	2021-08-29 21:54:56.009819-07
641	100	4000001	2021-08-30	4	1	SALES	0	13100001	0	C	6000.00	0.00	-31056687.00	\N	\N	\N	SL000121	1000000		f	t	Sales for Aci garden chair	Admin	2021-08-29 21:55:13.685888-07	\N	\N	\N	Admin	2021-08-29 21:55:13.685888-07
642	100	4000001	2021-08-30	4	2	SALES	0	31000001	0	C	2000.00	0.00	-1823068.00	\N	\N	\N	SL000121	1000000		f	t	Profit Posting for Invoice SL000121	Admin	2021-08-29 21:55:13.685888-07	\N	\N	\N	Admin	2021-08-29 21:55:13.685888-07
643	100	4000001	2021-08-30	4	3	SALES	1000000000001	14000001	0	D	8000.00	0.00	8181898.00	\N	\N	\N	SL000121	01749195756	\N	f	t	Bill Payment for Purchase SALES SL000121	Admin	2021-08-29 21:55:13.685888-07	\N	\N	\N	Admin	2021-08-29 21:55:13.685888-07
644	100	4000001	2021-08-30	5	1	SALES	0	13100001	0	C	60.00	0.00	-31056627.00	\N	\N	\N	SL000122	1000000		f	t	Sales for fresh-oil	Admin	2021-08-29 21:55:25.388035-07	\N	\N	\N	Admin	2021-08-29 21:55:25.388035-07
645	100	4000001	2021-08-30	5	2	SALES	0	31000001	0	C	20.00	0.00	-1823048.00	\N	\N	\N	SL000122	1000000		f	t	Profit Posting for Invoice SL000122	Admin	2021-08-29 21:55:25.388035-07	\N	\N	\N	Admin	2021-08-29 21:55:25.388035-07
646	100	4000001	2021-08-30	5	3	SALES	1000000000012	14000001	0	D	80.00	0.00	-245772.00	\N	\N	\N	SL000122	01673489595	\N	f	t	Bill Payment for Purchase SALES SL000122	Admin	2021-08-29 21:55:25.388035-07	\N	\N	\N	Admin	2021-08-29 21:55:25.388035-07
647	100	4000001	2021-08-30	6	1	SALES	0	13100001	0	C	30.00	0.00	-31056597.00	\N	\N	\N	SL000123	1000000		f	t	Sales for Chanachur	Admin	2021-08-29 22:20:53.771379-07	\N	\N	\N	Admin	2021-08-29 22:20:53.771379-07
648	100	4000001	2021-08-30	6	2	SALES	0	31000001	0	C	5.00	0.00	-1823043.00	\N	\N	\N	SL000123	1000000		f	t	Profit Posting for Invoice SL000123	Admin	2021-08-29 22:20:53.771379-07	\N	\N	\N	Admin	2021-08-29 22:20:53.771379-07
649	100	4000001	2021-08-30	6	3	SALES	1000000000004	14000001	0	D	35.00	0.00	-1013350.00	\N	\N	\N	SL000123	118486586	\N	f	t	Bill Payment for Purchase SALES SL000123	Admin	2021-08-29 22:20:53.771379-07	\N	\N	\N	Admin	2021-08-29 22:20:53.771379-07
\.


--
-- Data for Name: finance_transaction_ibr; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_transaction_ibr (transaction_id, org_branch_code, res_branch_code, transaction_date, org_batch_number, res_batch_number, org_gl_code, res_gl_code, tran_status, tran_amount, cancel_amount, transaction_narration, auth_by, auth_on, cancel_by, cancel_on, cancel_remarks, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: finance_transaction_master; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_transaction_master (id, branch_code, center_code, transaction_date, batch_number, tran_type, total_credit_amount, total_debit_amount, tran_source_table, tran_source_key, transaction_narration, system_posted_tran, auth_by, auth_on, cancel_by, cancel_on, cancel_remarks, app_user_id, app_data_time) FROM stdin;
1	100	0	2021-05-24	1	STOCK	45000.00	45000.00	STOCK	NA	Stock Posting	t	Admin	2021-05-24 04:57:07.34-07	\N	\N	\N	Admin	2021-05-24 04:57:07.34-07
2	100		2021-05-24	2	000008	11000.00	11000.00	SALES	NA	Sales Posting	t	Admin	2021-05-24 05:02:17.071-07	\N	\N	\N	Admin	2021-05-24 05:02:17.071-07
3	100	4000001	2021-05-24	3	000008	6000.00	6000.00	SALES	NA	Sales Posting	t	Admin	2021-05-24 05:06:34.953-07	\N	\N	\N	Admin	2021-05-24 05:06:34.953-07
4	100	4000001	2021-05-24	4	EMI_SETUP	600.00	600.00	EMI_SETUP	NA	EMI Setup For SL000002	t	Admin	2021-05-24 05:19:58.221-07	\N	\N	\N	Admin	2021-05-24 05:19:58.221-07
5	100	0	2021-05-24	5	CS	2000.00	2000.00	CASH	NA	Supplier Bill Payment	f	Admin	2021-05-24 05:27:47.302-07	\N	\N	\N	Admin	2021-05-24 05:27:47.302-07
6	100	0	2021-05-25	1	STOCK	5000.00	5000.00	STOCK	NA	Stock Posting	t	Admin	2021-05-25 04:10:56.788-07	\N	\N	\N	Admin	2021-05-25 04:10:56.788-07
7	100	0	2021-06-10	1	STOCK	28000.00	28000.00	STOCK	NA	Stock Posting	t	Admin	2021-06-10 02:41:57.786-07	\N	\N	\N	Admin	2021-06-10 02:41:57.786-07
8	100	4000001	2021-06-10	2	000008	8000.00	8000.00	SALES	NA	Sales Posting	t	Admin	2021-06-10 02:57:25.877-07	\N	\N	\N	Admin	2021-06-10 02:57:25.877-07
9	100	4000001	2021-06-10	3	EMI_SETUP	200.00	200.00	EMI_SETUP	NA	EMI Setup For SL000003	t	Admin	2021-06-10 02:58:01.364-07	\N	\N	\N	Admin	2021-06-10 02:58:01.364-07
10	100	0	2021-06-11	1	STOCK	18000.00	18000.00	STOCK	NA	Stock Posting	t	Admin	2021-06-11 04:34:15.494387-07	\N	\N	\N	Admin	2021-06-11 04:34:15.494387-07
11	100	4000001	2021-06-11	2	000008	20000.00	20000.00	SALES	NA	Sales Posting	t	Admin	2021-06-11 05:14:56.065098-07	\N	\N	\N	Admin	2021-06-11 05:14:56.065098-07
12	100	0	2021-06-26	1	STOCK	18044.00	18044.00	STOCK	NA	Stock Posting	t	Admin	2021-06-26 02:35:48.501078-07	\N	\N	\N	Admin	2021-06-26 02:35:48.501078-07
13	100	4000001	2021-06-26	2	000008	20200.00	20200.00	SALES	NA	Sales Posting	t	Admin	2021-06-26 03:19:26.047432-07	\N	\N	\N	Admin	2021-06-26 03:19:26.047432-07
14	100	0	2021-06-26	3	STOCK	450.00	450.00	STOCK	NA	Stock Posting	t	Admin	2021-06-26 03:21:45.612564-07	\N	\N	\N	Admin	2021-06-26 03:21:45.612564-07
15	100	4000001	2021-06-26	4	000008	60.00	60.00	SALES	NA	Sales Posting	t	Admin	2021-06-26 03:59:16.924945-07	\N	\N	\N	Admin	2021-06-26 03:59:16.924945-07
16	100	4000001	2021-07-06	1	000008	60.00	60.00	SALES	NA	Sales Posting	t	Admin	2021-07-06 09:16:02.485386-07	Admin	2021-07-06 09:16:58.120839-07	Cancel Invoice	Admin	2021-07-06 09:16:02.485386-07
17	100	4000001	2021-07-06	2	000008	30.00	30.00	SALES	NA	Sales Posting	t	Admin	2021-07-06 09:37:07.561065-07	\N	\N	\N	Admin	2021-07-06 09:37:07.561065-07
18	100	4000001	2021-07-06	3	000008	30.00	30.00	SALES	NA	Sales Posting	t	Admin	2021-07-06 09:39:42.466846-07	\N	\N	\N	Admin	2021-07-06 09:39:42.466846-07
19	100	4000001	2021-04-08	1	000008	30.00	30.00	SALES	NA	Sales Posting	t	Admin	2021-07-06 09:41:07.379616-07	\N	\N	\N	Admin	2021-07-06 09:41:07.379616-07
20	100	0	2021-07-06	4	STOCK	1100000.00	1100000.00	STOCK	NA	Stock Posting	t	Admin	2021-07-06 10:34:26.351995-07	\N	\N	\N	Admin	2021-07-06 10:34:26.351995-07
21	100	4000001	2021-07-06	5	000008	26000.00	26000.00	SALES	NA	Sales Posting	t	Admin	2021-07-06 10:41:27.548162-07	\N	\N	\N	Admin	2021-07-06 10:41:27.548162-07
22	100	0	2021-07-06	6	000008	16000.00	16000.00	SALES	NA	Sales Posting	t	Admin	2021-07-06 10:46:00.187395-07	\N	\N	\N	Admin	2021-07-06 10:46:00.187395-07
24	100	4000001	2021-07-07	1	000008	15000.00	15000.00	SALES	NA	Sales Posting	t	Admin	2021-07-07 09:44:44.5976-07	\N	\N	\N	Admin	2021-07-07 09:44:44.5976-07
38	100	0	2021-07-11	14	STOCK	660.00	660.00	STOCK	NA	Stock Posting	t	Admin	2021-07-11 02:15:12.345668-07	\N	\N	\N	Admin	2021-07-11 02:15:12.345668-07
25	100	0	2021-07-11	1	STOCK	50000.00	50000.00	STOCK	NA	Stock Posting	t	Admin	2021-07-10 21:46:16.730956-07	Admin	2021-07-10 21:57:57.050611-07	Cancel Stock	Admin	2021-07-10 21:46:16.730956-07
39	100	0	2021-07-12	1	STOCK	25.00	25.00	STOCK	NA	Stock Posting	t	Admin	2021-07-12 02:20:03.387766-07	\N	\N	\N	Admin	2021-07-12 02:20:03.387766-07
29	100	0	2021-07-11	5	STOCK	140.00	140.00	STOCK	NA	Stock Posting	t	Admin	2021-07-10 21:57:37.368752-07	Admin	2021-07-10 21:58:14.078475-07	Cancel Stock	Admin	2021-07-10 21:57:37.368752-07
40	100	4000001	2021-08-13	1	000008	6000.00	6000.00	SALES	NA	Sales Posting	t	Admin	2021-08-13 02:20:25.470538-07	\N	\N	\N	Admin	2021-08-13 02:20:25.470538-07
28	100	0	2021-07-11	4	STOCK	140.00	140.00	STOCK	NA	Stock Posting	t	Admin	2021-07-10 21:55:13.89085-07	Admin	2021-07-10 21:58:19.26562-07	Cancel Stock	Admin	2021-07-10 21:55:13.89085-07
41	100	0	2021-08-13	2	STOCK	3000.00	3000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-13 02:26:38.611974-07	\N	\N	\N	Admin	2021-08-13 02:26:38.611974-07
27	100	0	2021-07-11	3	STOCK	140.00	140.00	STOCK	NA	Stock Posting	t	Admin	2021-07-10 21:52:33.597628-07	Admin	2021-07-10 21:58:53.660485-07	Cancel Stock	Admin	2021-07-10 21:52:33.597628-07
42	100	4000001	2021-08-13	3	000008	70.00	70.00	SALES	NA	Sales Posting	t	Admin	2021-08-13 02:27:52.432185-07	\N	\N	\N	Admin	2021-08-13 02:27:52.432185-07
26	100	0	2021-07-11	2	STOCK	50000.00	50000.00	STOCK	NA	Stock Posting	t	Admin	2021-07-10 21:47:40.353686-07	Admin	2021-07-10 21:58:58.021703-07	Cancel Stock	Admin	2021-07-10 21:47:40.353686-07
30	100	0	2021-07-11	6	STOCK	140.00	140.00	STOCK	NA	Stock Posting	t	Admin	2021-07-10 22:06:52.536575-07	\N	\N	\N	Admin	2021-07-10 22:06:52.536575-07
43	100	0	2021-08-13	4	STOCK	2500.00	2500.00	STOCK	NA	Stock Posting	t	Admin	2021-08-13 02:32:16.620175-07	\N	\N	\N	Admin	2021-08-13 02:32:16.620175-07
33	100	0	2021-07-11	9	STOCK	50000.00	50000.00	STOCK	NA	Stock Posting	t	Admin	2021-07-10 22:12:08.309015-07	Admin	2021-07-10 22:13:09.512158-07	Cancel Stock	Admin	2021-07-10 22:12:08.309015-07
44	100	4000001	2021-08-13	5	000008	30.00	30.00	SALES	NA	Sales Posting	t	Admin	2021-08-13 02:38:20.431668-07	\N	\N	\N	Admin	2021-08-13 02:38:20.431668-07
32	100	0	2021-07-11	8	STOCK	50000.00	50000.00	STOCK	NA	Stock Posting	t	Admin	2021-07-10 22:10:22.482197-07	Admin	2021-07-10 22:13:15.390927-07	Cancel Stock	Admin	2021-07-10 22:10:22.482197-07
45	100	4000001	2021-08-13	6	000008	30.00	30.00	SALES	NA	Sales Posting	t	Admin	2021-08-13 02:44:53.333008-07	\N	\N	\N	Admin	2021-08-13 02:44:53.333008-07
31	100	0	2021-07-11	7	STOCK	140.00	140.00	STOCK	NA	Stock Posting	t	Admin	2021-07-10 22:08:55.582213-07	Admin	2021-07-10 22:13:25.195043-07	Cancel Stock	Admin	2021-07-10 22:08:55.582213-07
34	100	0	2021-07-11	10	STOCK	180000.00	180000.00	STOCK	NA	Stock Posting	t	Admin	2021-07-10 22:15:50.130016-07	\N	\N	\N	Admin	2021-07-10 22:15:50.130016-07
35	100	0	2021-07-11	11	STOCK	216000.00	216000.00	STOCK	NA	Stock Posting	t	Admin	2021-07-10 22:17:42.70664-07	\N	\N	\N	Admin	2021-07-10 22:17:42.70664-07
36	100	0	2021-07-11	12	STOCK	360000.00	360000.00	STOCK	NA	Stock Posting	t	Admin	2021-07-11 00:39:22.285268-07	\N	\N	\N	Admin	2021-07-11 00:39:22.285268-07
37	100	0	2021-07-11	13	STOCK	375.00	375.00	STOCK	NA	Stock Posting	t	Admin	2021-07-11 02:13:45.377568-07	\N	\N	\N	Admin	2021-07-11 02:13:45.377568-07
46	100	0	2021-08-13	7	STOCK	1400.00	1400.00	STOCK	NA	Stock Posting	t	Admin	2021-08-13 02:49:13.860985-07	\N	\N	\N	Admin	2021-08-13 02:49:13.860985-07
49	100	4000001	2021-08-13	10	000008	16000.00	16000.00	SALES	NA	Sales Posting	t	Admin	2021-08-13 06:24:03.82957-07	\N	\N	\N	Admin	2021-08-13 06:24:03.82957-07
50	100	4000001	2021-08-13	11	000008	20000.00	20000.00	SALES	NA	Sales Posting	t	Admin	2021-08-13 06:36:40.459588-07	\N	\N	\N	Admin	2021-08-13 06:36:40.459588-07
52	100	0	2021-08-14	1	STOCK	900000.00	900000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-13 22:28:58.693241-07	\N	\N	\N	Admin	2021-08-13 22:28:58.693241-07
54	100	0	2021-08-14	3	STOCK	3400000.00	3400000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-13 22:37:35.331351-07	\N	\N	\N	Admin	2021-08-13 22:37:35.331351-07
55	100	0	2021-08-14	4	STOCK	2500000.00	2500000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-13 22:38:23.847779-07	\N	\N	\N	Admin	2021-08-13 22:38:23.847779-07
56	100	0	2021-08-14	5	STOCK	3000000.00	3000000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-14 00:09:24.284671-07	\N	\N	\N	Admin	2021-08-14 00:09:24.284671-07
57	100	4000001	2021-08-14	6	000008	80000.00	80000.00	SALES	NA	Sales Posting	t	Admin	2021-08-14 00:10:35.978732-07	\N	\N	\N	Admin	2021-08-14 00:10:35.978732-07
58	100	0	2021-08-14	7	STOCK	6000000.00	6000000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-14 00:12:01.103774-07	\N	\N	\N	Admin	2021-08-14 00:12:01.103774-07
59	100	4000001	2021-08-14	8	000008	40000.00	40000.00	SALES	NA	Sales Posting	t	Admin	2021-08-14 00:13:18.338246-07	\N	\N	\N	Admin	2021-08-14 00:13:18.338246-07
53	100	4000001	2021-08-14	2	000008	20000.00	20000.00	SALES	NA	Sales Posting	t	Admin	2021-08-13 22:35:18.922602-07	Admin	2021-08-26 02:48:58.71438-07	Cancel Invoice	Admin	2021-08-13 22:35:18.922602-07
60	100	0	2021-08-14	9	STOCK	1400.00	1400.00	STOCK	NA	Stock Posting	t	Admin	2021-08-14 00:16:57.03692-07	\N	\N	\N	Admin	2021-08-14 00:16:57.03692-07
61	100	4000001	2021-08-14	10	000008	66.00	66.00	SALES	NA	Sales Posting	t	Admin	2021-08-14 00:18:43.066331-07	\N	\N	\N	Admin	2021-08-14 00:18:43.066331-07
62	100	0	2021-08-14	11	STOCK	3000.00	3000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-14 00:21:09.04099-07	\N	\N	\N	Admin	2021-08-14 00:21:09.04099-07
63	100	0	2021-08-14	12	STOCK	12000.00	12000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-14 00:21:37.199565-07	\N	\N	\N	Admin	2021-08-14 00:21:37.199565-07
64	100	4000001	2021-08-14	13	000008	175.00	175.00	SALES	NA	Sales Posting	t	Admin	2021-08-14 00:23:37.408224-07	\N	\N	\N	Admin	2021-08-14 00:23:37.408224-07
65	100	4000001	2021-08-14	14	000008	60000.00	60000.00	SALES	NA	Sales Posting	t	Admin	2021-08-14 02:39:26.497909-07	\N	\N	\N	Admin	2021-08-14 02:39:26.497909-07
66	100	0	2021-08-14	15	STOCK	1500000.00	1500000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-14 05:46:47.944294-07	\N	\N	\N	Admin	2021-08-14 05:46:47.944294-07
67	100	4000001	2021-08-14	16	000008	6000.00	6000.00	SALES	NA	Sales Posting	t	Admin	2021-08-14 05:49:22.385101-07	\N	\N	\N	Admin	2021-08-14 05:49:22.385101-07
68	100	4000001	2021-08-15	1	000008	18000.00	18000.00	SALES	NA	Sales Posting	t	Admin	2021-08-15 04:48:17.857205-07	\N	\N	\N	Admin	2021-08-15 04:48:17.857205-07
69	100	4000001	2021-08-15	2	000008	30.00	30.00	SALES	NA	Sales Posting	t	Admin	2021-08-15 05:04:04.624779-07	\N	\N	\N	Admin	2021-08-15 05:04:04.624779-07
70	100	4000001	2021-08-15	3	000008	8000.00	8000.00	SALES	NA	Sales Posting	t	Admin	2021-08-15 05:09:52.424823-07	\N	\N	\N	Admin	2021-08-15 05:09:52.424823-07
71	100	4000001	2021-08-15	4	000008	20000.00	20000.00	SALES	NA	Sales Posting	t	Admin	2021-08-15 05:24:46.914411-07	\N	\N	\N	Admin	2021-08-15 05:24:46.914411-07
72	100	0	2021-08-16	1	STOCK	250.00	250.00	STOCK	NA	Stock Posting	t	Admin	2021-08-15 23:18:18.234314-07	\N	\N	\N	Admin	2021-08-15 23:18:18.234314-07
74	100	4000001	2021-08-16	3	000008	22.00	22.00	SALES	NA	Sales Posting	t	Admin	2021-08-15 23:20:11.661503-07	\N	\N	\N	Admin	2021-08-15 23:20:11.661503-07
75	100	4000001	2021-08-16	4	000008	40000.00	40000.00	SALES	NA	Sales Posting	t	Admin	2021-08-15 23:20:39.456595-07	\N	\N	\N	Admin	2021-08-15 23:20:39.456595-07
76	100	4000001	2021-08-17	1	000008	6000.00	6000.00	SALES	NA	Sales Posting	t	Admin	2021-08-17 02:45:24.655131-07	\N	\N	\N	Admin	2021-08-17 02:45:24.655131-07
77	100	4000001	2021-08-19	1	000008	600000.00	600000.00	SALES	NA	Sales Posting	t	Admin	2021-08-18 21:55:14.684309-07	\N	\N	\N	Admin	2021-08-18 21:55:14.684309-07
78	100	4000001	2021-08-19	2	000008	30000.00	30000.00	SALES	NA	Sales Posting	t	Admin	2021-08-18 21:58:29.506147-07	\N	\N	\N	Admin	2021-08-18 21:58:29.506147-07
79	100	4000001	2021-08-19	3	000008	30000.00	30000.00	SALES	NA	Sales Posting	t	Admin	2021-08-18 21:59:58.169774-07	\N	\N	\N	Admin	2021-08-18 21:59:58.169774-07
80	100	4000001	2021-08-19	4	000008	42000.00	42000.00	SALES	NA	Sales Posting	t	Admin	2021-08-18 22:03:22.949299-07	\N	\N	\N	Admin	2021-08-18 22:03:22.949299-07
81	100	4000001	2021-08-19	5	000008	18000.00	18000.00	SALES	NA	Sales Posting	t	Admin	2021-08-18 22:04:44.110096-07	\N	\N	\N	Admin	2021-08-18 22:04:44.110096-07
82	100	4000001	2021-08-19	6	000008	30000.00	30000.00	SALES	NA	Sales Posting	t	Admin	2021-08-18 22:06:40.751041-07	\N	\N	\N	Admin	2021-08-18 22:06:40.751041-07
83	100	4000001	2021-08-19	7	000008	30000.00	30000.00	SALES	NA	Sales Posting	t	Admin	2021-08-18 22:06:52.941934-07	\N	\N	\N	Admin	2021-08-18 22:06:52.941934-07
84	100	4000001	2021-08-19	8	000008	30000.00	30000.00	SALES	NA	Sales Posting	t	Admin	2021-08-18 22:08:47.259341-07	\N	\N	\N	Admin	2021-08-18 22:08:47.259341-07
85	100	4000001	2021-08-19	9	000008	36000.00	36000.00	SALES	NA	Sales Posting	t	Admin	2021-08-18 22:14:20.374808-07	\N	\N	\N	Admin	2021-08-18 22:14:20.374808-07
86	100	4000001	2021-08-20	1	000008	8000.00	8000.00	SALES	NA	Sales Posting	t	Admin	2021-08-20 05:02:13.518409-07	\N	\N	\N	Admin	2021-08-20 05:02:13.518409-07
87	100	4000001	2021-08-20	2	000008	6000.00	6000.00	SALES	NA	Sales Posting	t	Admin	2021-08-20 05:10:13.65358-07	\N	\N	\N	Admin	2021-08-20 05:10:13.65358-07
88	100	4000001	2021-08-20	3	000008	60000.00	60000.00	SALES	NA	Sales Posting	t	Admin	2021-08-20 05:14:44.627518-07	\N	\N	\N	Admin	2021-08-20 05:14:44.627518-07
89	100	4000001	2021-08-20	4	000008	16000.00	16000.00	SALES	NA	Sales Posting	t	Admin	2021-08-20 05:16:12.879549-07	\N	\N	\N	Admin	2021-08-20 05:16:12.879549-07
48	100	0	2021-08-13	9	STOCK_RETURN	1400.00	1400.00	STOCK_RETURN	NA	Return All Product of ST00000076	t	Admin	2021-08-13 03:33:42.258841-07	Admin	2021-08-21 00:14:08.287827-07	Cancel by Admin	Admin	2021-08-13 03:33:42.258841-07
90	100	0	2021-08-21	1	STOCK	2500.00	2500.00	STOCK	NA	Stock Posting	t	Admin	2021-08-21 00:16:20.051197-07	\N	\N	\N	Admin	2021-08-21 00:16:20.051197-07
91	100	0	2021-08-16	5	STOCK	140.00	140.00	STOCK	NA	Stock Posting	t	Admin	2021-08-21 00:16:31.853937-07	\N	\N	\N	Admin	2021-08-21 00:16:31.853937-07
108	100	4000001	2021-08-22	16	000008	80000.00	80000.00	SALES	NA	Sales Posting	t	Admin	2021-08-21 23:38:17.569211-07	\N	\N	\N	Admin	2021-08-21 23:38:17.569211-07
73	100	0	2021-08-16	2	STOCK_RETURN	30.00	30.00	STOCK_RETURN	NA		t	Admin	2021-08-15 23:19:34.850989-07	Admin	2021-08-21 00:17:57.605956-07	Cancel by Admin	Admin	2021-08-15 23:19:34.850989-07
92	100	4000001	2021-08-21	2	000008	80300.00	80300.00	SALES	NA	Sales Posting	t	Admin	2021-08-21 00:24:30.615783-07	\N	\N	\N	Admin	2021-08-21 00:24:30.615783-07
93	100	0	2021-08-22	1	STOCK	200000.00	200000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-21 21:46:24.442204-07	\N	\N	\N	Admin	2021-08-21 21:46:24.442204-07
94	100	0	2021-08-22	2	STOCK_RETURN	20000.00	20000.00	STOCK_RETURN	NA	damage	t	Admin	2021-08-21 21:48:00.81122-07	\N	\N	\N	Admin	2021-08-21 21:48:00.81122-07
95	100	0	2021-08-22	3	STOCK_RETURN	14.00	14.00	STOCK_RETURN	NA		t	Admin	2021-08-21 21:55:28.649768-07	\N	\N	\N	Admin	2021-08-21 21:55:28.649768-07
98	100	4000001	2021-08-22	6	SALES_RETURN	30000.00	30000.00	SALES_RETURN	NA	damage	t	Admin	2021-08-21 22:28:40.236259-07	Admin	2021-08-21 23:18:23.300019-07	Cancel by Admin	Admin	2021-08-21 22:28:40.236259-07
101	100	4000001	2021-08-22	9	SALES_RETURN	40000.00	40000.00	SALES_RETURN	NA		t	Admin	2021-08-21 22:40:31.143435-07	Admin	2021-08-21 23:19:01.181878-07	Cancel by Admin	Admin	2021-08-21 22:40:31.143435-07
96	100	4000001	2021-08-22	4	000008	6000.00	6000.00	SALES	NA	Sales Posting	t	Admin	2021-08-21 21:57:43.07523-07	Admin	2021-08-21 22:01:22.880259-07	Cancel Invoice	Admin	2021-08-21 21:57:43.07523-07
97	100	4000001	2021-08-22	5	000008	390000.00	390000.00	SALES	NA	Sales Posting	t	Admin	2021-08-21 22:27:25.519366-07	\N	\N	\N	Admin	2021-08-21 22:27:25.519366-07
100	100	4000001	2021-08-22	8	000008	400000.00	400000.00	SALES	NA	Sales Posting	t	Admin	2021-08-21 22:38:51.504223-07	\N	\N	\N	Admin	2021-08-21 22:38:51.504223-07
102	100	4000001	2021-08-22	10	SALES_RETURN	800000.00	800000.00	SALES_RETURN	NA		t	Admin	2021-08-21 22:41:56.301403-07	\N	\N	\N	Admin	2021-08-21 22:41:56.301403-07
103	100	4000001	2021-08-22	11	SALES_RETURN	560000.00	560000.00	SALES_RETURN	NA		t	Admin	2021-08-21 22:42:20.054023-07	\N	\N	\N	Admin	2021-08-21 22:42:20.054023-07
104	100	4000001	2021-08-22	12	SALES_RETURN	4000000.00	4000000.00	SALES_RETURN	NA		t	Admin	2021-08-21 22:42:43.817981-07	\N	\N	\N	Admin	2021-08-21 22:42:43.817981-07
105	100	4000001	2021-08-22	13	SALES_RETURN	4000000.00	4000000.00	SALES_RETURN	NA		t	Admin	2021-08-21 22:43:13.184432-07	\N	\N	\N	Admin	2021-08-21 22:43:13.184432-07
106	100	4000001	2021-08-22	14	000008	350.00	350.00	SALES	NA	Sales Posting	t	Admin	2021-08-21 23:21:46.113107-07	\N	\N	\N	Admin	2021-08-21 23:21:46.113107-07
107	100	4000001	2021-08-22	15	000008	300.00	300.00	SALES	NA	Sales Posting	t	Admin	2021-08-21 23:24:51.105337-07	\N	\N	\N	Admin	2021-08-21 23:24:51.105337-07
99	100	4000001	2021-08-22	7	SALES_RETURN	390000.00	390000.00	SALES_RETURN	NA		t	Admin	2021-08-21 22:35:08.223662-07	Admin	2021-08-21 23:18:35.830329-07	Cancel by Admin	Admin	2021-08-21 22:35:08.223662-07
109	100	0	2021-08-22	17	STOCK	15000.00	15000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-21 23:55:21.469096-07	\N	\N	\N	Admin	2021-08-21 23:55:21.469096-07
110	100	4000001	2021-08-22	18	000008	350.00	350.00	SALES	NA	Sales Posting	t	Admin	2021-08-21 23:58:17.683021-07	\N	\N	\N	Admin	2021-08-21 23:58:17.683021-07
23	100	0	2021-07-06	7	000008	15500.00	15500.00	SALES	NA	Sales Posting	t	Admin	2021-07-06 10:46:36.133426-07	Admin	2021-08-21 23:27:45.173403-07	Cancel Invoice	Admin	2021-07-06 10:46:36.133426-07
111	100	0	2021-08-22	19	STOCK	1400.00	1400.00	STOCK	NA	Stock Posting	t	Admin	2021-08-22 00:02:21.47914-07	\N	\N	\N	Admin	2021-08-22 00:02:21.47914-07
112	100	4000001	2021-08-22	20	000008	22.00	22.00	SALES	NA	Sales Posting	t	Admin	2021-08-22 00:03:37.791372-07	\N	\N	\N	Admin	2021-08-22 00:03:37.791372-07
113	100	0	2021-08-22	21	STOCK	1800000.00	1800000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-22 00:05:11.855227-07	\N	\N	\N	Admin	2021-08-22 00:05:11.855227-07
114	100	4000001	2021-08-22	22	000008	20000.00	20000.00	SALES	NA	Sales Posting	t	Admin	2021-08-22 00:06:11.713135-07	\N	\N	\N	Admin	2021-08-22 00:06:11.713135-07
115	100	4000001	2021-08-22	23	000008	100000.00	100000.00	SALES	NA	Sales Posting	t	Admin	2021-08-22 00:07:10.103548-07	\N	\N	\N	Admin	2021-08-22 00:07:10.103548-07
116	100	0	2021-08-22	24	STOCK	2000000.00	2000000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-22 00:07:53.464737-07	\N	\N	\N	Admin	2021-08-22 00:07:53.464737-07
117	100	4000001	2021-08-22	25	000008	30000.00	30000.00	SALES	NA	Sales Posting	t	Admin	2021-08-22 00:08:50.163917-07	\N	\N	\N	Admin	2021-08-22 00:08:50.163917-07
118	100	0	2021-08-22	26	STOCK	2500.00	2500.00	STOCK	NA	Stock Posting	t	Admin	2021-08-22 00:10:32.505824-07	\N	\N	\N	Admin	2021-08-22 00:10:32.505824-07
119	100	4000001	2021-08-22	27	000008	30.00	30.00	SALES	NA	Sales Posting	t	Admin	2021-08-22 00:11:34.562894-07	\N	\N	\N	Admin	2021-08-22 00:11:34.562894-07
120	100	4000001	2021-08-22	28	SALES_RETURN	150.00	150.00	SALES_RETURN	NA		t	Admin	2021-08-22 02:14:08.974912-07	\N	\N	\N	Admin	2021-08-22 02:14:08.974912-07
121	100	0	2021-08-22	29	STOCK	3000.00	3000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-22 02:16:33.253703-07	\N	\N	\N	Admin	2021-08-22 02:16:33.253703-07
122	100	4000001	2021-08-22	30	000008	350.00	350.00	SALES	NA	Sales Posting	t	Admin	2021-08-22 02:18:41.819681-07	\N	\N	\N	Admin	2021-08-22 02:18:41.819681-07
123	100	4000001	2021-08-22	31	SALES_RETURN	175.00	175.00	SALES_RETURN	NA		t	Admin	2021-08-22 02:19:53.397894-07	\N	\N	\N	Admin	2021-08-22 02:19:53.397894-07
124	100	0	2021-08-22	32	STOCK	600000.00	600000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-22 02:44:14.408237-07	\N	\N	\N	Admin	2021-08-22 02:44:14.408237-07
125	100	0	2019-08-23	1	STOCK_RETURN	6000.00	6000.00	STOCK_RETURN	NA		t	Admin	2021-08-22 21:22:07.924441-07	\N	\N	\N	Admin	2021-08-22 21:22:07.924441-07
126	100	4000001	2021-08-23	1	000008	30.00	30.00	SALES	NA	Sales Posting	t	Admin	2021-08-22 21:24:49.469901-07	\N	\N	\N	Admin	2021-08-22 21:24:49.469901-07
127	100	4000001	2021-08-23	2	000008	30.00	30.00	SALES	NA	Sales Posting	t	Admin	2021-08-22 21:32:48.238086-07	\N	\N	\N	Admin	2021-08-22 21:32:48.238086-07
128	100	4000001	2021-08-23	3	000008	6000.00	6000.00	SALES	NA	Sales Posting	t	Admin	2021-08-22 22:42:01.534673-07	\N	\N	\N	Admin	2021-08-22 22:42:01.534673-07
129	100	0	2021-08-23	4	STOCK	8000000.00	8000000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-22 22:49:49.6501-07	\N	\N	\N	Admin	2021-08-22 22:49:49.6501-07
47	100	4000001	2021-08-13	8	000008	30.00	30.00	SALES	NA	Sales Posting	t	Admin	2021-08-13 02:51:50.699446-07	Admin	2021-08-22 22:51:38.097053-07	Cancel Invoice	Admin	2021-08-13 02:51:50.699446-07
130	100	4000001	2021-08-23	5	000008	75000.00	75000.00	SALES	NA	Sales Posting	t	Admin	2021-08-22 22:52:20.221662-07	\N	\N	\N	Admin	2021-08-22 22:52:20.221662-07
131	100	0	2021-08-23	6	STOCK	6000.00	6000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-23 02:55:40.57085-07	\N	\N	\N	Admin	2021-08-23 02:55:40.57085-07
132	100	4000001	2021-08-23	7	000008	160.00	160.00	SALES	NA	Sales Posting	t	Admin	2021-08-23 02:59:52.572537-07	\N	\N	\N	Admin	2021-08-23 02:59:52.572537-07
133	100	4000001	2021-08-23	8	000008	120.00	120.00	SALES	NA	Sales Posting	t	Admin	2021-08-23 03:04:48.274191-07	\N	\N	\N	Admin	2021-08-23 03:04:48.274191-07
134	100	4000001	2021-08-26	1	000008	240000.00	240000.00	SALES	NA	Sales Posting	t	Admin	2021-08-25 21:59:14.769023-07	\N	\N	\N	Admin	2021-08-25 21:59:14.769023-07
135	100	4000001	2021-08-26	2	000008	120000.00	120000.00	SALES	NA	Sales Posting	t	Admin	2021-08-25 21:59:30.661836-07	\N	\N	\N	Admin	2021-08-25 21:59:30.661836-07
136	100	4000001	2021-08-26	3	000008	42000.00	42000.00	SALES	NA	Sales Posting	t	Admin	2021-08-25 22:06:59.996485-07	\N	\N	\N	Admin	2021-08-25 22:06:59.996485-07
137	100	4000001	2021-08-26	4	000008	520.00	520.00	SALES	NA	Sales Posting	t	Admin	2021-08-25 22:16:58.719488-07	\N	\N	\N	Admin	2021-08-25 22:16:58.719488-07
138	100	4000001	2021-08-26	5	000008	220000.00	220000.00	SALES	NA	Sales Posting	t	Admin	2021-08-25 22:21:21.729147-07	\N	\N	\N	Admin	2021-08-25 22:21:21.729147-07
139	100	4000001	2021-08-26	6	000008	90.00	90.00	SALES	NA	Sales Posting	t	Admin	2021-08-25 22:28:08.27502-07	\N	\N	\N	Admin	2021-08-25 22:28:08.27502-07
140	100	4000001	2021-08-26	7	000008	198.00	198.00	SALES	NA	Sales Posting	t	Admin	2021-08-25 22:45:36.794057-07	\N	\N	\N	Admin	2021-08-25 22:45:36.794057-07
141	100	4000001	2021-08-26	8	000008	88.00	88.00	SALES	NA	Sales Posting	t	Admin	2021-08-25 22:54:10.842757-07	\N	\N	\N	Admin	2021-08-25 22:54:10.842757-07
142	100	4000001	2021-08-26	9	000008	120000.00	120000.00	SALES	NA	Sales Posting	t	Admin	2021-08-25 23:07:24.938994-07	\N	\N	\N	Admin	2021-08-25 23:07:24.938994-07
143	100	0	2021-08-26	10	STOCK	74.00	74.00	STOCK	NA	Stock Posting	t	Admin	2021-08-26 02:03:50.979567-07	\N	\N	\N	Admin	2021-08-26 02:03:50.979567-07
144	100	0	2021-08-26	11	STOCK	18000.00	18000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-26 02:04:33.817964-07	\N	\N	\N	Admin	2021-08-26 02:04:33.817964-07
145	100	0	2021-08-26	12	STOCK_RETURN	18000.00	18000.00	STOCK_RETURN	NA	Return All Product of ST00000102	t	Admin	2021-08-26 02:05:00.370845-07	\N	\N	\N	Admin	2021-08-26 02:05:00.370845-07
146	100	0	2021-08-26	13	STOCK_RETURN	20.00	20.00	STOCK_RETURN	NA		t	Admin	2021-08-26 02:05:58.558513-07	\N	\N	\N	Admin	2021-08-26 02:05:58.558513-07
147	100	0	2021-08-26	14	STOCK	50000.00	50000.00	STOCK	NA	Stock Posting	t	Admin	2021-08-26 02:06:36.589337-07	\N	\N	\N	Admin	2021-08-26 02:06:36.589337-07
148	100	0	2021-08-26	15	STOCK_RETURN	4000.00	4000.00	STOCK_RETURN	NA		t	Admin	2021-08-26 02:07:39.177333-07	\N	\N	\N	Admin	2021-08-26 02:07:39.177333-07
149	100	4000001	2021-08-26	16	000008	32000.00	32000.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 02:13:47.021473-07	\N	\N	\N	Admin	2021-08-26 02:13:47.021473-07
150	100	4000001	2021-08-26	17	000008	60.00	60.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 02:14:29.946524-07	\N	\N	\N	Admin	2021-08-26 02:14:29.946524-07
167	100	4000001	2021-08-27	6	SALES_RETURN	24000.00	24000.00	SALES_RETURN	NA		t	Admin	2021-08-26 22:16:19.539169-07	\N	\N	\N	Admin	2021-08-26 22:16:19.539169-07
168	100	4000001	2021-08-27	7	SALES_RETURN	12000.00	12000.00	SALES_RETURN	NA		t	Admin	2021-08-26 22:22:25.407246-07	\N	\N	\N	Admin	2021-08-26 22:22:25.407246-07
151	100	4000001	2021-08-26	18	000008	200.00	200.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 02:15:36.888639-07	Admin	2021-08-26 02:17:17.936838-07	Cancel Invoice	Admin	2021-08-26 02:15:36.888639-07
152	100	4000001	2021-08-26	19	000008	250000.00	250000.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 02:17:49.467669-07	\N	\N	\N	Admin	2021-08-26 02:17:49.467669-07
153	100	4000001	2021-08-26	20	SALES_RETURN	50000.00	50000.00	SALES_RETURN	NA		t	Admin	2021-08-26 02:20:35.132521-07	\N	\N	\N	Admin	2021-08-26 02:20:35.132521-07
154	100	4000001	2021-08-26	21	000008	120.00	120.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 02:30:37.467411-07	\N	\N	\N	Admin	2021-08-26 02:30:37.467411-07
155	100	4000001	2021-08-26	22	000008	80.00	80.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 02:30:55.254461-07	\N	\N	\N	Admin	2021-08-26 02:30:55.254461-07
156	100	4000001	2021-08-26	23	000008	8000.00	8000.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 02:35:49.19233-07	\N	\N	\N	Admin	2021-08-26 02:35:49.19233-07
157	100	4000001	2021-08-26	24	000008	8000.00	8000.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 02:37:23.575036-07	\N	\N	\N	Admin	2021-08-26 02:37:23.575036-07
51	100	4000001	2021-08-13	12	000008	22.00	22.00	SALES	NA	Sales Posting	t	Admin	2021-08-13 06:42:19.525401-07	Admin	2021-08-26 02:43:31.66086-07	Cancel Invoice	Admin	2021-08-13 06:42:19.525401-07
158	100	4000001	2021-08-26	25	000008	12000.00	12000.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 02:47:03.040036-07	\N	\N	\N	Admin	2021-08-26 02:47:03.040036-07
159	100	4000001	2021-08-26	26	000008	25000.00	25000.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 02:50:14.339851-07	\N	\N	\N	Admin	2021-08-26 02:50:14.339851-07
160	100	4000001	2021-08-26	27	000008	60.00	60.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 02:52:43.702033-07	\N	\N	\N	Admin	2021-08-26 02:52:43.702033-07
161	100	4000001	2021-08-26	28	000008	40.00	40.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 03:46:38.720135-07	\N	\N	\N	Admin	2021-08-26 03:46:38.720135-07
162	100	4000001	2021-08-27	1	000008	250000.00	250000.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 22:04:48.501549-07	\N	\N	\N	Admin	2021-08-26 22:04:48.501549-07
163	100	4000001	2021-08-27	2	SALES_RETURN	100000.00	100000.00	SALES_RETURN	NA		t	Admin	2021-08-26 22:05:29.487922-07	\N	\N	\N	Admin	2021-08-26 22:05:29.487922-07
164	100	4000001	2021-08-27	3	SALES_RETURN	175000.00	175000.00	SALES_RETURN	NA		t	Admin	2021-08-26 22:06:18.875369-07	\N	\N	\N	Admin	2021-08-26 22:06:18.875369-07
165	100	4000001	2021-08-27	4	SALES_RETURN	75000.00	75000.00	SALES_RETURN	NA		t	Admin	2021-08-26 22:06:43.956335-07	\N	\N	\N	Admin	2021-08-26 22:06:43.956335-07
166	100	4000001	2021-08-27	5	000008	60000.00	60000.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 22:15:21.270818-07	\N	\N	\N	Admin	2021-08-26 22:15:21.270818-07
169	100	4000001	2021-08-27	8	SALES_RETURN	18000.00	18000.00	SALES_RETURN	NA		t	Admin	2021-08-26 22:27:01.905277-07	\N	\N	\N	Admin	2021-08-26 22:27:01.905277-07
170	100	4000001	2021-08-27	9	000008	80000.00	80000.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 23:55:16.342569-07	\N	\N	\N	Admin	2021-08-26 23:55:16.342569-07
171	100	4000001	2021-08-27	10	000008	250000.00	250000.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 23:57:04.983697-07	\N	\N	\N	Admin	2021-08-26 23:57:04.983697-07
172	100	4000001	2021-08-27	11	SALES_RETURN	125000.00	125000.00	SALES_RETURN	NA		t	Admin	2021-08-26 23:57:24.933749-07	\N	\N	\N	Admin	2021-08-26 23:57:24.933749-07
173	100	4000001	2021-08-27	12	SALES_RETURN	300000.00	300000.00	SALES_RETURN	NA		t	Admin	2021-08-26 23:57:51.764222-07	\N	\N	\N	Admin	2021-08-26 23:57:51.764222-07
174	100	4000001	2021-08-27	13	000008	220.00	220.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 23:59:14.254652-07	\N	\N	\N	Admin	2021-08-26 23:59:14.254652-07
175	100	4000001	2021-08-27	14	000008	300.00	300.00	SALES	NA	Sales Posting	t	Admin	2021-08-26 23:59:50.663307-07	\N	\N	\N	Admin	2021-08-26 23:59:50.663307-07
176	100	4000001	2021-08-27	15	SALES_RETURN	120.00	120.00	SALES_RETURN	NA		t	Admin	2021-08-27 00:00:09.268928-07	\N	\N	\N	Admin	2021-08-27 00:00:09.268928-07
177	100	4000001	2021-08-27	16	SALES_RETURN	150.00	150.00	SALES_RETURN	NA		t	Admin	2021-08-27 02:08:59.674084-07	\N	\N	\N	Admin	2021-08-27 02:08:59.674084-07
178	100	4000001	2021-08-27	17	000008	100000.00	100000.00	SALES	NA	Sales Posting	t	Admin	2021-08-27 02:13:31.153193-07	\N	\N	\N	Admin	2021-08-27 02:13:31.153193-07
179	100	4000001	2021-08-27	18	SALES_RETURN	80000.00	80000.00	SALES_RETURN	NA		t	Admin	2021-08-27 02:14:46.494838-07	\N	\N	\N	Admin	2021-08-27 02:14:46.494838-07
180	100	4000001	2021-08-28	1	000008	6000.00	6000.00	SALES	NA	Sales Posting	t	Admin	2021-08-27 22:46:27.39735-07	\N	\N	\N	Admin	2021-08-27 22:46:27.39735-07
181	100	4000001	2021-08-28	2	000008	24000.00	24000.00	SALES	NA	Sales Posting	t	Admin	2021-08-27 22:53:15.910317-07	\N	\N	\N	Admin	2021-08-27 22:53:15.910317-07
182	100	4000001	2021-08-28	3	000008	18000.00	18000.00	SALES	NA	Sales Posting	t	Admin	2021-08-27 22:53:52.60427-07	\N	\N	\N	Admin	2021-08-27 22:53:52.60427-07
185	100	4000001	2021-08-28	4	SALES_RETURN	60000.00	60000.00	SALES_RETURN	NA		t	Admin	2021-08-28 00:25:44.380986-07	\N	\N	\N	Admin	2021-08-28 00:25:44.380986-07
186	100	4000001	2021-08-28	5	000008	120260.00	120260.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 00:23:19.161784-07	\N	\N	\N	Admin	2021-08-28 00:23:19.161784-07
187	100	4000001	2021-08-28	6	000008	32000.00	32000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 00:36:57.293422-07	\N	\N	\N	Admin	2021-08-28 00:36:57.293422-07
188	100	4000001	2021-08-28	7	000008	8200.00	8200.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 00:37:43.137545-07	\N	\N	\N	Admin	2021-08-28 00:37:43.137545-07
189	100	4000001	2021-08-28	8	000008	30000.00	30000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 00:38:29.009408-07	\N	\N	\N	Admin	2021-08-28 00:38:29.009408-07
190	100	4000001	2021-08-28	9	000008	12000.00	12000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 00:38:43.675954-07	\N	\N	\N	Admin	2021-08-28 00:38:43.675954-07
191	100	4000001	2021-08-28	10	SALES_RETURN	60000.00	60000.00	SALES_RETURN	NA		t	Admin	2021-08-28 00:39:02.697389-07	\N	\N	\N	Admin	2021-08-28 00:39:02.697389-07
192	100	4000001	2021-08-28	11	000008	20000.00	20000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 00:46:11.892077-07	\N	\N	\N	Admin	2021-08-28 00:46:11.892077-07
193	100	4000001	2021-08-28	12	SALES_RETURN	40.00	40.00	SALES_RETURN	NA		t	Admin	2021-08-28 03:07:59.537134-07	\N	\N	\N	Admin	2021-08-28 03:07:59.537134-07
194	100	4000001	2021-08-28	13	000008	24000.00	24000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 02:59:41.521587-07	\N	\N	\N	Admin	2021-08-28 02:59:41.521587-07
195	100	4000001	2021-08-28	14	000008	24000.00	24000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 02:59:43.422731-07	\N	\N	\N	Admin	2021-08-28 02:59:43.422731-07
196	100	4000001	2021-08-28	15	000008	16000.00	16000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 03:34:47.375014-07	\N	\N	\N	Admin	2021-08-28 03:34:47.375014-07
197	100	4000001	2021-08-28	16	SALES_RETURN	8000.00	8000.00	SALES_RETURN	NA		t	Admin	2021-08-28 03:35:03.741087-07	\N	\N	\N	Admin	2021-08-28 03:35:03.741087-07
198	100	4000001	2021-08-28	17	000008	18000.00	18000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 03:36:13.250284-07	\N	\N	\N	Admin	2021-08-28 03:36:13.250284-07
199	100	4000001	2021-08-28	18	000008	54000.00	54000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 03:36:25.761969-07	\N	\N	\N	Admin	2021-08-28 03:36:25.761969-07
200	100	4000001	2021-08-28	19	000008	60000.00	60000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 03:36:40.623743-07	\N	\N	\N	Admin	2021-08-28 03:36:40.623743-07
201	100	4000001	2021-08-28	20	000008	160.00	160.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 03:37:31.648953-07	\N	\N	\N	Admin	2021-08-28 03:37:31.648953-07
202	100	4000001	2021-08-28	21	000008	8000.00	8000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 03:51:07.805169-07	\N	\N	\N	Admin	2021-08-28 03:51:07.805169-07
203	100	4000001	2021-08-28	22	000008	8000.00	8000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 03:51:26.400951-07	\N	\N	\N	Admin	2021-08-28 03:51:26.400951-07
204	100	4000001	2021-08-28	23	000008	44.00	44.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 03:56:25.467273-07	\N	\N	\N	Admin	2021-08-28 03:56:25.467273-07
205	100	4000001	2021-08-28	24	SALES_RETURN	22.00	22.00	SALES_RETURN	NA		t	Admin	2021-08-28 03:56:43.953326-07	\N	\N	\N	Admin	2021-08-28 03:56:43.953326-07
206	100	4000001	2021-08-29	1	000008	30000.00	30000.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 21:26:04.160421-07	\N	\N	\N	Admin	2021-08-28 21:26:04.160421-07
207	100	4000001	2021-08-29	2	SALES_RETURN	18000.00	18000.00	SALES_RETURN	NA		t	Admin	2021-08-28 21:26:30.274594-07	\N	\N	\N	Admin	2021-08-28 21:26:30.274594-07
208	100	4000001	2021-08-29	3	000008	80.00	80.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 21:26:49.914423-07	\N	\N	\N	Admin	2021-08-28 21:26:49.914423-07
209	100	4000001	2021-08-29	4	000008	35.00	35.00	SALES	NA	Sales Posting	t	Admin	2021-08-28 21:27:57.333934-07	\N	\N	\N	Admin	2021-08-28 21:27:57.333934-07
210	100	4000001	2021-08-30	1	SALES_RETURN	8000.00	8000.00	SALES_RETURN	NA		t	Admin	2021-08-29 21:09:16.926698-07	\N	\N	\N	Admin	2021-08-29 21:09:16.926698-07
211	100	4000001	2021-08-30	2	000008	40.00	40.00	SALES	NA	Sales Posting	t	Admin	2021-08-29 21:11:00.052477-07	\N	\N	\N	Admin	2021-08-29 21:11:00.052477-07
212	100	0	2021-08-30	3	STOCK	14.00	14.00	STOCK	NA	Stock Posting	t	Admin	2021-08-29 21:54:56.009819-07	\N	\N	\N	Admin	2021-08-29 21:54:56.009819-07
213	100	4000001	2021-08-30	4	000008	8000.00	8000.00	SALES	NA	Sales Posting	t	Admin	2021-08-29 21:55:13.685888-07	\N	\N	\N	Admin	2021-08-29 21:55:13.685888-07
214	100	4000001	2021-08-30	5	000008	80.00	80.00	SALES	NA	Sales Posting	t	Admin	2021-08-29 21:55:25.388035-07	\N	\N	\N	Admin	2021-08-29 21:55:25.388035-07
215	100	4000001	2021-08-30	6	000008	35.00	35.00	SALES	NA	Sales Posting	t	Admin	2021-08-29 22:20:53.771379-07	\N	\N	\N	Admin	2021-08-29 22:20:53.771379-07
\.


--
-- Data for Name: finance_transaction_table; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_transaction_table (id, branch_code, center_code, transaction_date, batch_serial, account_number, tran_gl_code, contra_gl_code, tran_debit_credit, tran_screen, tran_type, tran_amount, charge_amount, charge_code, available_balance, tran_person_phone, tran_person_name, tran_document_prefix, tran_document_number, tran_sign_verified, system_posted_tran, transaction_narration, tran_balance_check_required, tran_auth_required, back_date_transaction, auth_by, auth_on, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: finance_transaction_telbal; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_transaction_telbal (branch_code, teller_id, cash_od_allowed, credit_limit_amount, debit_limit_amount, total_credit_amount, total_debit_amount, cash_balance, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: finance_transaction_type; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_transaction_type (tran_type_id, tran_type_code, tran_type_name, default_debit_credit, debit_allowed, credit_allowed, is_account_required, is_document_required, transaction_screen, transaction_table, transaction_from_table, is_active, is_deleted, app_user_id, app_data_time, credit_gl_code, debit_gl_code, tran_account_type, tran_debit_account_type, transaction_client_type) FROM stdin;
000002	BD	Bank Deposit	D	t	t	f	f	LEDCASH_TRAN	\N	\N	t	f	Admin	2021-05-05 02:36:34.722421-07	11100001	11100001	\N	\N	\N
000003	BW	Bank Withdrawal	C	t	t	f	f	LEDCASH_TRAN	\N	\N	t	f	Admin	2021-05-05 02:37:03.79279-07	11100001	11100001	\N	\N	\N
000004	CP	Cash Payment	D	t	t	t	f	STOCK_PAYMENT	\N	\N	t	f	Admin	2021-05-05 02:38:09.028541-07	11100001	11100001	Supplier	\N	SUP
000005	CP	Employee Salary Payment	D	t	t	t	f	CASH_TRANSACTION	\N	\N	t	f	Admin	2021-05-05 02:38:57.183208-07	11100001	11100001	Employee	\N	EMP
000006	CP	Expenses Entry	D	t	t	f	f	LEDCASH_TRAN	\N	\N	t	f	Admin	2021-05-05 02:39:38.355186-07	11100001	11100001	\N	\N	\N
000007	CP	Supplier Bill Payment	D	t	t	t	f	CASH_TRANSACTION	\N	\N	t	f	Admin	2021-05-05 02:40:30.229695-07	11100001	11100001	Supplier	\N	SUP
000008	SALES	Cash & Due Sales	D	t	t	t	f	SALES_ENTRY	\N	\N	t	f	Admin	2021-05-05 02:41:45.003324-07	11100001	11100001	Customer	\N	CCL
000009	INV	Owners Investment	C	t	t	f	f	LEDCASH_TRAN	\N	\N	t	f	Admin	2021-05-05 02:42:26.980175-07	11100001	11100001	\N	\N	\N
000010	CR	EMI Receive	D	t	t	t	f	EMI_RECEIVE	\N	\N	t	f	Admin	2021-05-05 03:48:31.915052-07	11100001	11100001	Customer	\N	CCL
000001	SUPPACNT	Supplier Account	D	t	t	f	f	SUPP_ACCOUNT	\N	\N	t	f	Admin	2021-05-24 08:26:13.774577-07	11100001	11100001	Supplier	\N	SUP
000011	CP	Purchase Entry	D	t	t	t	f	QUICK_PURCHASE	\N	\N	t	f	Admin	2021-07-06 10:34:01.094389-07	11100001	11100001	Supplier	\N	SUP
000012	ACOPN	Customer Account	D	t	t	t	f	CLIENT_ACCOUNT	\N	\N	t	f	Admin	2021-07-07 09:28:26.010248-07	\N	\N	Customer	\N	CCL
\.


--
-- Data for Name: finance_transfer_tran; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.finance_transfer_tran (id, transaction_date, from_client_id, from_client_name, from_client_balance, from_account_number, to_client_id, to_client_name, to_client_balance, to_account_number, from_gl_code, from_gl_name, from_gl_balance, to_gl_code, to_gl_name, to_gl_balance, tran_type, tran_screen, tran_amount, tran_document_number, tran_sign_verified, system_posted_tran, transaction_narration, back_date_transaction, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: hrm_advance_salary; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_advance_salary (id, amount, remarks, month_year, app_user_id, app_data_time, employee_id_id) FROM stdin;
\.


--
-- Data for Name: hrm_allowance_payment; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_allowance_payment (id, amount, remarks, month_year, app_user_id, app_data_time, allowance_id_id, employee_id_id) FROM stdin;
\.


--
-- Data for Name: hrm_attendance_card_log; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_attendance_card_log (id, log_time, app_user_id, app_data_time, employee_id, shift_id) FROM stdin;
\.


--
-- Data for Name: hrm_attendance_log; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_attendance_log (id, attendance_date, in_time, out_time, total_work_minute, work_start_time_sec, work_end_time_sec, work_start_grace_time_sec, work_end_time_grace_sec, refresh_start_time_sec, refresh_end_time_sec, is_late_entry, is_early_exit, late_entry_reason, early_exit_reason, app_user_id, app_data_time, early_exit_approve, employee_id, late_entry_approve, shift_id) FROM stdin;
\.


--
-- Data for Name: hrm_attendance_schedule; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_attendance_schedule (schedule_id, schedule_date, schedule_description, start_date, end_date, schedule_status, app_user_id, app_data_time, employee_id, shift_id) FROM stdin;
\.


--
-- Data for Name: hrm_bank_info; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_bank_info (bank_id, bank_name, bank_address, bank_phone, bank_email, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: hrm_business_unit; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_business_unit (branch_code, department_id, bunit_id, bunit_name, bunit_incharge, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: hrm_company_information; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_company_information (company_id, company_name, office_address, app_user_id, app_data_time, country_id, district_id, division_id, upozila_id) FROM stdin;
000005	Peart Technology Limited	dhaka	Admin	2021-08-18 23:38:07.510553-07	\N	\N	\N	\N
\.


--
-- Data for Name: hrm_company_office; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_company_office (office_id, office_name, office_address, app_user_id, app_data_time, country_id, district_id, division_id, upozila_id) FROM stdin;
\.


--
-- Data for Name: hrm_department_info; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_department_info (department_id, department_name, total_employee, department_location, department_incharge, app_user_id, app_data_time) FROM stdin;
000021	production	20	building-a	mahin	Admin	2021-08-21 03:43:11.978293-07
000028	sales	30	building-b	rifan	Admin	2021-08-26 03:08:56.764122-07
\.


--
-- Data for Name: hrm_education_degree; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_education_degree (degree_id, degree_name, degree_duration, app_user_id, app_data_time) FROM stdin;
000007	hsc	hsc	Admin	2021-08-18 23:40:27.957478-07
\.


--
-- Data for Name: hrm_employee_designation; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_employee_designation (desig_id, desig_name, attendance_bonus, attendance_bonus_amt, production_bonus, production_bonus_amt, sales_comission, ot_hour_allow, ot_hour_rate, stamp_ded_allow, stamp_ded_amount, app_user_id, app_data_time) FROM stdin;
000004	manager	t	600	f	0	200	f	\N	t	50	Admin	2021-08-15 23:05:48.0697-07
000003	employee	t	300	t	50	500	t	3.00	t	300	Admin	2021-08-15 00:44:18.73707-07
\.


--
-- Data for Name: hrm_employee_details; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_employee_details (employee_id, employee_name, employee_father_name, employee_mother_name, employee_blood_group, employee_sex, employee_religion, employee_marital_status, employee_national_id, employee_present_address, employee_permanent_address, employee_phone_own, employee_phone_office, passport_no, driving_licence, employee_tin, employee_phone_home, email_personal, employee_joining_date, employee_date_of_birth, employee_status, eme_contact_name, eme_contact_relation, eme_contact_phone, eme_contact_address, office_id, email_official, reporting_to, card_number, salary_bank_ac, contract_start_date, contract_exp_date, last_inc_date, next_inc_date, service_end_date, last_transfer_date, next_transfer_date, job_confirm_date, pf_confirm_date, gf_confirm_date, wf_confirm_date, last_promotion_date, salary_gross, app_user_id, app_data_time, business_unit_id, country_id, current_shift, department_id_id, designation_id, district_id, division_id, emptype_id, office_location, salary_bank, salscale_id, upozila_id) FROM stdin;
000026	mahadi			O-	M	I	S	bangladeshi			9748947	\N	\N	\N	\N	\N	\N	\N	\N	A	\N	\N	\N	\N	dhaka	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	4000	Admin	2021-08-21 03:59:12.680112-07	\N	000001	\N	\N	000003	\N	\N	\N	\N	\N	000009	\N
000025	tamim	rafiq molla		A+	M	I	\N	bangladeshi	dhaka		0119765342	\N	\N	\N	\N	\N	\N	\N	\N	A	\N	\N	\N	\N	velanagar	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Admin	2021-08-21 03:46:42.575859-07	\N	\N	\N	\N	000004	\N	\N	\N	\N	\N	\N	\N
000027	robi	robiul			M		\N	bangladeshi			0176489	\N	\N	\N	\N	\N	\N	\N	\N	A	\N	\N	\N	\N	velanagr	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	3000	Admin	2021-08-22 23:21:40.224897-07	\N	\N	\N	000021	000003	\N	\N	\N	\N	\N	000009	\N
000024	shamim	ramim		A+	M	I	S	bangladeshi	dhaka		01987	\N	\N	\N	\N	\N	\N	\N	\N	A	\N	\N	\N	\N	norshindhi	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	4000	Admin	2021-08-21 03:45:37.16093-07	\N	\N	\N	\N	000003	\N	\N	\N	\N	\N	\N	\N
000029	shakib				M		\N	bangladeshi			0274985	\N	\N	\N	\N	\N	\N	\N	\N	A	\N	\N	\N	\N	norshindhi12	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Admin	2021-08-26 03:12:24.709159-07	\N	\N	\N	000028	000004	\N	\N	\N	\N	\N	\N	\N
\.


--
-- Data for Name: hrm_employee_document; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_employee_document (id, document_location, file_no, status, app_user_id, app_data_time, document_type, employee_id) FROM stdin;
\.


--
-- Data for Name: hrm_employee_document_type; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_employee_document_type (document_type_id, document_type_name, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: hrm_employee_experience; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_employee_experience (id, serial_no, company_name, company_address, company_type, "position", department, responsibility, achievement, phone_number, email, contact_person, emp_id, start_date, end_date, app_user_id, app_data_time, employee_id) FROM stdin;
1	\N	Peart Technology Limited	Narsingdi	\N	\N	\N	\N	\N	\N	\N	\N	\N	2012-02-01	2017-01-02	Admin	2021-08-18 23:43:52.99354-07	\N
\.


--
-- Data for Name: hrm_employee_holyday; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_employee_holyday (holiday_sl_no, holiday_from_date, holiday_end_date, app_user_id, app_data_time, employee_id_id, holiday_type_id) FROM stdin;
\.


--
-- Data for Name: hrm_employee_nominee; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_employee_nominee (id, nominee_serial, nominee_name, nominee_sex, nominee_father_name, nominee_mother_name, nominee_present_addr, nominee_permanent_addr, nominee_birth_date, country_id, nominee_nid_num, nominee_religion, nominee_blood_group, nominee_mobile_num, app_user_id, app_data_time, employee_id) FROM stdin;
\.


--
-- Data for Name: hrm_employee_training; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_employee_training (id, institute_name, training_name, training_description, from_date, upto_date, app_user_id, app_data_time, employee_id, schedule_id) FROM stdin;
\.


--
-- Data for Name: hrm_employment_type; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_employment_type (emptype_id, emptype_name, app_user_id, app_data_time) FROM stdin;
000008	active	Admin	2021-08-18 23:40:47.609378-07
\.


--
-- Data for Name: hrm_extra_allowance; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_extra_allowance (allowance_id, allowance_name, allowance_amount, comments, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: hrm_holyday_info; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_holyday_info (holiday_sl_no, fiscal_year, holiday_from_date, holiday_end_date, holiday_desc, month, app_user_id, app_data_time, holiday_type_id) FROM stdin;
\.


--
-- Data for Name: hrm_holyday_type; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_holyday_type (holiday_type_id, type_name, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: hrm_leave_application; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_leave_application (id, application_date, from_date, upto_date, join_date, approval_status, leave_reason, approval_comments, app_user_id, app_data_time, application_to, approve_by, employee_id, leave_id) FROM stdin;
\.


--
-- Data for Name: hrm_leave_info; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_leave_info (leave_id, leave_name, prefix_name, leave_encasement, holiday_check, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: hrm_others_deduction; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_others_deduction (id, amount, remarks, month_year, app_user_id, app_data_time, employee_id_id) FROM stdin;
\.


--
-- Data for Name: hrm_pay_bill; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_pay_bill (bill_id, bill_date, bill_comments, bill_doc_detail, bill_amount, approval_amount, checked_status, approve_status, checked_date, approve_date, attached_file, app_user_id, app_data_time, approve_by, checked_by, prepare_by) FROM stdin;
\.


--
-- Data for Name: hrm_salary_scale; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_salary_scale (salscale_id, salscale_name, total_salary, deduction_pct, total_deduction, comments, app_user_id, app_data_time) FROM stdin;
000009	40000	0.00	0.00	0.00	ok	Admin	2021-08-18 23:41:21.465442-07
\.


--
-- Data for Name: hrm_salary_scale_bonous; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_salary_scale_bonous (salsdtlcale_id, bonus_id, bonus_name, bonus_pct, bonus_amount, comments, app_user_id, app_data_time, salscale_id) FROM stdin;
009	000011	festival	0.00	0.00	good	Admin	2021-08-18 23:42:51.051297-07	000009
\.


--
-- Data for Name: hrm_salary_scale_details; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_salary_scale_details (salsdtlcale_id, salsdtlcale_name, salary_amount, deduction_pct, total_deduction, comments, app_user_id, app_data_time, salscale_id) FROM stdin;
000010	field-work	4000.00	0.00	0.00	ok	Admin	2021-08-18 23:42:07.077585-07	000009
\.


--
-- Data for Name: hrm_salary_sheet; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_salary_sheet (id, branch_code, dept_id, desig_name, employee_id, employee_name, total_atten, salary_gross, ot_hour, ot_hour_rate, ot_amount, sales_comission, total_advance, others_allowance, others_deduction, stamp_ded_amount, total_salary, netpay, month_year, app_user_id, app_data_time) FROM stdin;
59	100	000021	employee	000027	robi	31	3000.00	\N	3.00	\N	0.00	0.00	0.00	0.00	300.00	3000.00	2700.00	JANUARY-2021	Admin	\N
63	100	000021	employee	000027	robi	30	3000.00	\N	3.00	\N	0.00	0.00	0.00	0.00	300.00	3000.00	2700.00	APRIL-2021	Admin	\N
65	100	\N	manager	000025	tamim	31	0.00	\N	\N	\N	0.00	0.00	0.00	0.00	50.00	0.00	-50.00	MARCH-2021	Admin	\N
66	100	\N	employee	000024	shamim	31	4000.00	\N	3.00	\N	0.00	0.00	0.00	0.00	300.00	4000.00	3700.00	MARCH-2021	Admin	\N
67	100	000021	employee	000027	robi	31	3000.00	\N	3.00	\N	0.00	0.00	0.00	0.00	300.00	3000.00	2700.00	MARCH-2021	Admin	\N
68	100	\N	employee	000026	mahadi	31	4000.00	\N	3.00	\N	0.00	0.00	0.00	0.00	300.00	4000.00	3700.00	MARCH-2021	Admin	\N
69	100	000028	manager	000029	shakib	31	0.00	\N	\N	\N	-383652748.00	0.00	0.00	0.00	50.00	-383652748.00	-383652798.00	MAY-2021	Admin	\N
70	100	\N	manager	000025	tamim	31	0.00	\N	\N	\N	-383652748.00	0.00	0.00	0.00	50.00	-383652748.00	-383652798.00	MAY-2021	Admin	\N
71	100	\N	employee	000024	shamim	31	4000.00	\N	3.00	\N	-959131870.00	0.00	0.00	0.00	300.00	-959127870.00	-959128170.00	MAY-2021	Admin	\N
72	100	000021	employee	000027	robi	31	3000.00	\N	3.00	\N	-959131870.00	0.00	0.00	0.00	300.00	-959128870.00	-959129170.00	MAY-2021	Admin	\N
73	100	\N	employee	000026	mahadi	31	4000.00	\N	3.00	\N	-959131870.00	0.00	0.00	0.00	300.00	-959127870.00	-959128170.00	MAY-2021	Admin	\N
\.


--
-- Data for Name: hrm_shift_info; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_shift_info (shift_id, shift_name, total_work_minute, work_start_time_sec, work_end_time_sec, work_start_grace_time_sec, work_end_time_grace_sec, refresh_start_time_sec, refresh_end_time_sec, ot_time_start, ot_time_end, max_ot_hour, duty_gap_time, morning_ot_time, app_user_id, app_data_time, office_id) FROM stdin;
000006	morning	120	4	8	\N	\N	\N	\N	\N	\N	\N	\N	\N	Admin	2021-08-18 23:39:30.955007-07	\N
\.


--
-- Data for Name: hrm_shift_info_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.hrm_shift_info_hist (id, shift_name, shift_effect_date, office_id, total_work_minute, work_start_time_sec, work_end_time_sec, work_start_grace_time_sec, work_end_time_grace_sec, refresh_start_time_sec, refresh_end_time_sec, app_user_id, app_data_time, shift_id) FROM stdin;
\.


--
-- Data for Name: sales_all_trandtl; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_all_trandtl (id, center_code, center_name, client_id, client_name, invoice_date, invoice_number, product_name, product_model, product_quantity, product_price, total_price, pay_amount, due_amount, instrepay_repay_amt, instrepay_repay_freq, nof_installment, instrepay_tot_repay_amt, instrcv_inv_number, instrcv_entry_date, instrcv_instlmnt, instrcv_ref_num, deposit_date, deposit_amount, deposit_memo_num, dpsrcv_date, dpsrcv_amount, dpsrcv_memo_num, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_application_settings; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_application_settings (id, company_code, company_name, company_address, company_mobile, company_email, company_logo, barcode_enable, invoice_file_name, invoice_line1, invoice_line2, invoice_line3, application_title, quick_sales_entry_customer, quick_payment_type, quick_sales_client_id, quick_sales_account_number, quick_sales_client_name, quick_sales_client_address, emi_profit_receivable, emi_profit_receive, product_wise_ledger, product_stock_gl, stock_due_gl, product_sales_gl, sales_due_gl, stock_ret_gl, sales_ret_gl, invoice_discount_gl, damage_gl, product_stock_parent_gl, product_sales_parent_gl, product_stock_ret_parent_gl, product_sales_ret_parent_gl, product_damage_parent_gl, profit_and_loss_ledger, profit_ledger, loss_ledger, stock_in_hand_ledger, cost_of_good_sold_ledger, sales_price_editable, sales_discount_rate_editable, sales_discount_amount_editable, sales_executive_phone_editable, payment_document_mandatory, sales_payment_document_lebel, client_admission_fee_auto, client_admission_fee, client_admission_fee_ledger, transaction_from_date, transaction_doc_required) FROM stdin;
1	100	Peart Technology Limited	Velanagor, Narsingdi	01720026449	sak112790@gmail.com	logo/web-icon.png	f	sales-report-invoice-print-view.html	Automated invoice || Generated by : Peart Technology Limited	THANK YOU FOR CHOOSING US	\N	Peart Technology Limited	t	000008	9999999999999	9999999999999	Walk-In Customer	Velanagor, Narsingdi	...	...	f	13100001	13100001	13100001	13100001	13100001	13100001	41000002	41000003	13100000	13100000	13100000	13100000	13100000	21000005	31000001	31000001	13100001	13100001	t	t	t	f	f	Document Number	f	0.00	\N	\N	f
\.


--
-- Data for Name: sales_client_balance; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_client_balance (id, client_id, account_number, total_purchase_amount, total_purchase_payment, total_purchase_quantity, total_sales_amount, total_sales_payment, total_sales_quantity, total_order_amount, total_order_payment, total_order_quantity, total_sales_return_amount, total_sales_return_quantity, total_order_return_amount, total_order_return_quantity, total_purchase_return_amount, total_purchase_return_quantity, total_damage_amount, total_damage_quantity, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_client_closing; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_client_closing (id, client_id, closing_date, closing_reason, cancel_by, cancel_date, app_user_id, app_data_time) FROM stdin;
1	00000002	2021-06-10	Test	\N	\N	Admin	2021-06-10 02:27:52.759603-07
2	00000007	2021-08-16	week	\N	\N	Admin	2021-08-15 23:12:52.745131-07
3	00000008	2021-08-22	left	\N	\N	Admin	2021-08-21 21:42:26.921113-07
\.


--
-- Data for Name: sales_client_id_changes_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_client_id_changes_hist (id, old_client_id, new_client_id, app_data_time) FROM stdin;
1	00000001	23	2021-06-10 02:27:25.522-07
\.


--
-- Data for Name: sales_client_photo_sign; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_client_photo_sign (id, document_type, document_location, status, app_user_id, app_data_time, client_id) FROM stdin;
\.


--
-- Data for Name: sales_client_profit_history; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_client_profit_history (id, branch_code, profit_from_date, profit_upto_date, profit_from_account, profit_to_account, total_purchase_amount, total_sales_amount, total_customer_balance, total_supplier_balance, profit_or_loss_amount, transaction_date, batch_number, bill_payment_batch, cancel_date, cancel_user_id, app_user_id, app_data_time, client_id) FROM stdin;
\.


--
-- Data for Name: sales_clients; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_clients (client_id, branch_code, center_code, client_name, client_type, client_referred_by, client_father_name, client_mother_name, client_blood_group, client_sex, client_religion, client_marital_status, client_national_id, client_present_address, client_permanent_address, client_phone, client_email, client_joining_date, client_education, client_date_of_birth, client_status, client_monthly_income, client_annual_income, client_admit_fee, client_admit_fee_batch, app_user_id, app_data_time, district_id, closing_date) FROM stdin;
23	100	4000001	Mohammad Rajib Pradhan	CCL	Rajib	Hafiz Uddin	Aruna Begum		\N		\N	32123	Dhaka	Dhaka	01749195756	\N	2021-05-24		\N	A	0.00	0.00	0.00	\N	Admin	2021-05-24 04:53:02.270367-07	\N	\N
00000005	100	4000001	Billal	CCL	\N	Habiob	\N	A+	M	I	M	\N	Uttar Kararchar Boritola, Shibpur, Narsingdi	Uttar Kararchar Boritola, Shibpur, Narsingdi	01673489595	\N	2021-06-26		\N	A	0.00	0.00	0.00	\N	Admin	2021-06-26 02:31:17.812928-07	\N	\N
00000006	100	4000001	Rakha Begum	CCL	\N	Mosarof Khan	Monowara Begum		\N		\N	666666666666	Velanagor, Narsingdi	Velanagor, Narsingdi	01995297063	sak112790@gmail.com	2021-07-06		\N	A	0.00	0.00	0.00	\N	Admin	2021-07-06 10:24:11.934155-07	\N	\N
00000004	100	4000001	hasan	CCL	\N	mbsjcbjh	jvjhbek		\N		\N	\N	htafdhwguyjabcjev	htafdhwguyjabcjev	5465676	\N	2021-06-21		\N	A	0.00	0.00	0.00	\N	Admin	2021-06-21 06:08:16.064404-07	\N	\N
00000008	100	4000001	shahadat	CCL	\N	mohammad	\N	AB+	M	I	S	mitr56	dhaka	dhaka	012789	\N	2000-08-22		\N	A	0.00	0.00	0.00	\N	Admin	2021-08-21 21:39:54.031923-07	\N	2021-08-22
00000003	100	4000001	Habiba	CCL	\N	babab	\N	A+	\N		\N	\N	Uttar Kararchar Boritola,Shibpur, Narsingdi	Uttar Kararchar Boritola,Shibpur, Narsingdi	118486586	\N	2021-06-11		\N	A	0.00	0.00	0.00	\N	Admin	2021-06-11 03:53:06.827946-07	\N	\N
\.


--
-- Data for Name: sales_delar_security_info; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_delar_security_info (id, branch_code, phone_number, client_type_code, credit_limit, tin_number, trade_licence_number, guarantor_number, cheque_number, cheque_amount, cheque_date, bank_name, branch_name, app_user_id, app_data_time, client_id) FROM stdin;
\.


--
-- Data for Name: sales_emi_history; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_emi_history (id, branch_code, center_code, account_number, emi_reference_no, emi_rate, emi_inst_amount, inst_receive_date, inst_receive_amount, total_installment_due, total_installment_payment, total_installment_overdue, total_installment_advance, total_emi_outstanding, emi_principal_outstanding, emi_profit_outstanding, emi_total_payment, emi_principal_payment, emi_profit_payment, total_advance_recover, principal_advance_recover, profit_advance_recover, total_due_recover, principal_due_recover, profit_due_recover, emi_total_overdue, emi_principal_overdue, emi_profit_overdue, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_emi_receive; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_emi_receive (id, branch_code, center_code, client_id, account_number, emi_reference_no, receive_date, entry_day_sl, receive_amount, transaction_narration, tran_batch_number, penalty_charge, receive_document_number, is_transfer, emi_cancel_by, emi_cancel_on, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_emi_settings; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_emi_settings (id, emi_profit_receivable, emi_profit_receive, emi_fee_auto, emi_fee, emi_fee_ledger, emi_fee_chargecd, emi_down_payment, emi_min_down_payment_pct, emi_doc_fee_enable, emi_doc_fee_ledger, emi_insurance_readonly, emi_insurance_enable, emi_insurance_ledger) FROM stdin;
1	14000002	33000002	f	0.00	\N	\N	f	0.00	f	\N	f	f	\N
\.


--
-- Data for Name: sales_emi_setup; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_emi_setup (id, branch_code, center_code, client_id, account_number, emi_serial_number, emi_reference_no, emi_reference_date, emi_reference_amount, emi_down_amount, reference_due_amount, total_emi_amount, total_emi_due, emi_inst_amount, emi_inst_frequency, emi_inst_repay_from_date, number_of_installment, installment_tot_repay_amt, installment_exp_date, installment_lastpay_date, emi_rate, emi_profit_amount, emi_fee_amount, emi_ins_rate, emi_ins_fee_amount, emi_doc_fee_amount, emi_setup_batch, emi_closer_date, emi_reschedule_date, last_emi_hist_update, last_emi_payment_date, is_balance_updated, emi_cancel_by, emi_cancel_on, app_user_id, app_data_time) FROM stdin;
1	100	4000001	23	1000000000001	\N	SL000002	2021-05-24	6000.00	0.00	6000.00	6600.00	6600.00	330.00	W	2021-05-31	20	0.00	2021-10-18	\N	10.00	600.00	0.00	0.00	0.00	0.00	4	\N	\N	\N	\N	f	\N	\N	Admin	2021-05-24 05:19:58.294698-07
2	100	4000001	23	1000000000001	\N	SL000003	2021-06-10	5500.00	0.00	4000.00	4200.00	4200.00	210.00	W	2021-06-17	20	0.00	2021-11-04	\N	5.00	200.00	0.00	0.00	0.00	0.00	3	\N	\N	\N	\N	f	\N	\N	Admin	2021-06-10 02:58:01.416964-07
3	100	4000001	00000003	1000000000004	\N	SL000004	2021-06-11	20000.00	0.00	20000.00	20000.00	20000.00	1333.00	Q	2021-09-11	15	0.00	2025-06-11	\N	0.00	0.00	0.00	0.00	0.00	0.00	0	\N	\N	\N	\N	f	\N	\N	Admin	2021-06-11 05:37:46.646289-07
\.


--
-- Data for Name: sales_fees_history; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_fees_history (id, branch_code, center_code, client_id, fee_type, fee_amount, cancel_amount, fee_collection_date, transaction_narration, fee_memo_number, transaction_batch_number, cancel_by, cancel_date, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_nominee_information; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_nominee_information (id, nominee_serial, nominee_name, nominee_sex, nominee_father_name, nominee_mother_name, nominee_present_addr, nominee_permanent_addr, nominee_birth_date, nominee_nid_num, nominee_religion, nominee_blood_group, nominee_education, nominee_marital_status, nominee_mobile_num, is_active, is_deleted, app_user_id, app_data_time, client_id) FROM stdin;
\.


--
-- Data for Name: sales_order_details; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_order_details (id, branch_code, center_code, order_number, order_date, product_id, serial_no, service_type, service_start_date, service_end_date, service_card_no, ordered_product_price, product_price, quantity, ordered_quantity, delivered_quantity, total_price, ordered_total_price, delivered_total_price, profit_amount, discount_rate, ordered_discount_rate, delivered_discount_rate, discount_amount, ordered_discount_amount, delivered_discount_amount, status, comments, cancel_by, cancel_on, app_user_id, app_data_time) FROM stdin;
1	100	4000001	OR000001	2021-07-06	000004	1	\N	\N	\N	\N	30.00	30.00	0	1	1	0.00	30.00	30.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	C		Admin	2021-07-06	Admin	2021-07-06 09:15:40.847234-07
2	100	4000001	OR000002	2021-08-14	000006	1	\N	\N	\N	\N	8000.00	8000.00	10	10	0	80000.00	80000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-13 22:50:07.001165-07
46	100	4000001	OR000039	2021-08-28	000001	1	\N	\N	\N	\N	6000.00	6000.00	0	10	10	0.00	60000.00	60000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-28 03:35:57.823222-07
48	100	4000001	OR000041	2021-08-29	000005	1	\N	\N	\N	\N	35.00	35.00	1	2	1	35.00	70.00	35.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-28 21:27:37.616318-07
9	100	4000001	OR000003	2021-08-16	000006	1	\N	\N	\N	\N	8000.00	8000.00	1	1	0	8000.00	8000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-15 23:59:22.59695-07
30	100	4000001	OR000023	2021-08-26	000002	1	\N	\N	\N	\N	20000.00	20000.00	-1	10	11	-20000.00	200000.00	220000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	C		Admin	2021-08-26	Admin	2021-08-25 22:19:02.390525-07
10	100	4000001	OR000004	2021-08-16	000001	1	\N	\N	\N	\N	6000.00	6000.00	0	1	1	0.00	6000.00	6000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-16 04:13:46.428817-07
24	100	4000001	OR000017	2021-08-21	000004	2	\N	\N	\N	\N	30.00	30.00	0	10	10	0.00	300.00	300.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-21 00:22:04.742108-07
11	100	4000001	OR000005	2021-08-17	000001	1	\N	\N	\N	\N	6000.00	6000.00	0	100	100	0.00	600000.00	600000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-17 02:48:02.212915-07
23	100	4000001	OR000017	2021-08-21	000006	1	\N	\N	\N	\N	8000.00	8000.00	0	10	10	0.00	80000.00	80000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-21 00:22:04.742108-07
12	100	4000001	OR000006	2021-08-19	000001	1	\N	\N	\N	\N	6000.00	6000.00	0	10	10	0.00	60000.00	60000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-18 21:57:37.193601-07
13	100	4000001	OR000007	2021-08-19	000002	1	\N	\N	\N	\N	20000.00	20000.00	10	10	0	200000.00	200000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-18 22:01:08.997602-07
26	100	4000001	OR000019	2021-08-22	000004	1	\N	\N	\N	\N	30.00	30.00	0	10	10	0.00	300.00	300.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-21 23:24:17.831497-07
14	100	4000001	OR000008	2021-08-19	000001	1	\N	\N	\N	\N	6000.00	6000.00	0	10	10	0.00	60000.00	60000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-18 22:03:07.92394-07
27	100	4000001	OR000020	2021-08-23	000004	1	\N	\N	\N	\N	30.00	30.00	0	1	1	0.00	30.00	30.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-22 21:30:50.424917-07
31	100	4000001	OR000024	2021-08-26	000004	1	\N	\N	\N	\N	30.00	30.00	0	3	3	0.00	90.00	90.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-25 22:26:08.890969-07
15	100	4000001	OR000009	2021-08-19	000001	1	\N	\N	\N	\N	6000.00	6000.00	0	10	10	0.00	60000.00	60000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-18 22:06:12.665999-07
16	100	4000001	OR000010	2021-08-19	000001	1	\N	\N	\N	\N	6000.00	6000.00	1	1	0	6000.00	6000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-18 22:07:58.717777-07
17	100	4000001	OR000011	2021-08-19	000001	1	\N	\N	\N	\N	6000.00	6000.00	5	10	5	30000.00	60000.00	30000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-18 22:08:35.134817-07
18	100	4000001	OR000012	2021-08-19	000001	1	\N	\N	\N	\N	6000.00	6000.00	3	3	0	18000.00	18000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-18 22:10:17.309175-07
40	100	4000001	OR000033	2021-08-28	000001	1	\N	\N	\N	\N	6000.00	6000.00	3	10	7	18000.00	60000.00	42000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-27 22:52:24.090584-07
19	100	4000001	OR000013	2021-08-19	000001	1	\N	\N	\N	\N	6000.00	6000.00	4	10	6	24000.00	60000.00	36000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-18 22:13:10.555956-07
20	100	4000001	OR000014	2021-08-19	000004	1	\N	\N	\N	\N	30.00	30.00	10	10	0	300.00	300.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-18 22:18:26.914941-07
21	100	4000001	OR000015	2021-08-19	000001	1	\N	\N	\N	\N	6000.00	6000.00	12	12	0	72000.00	72000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	C		Admin	2021-08-19	Admin	2021-08-18 22:25:05.932401-07
25	100	4000001	OR000018	2021-08-21	000006	1	\N	\N	\N	\N	8000.00	8000.00	100	100	0	800000.00	800000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-21 00:22:56.658286-07
32	100	4000001	OR000025	2021-08-26	000003	1	\N	\N	\N	\N	22.00	22.00	-4	5	9	-88.00	110.00	198.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	C		Admin	2021-08-26	Admin	2021-08-25 22:45:06.918731-07
28	100	4000001	OR000021	2021-08-26	000001	1	\N	\N	\N	\N	6000.00	6000.00	-10	50	60	-60000.00	300000.00	360000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	C		Admin	2021-08-26	Admin	2021-08-25 21:58:32.419003-07
41	100	4000001	OR000034	2021-08-28	000006	1	\N	\N	\N	\N	8000.00	8000.00	0	1	1	0.00	8000.00	8000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-27 23:30:58.564026-07
22	100	4000001	OR000016	2021-08-20	000001	1	\N	\N	\N	\N	6000.00	6000.00	-6	1	7	-36000.00	6000.00	42000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	C		Admin	2021-08-26	Admin	2021-08-19 21:28:25.667574-07
33	100	4000001	OR000026	2021-08-26	000003	1	\N	\N	\N	\N	22.00	22.00	-2	2	4	-44.00	44.00	88.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	C		Admin	2021-08-26	Admin	2021-08-25 22:53:52.21176-07
29	100	4000001	OR000022	2021-08-26	000008	1	\N	\N	\N	\N	40.00	40.00	-3	10	13	-120.00	400.00	520.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	C		Admin	2021-08-26	Admin	2021-08-25 22:08:21.534045-07
36	100	4000001	OR000029	2021-08-26	000008	1	\N	\N	\N	\N	40.00	40.00	0	5	5	0.00	200.00	200.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-26 02:29:51.561853-07
39	100	4000001	OR000032	2021-08-28	000004	1	\N	\N	\N	\N	30.00	30.00	1	1	0	30.00	30.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-27 22:41:58.732551-07
34	100	4000001	OR000027	2021-08-26	000002	1	\N	\N	\N	\N	20000.00	20000.00	-3	3	6	-60000.00	60000.00	120000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	C		Admin	2021-08-26	Admin	2021-08-25 23:01:20.906299-07
35	100	4000001	OR000028	2021-08-26	000006	1	\N	\N	\N	\N	8000.00	8000.00	2	2	0	16000.00	16000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-25 23:09:17.613625-07
49	100	4000001	OR000042	2021-08-30	000008	1	\N	\N	\N	\N	40.00	40.00	0	3	3	0.00	120.00	120.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-29 21:10:44.986653-07
37	100	4000001	OR000030	2021-08-28	000001	1	\N	\N	\N	\N	6000.00	6000.00	0	1	1	0.00	6000.00	6000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-27 22:06:34.836352-07
45	100	4000001	OR000038	2021-08-28	000001	1	\N	\N	\N	\N	6000.00	6000.00	-2	10	12	-12000.00	60000.00	72000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-28 03:07:30.779943-07
47	100	4000001	OR000040	2021-08-28	000001	1	\N	\N	\N	\N	6000.00	6000.00	2	2	0	12000.00	12000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-28 03:57:33.418918-07
50	100	4000001	OR000043	2021-08-30	000005	1	\N	\N	\N	\N	35.00	35.00	2	3	1	70.00	105.00	35.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-29 22:20:37.073708-07
38	100	4000001	OR000031	2021-08-28	000004	1	\N	\N	\N	\N	30.00	30.00	0	1	1	0.00	30.00	30.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-27 22:31:19.140776-07
42	100	4000001	OR000035	2021-08-28	000001	1	\N	\N	\N	\N	6000.00	6000.00	3	10	7	18000.00	60000.00	42000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-28 00:38:10.122514-07
43	100	4000001	OR000036	2021-08-28	000001	1	\N	\N	\N	\N	6000.00	6000.00	10	10	0	60000.00	60000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-28 00:47:08.617841-07
44	100	4000001	OR000037	2021-08-28	000006	1	\N	\N	\N	\N	8000.00	8000.00	1	5	4	8000.00	40000.00	32000.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	P		\N	\N	Admin	2021-08-28 01:11:33.259874-07
\.


--
-- Data for Name: sales_order_master; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_order_master (id, branch_code, center_code, employee_id, order_number, order_date, customer_id, account_number, customer_name, customer_phone, customer_address, executive_phone, total_quantity, returned_quantity, total_bill_amount, bill_amount, pay_amount, due_amount, advance_pay, total_discount_rate, total_discount_amount, tran_type_code, tran_batch_number, status, order_comments, latitude, longitude, cancel_by, cancel_on, app_user_id, app_data_time, delivary_date) FROM stdin;
45	100	4000001	1000000	OR000039	2021-08-28	00000005	1000000000012	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	\N	10	\N	60000.00	60000.00	0.00	60000.00	0.00	0.00	0.00	CS	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 03:35:57.823222-07	2021-08-03
47	100	4000001	1000000	OR000041	2021-08-29	00000003	1000000000004	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	\N	2	\N	70.00	70.00	0.00	70.00	0.00	0.00	0.00	CS	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-28 21:27:37.616318-07	2021-08-03
48	100	4000001	1000000	OR000042	2021-08-30	00000005	1000000000012	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	\N	3	\N	120.00	120.00	0.00	120.00	0.00	0.00	0.00	CS	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-29 21:10:44.986653-07	2021-08-02
46	100	4000001		OR000040	2021-08-28	00000005	1000000000012	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	\N	2	\N	12000.00	12000.00	0.00	12000.00	0.00	0.00	0.00	CS	0	P	\N	\N	\N	\N	\N	Admin	2021-08-28 03:57:33.418918-07	2021-08-04
49	100	4000001	000001	OR000043	2021-08-30	00000003	1000000000004	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	\N	3	\N	105.00	105.00	0.00	105.00	0.00	0.00	0.00	CS	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-29 22:20:37.073708-07	2021-08-31
44	100	4000001	1000000	OR000038	2021-08-28	00000005	1000000000012	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	\N	10	\N	60000.00	60000.00	0.00	60000.00	0.00	0.00	0.00	CS	\N	A	\N	\N	\N	\N	\N	Admin	2021-08-28 03:07:30.779943-07	2021-08-02
43	100	4000001	1000000	OR000037	2021-08-28	23	1000000000001	Mohammad Rajib Pradhan	01749195756	Dhaka	\N	5	\N	40000.00	40000.00	0.00	40000.00	0.00	0.00	0.00	CS	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-28 01:11:33.259874-07	2021-08-03
42	100	4000001	1000000	OR000036	2021-08-28	23	1000000000001	Mohammad Rajib Pradhan	01749195756	Dhaka	\N	10	\N	60000.00	60000.00	0.00	60000.00	0.00	0.00	0.00	CS	0	A	\N	\N	\N	\N	\N	Admin	2021-08-28 00:47:08.617841-07	2021-08-10
\.


--
-- Data for Name: sales_product_damage_details; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_product_damage_details (id, branch_code, product_id, supplier_id, damage_date, tran_batch_number, damage_quantity, damage_amount, receive_amount, comments, cancel_by, cancel_on, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_product_offer_list; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_product_offer_list (id, branch_code, product_id, product_name, client_type_code, sales_offer_type, offer_from_quantity, offer_upto_quantity, offer_free_quantity, offer_from_amount, offer_upto_amount, offer_reduce_amount, sales_offer_fromdt, sales_offer_uptodt, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_product_offer_package; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_product_offer_package (id, branch_code, product_id, product_name, client_type_code, offer_from_quantity, offer_upto_quantity, free_product_code, free_product_name, offer_free_quantity, sales_offer_fromdt, sales_offer_uptodt, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_product_price_list; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_product_price_list (id, branch_code, product_id, product_name, client_type_code, product_sales_price, sales_discount_type, sales_discount_percent, sales_discount_amount, sales_discount_fromdt, sales_discount_uptodt, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_products; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_products (product_id, product_name, product_model, product_bar_code, product_search_text, product_current_rate, product_purces_price, product_sales_price, emi_sales_price, whole_sales_price, sales_discount_type, sales_discount_percent, sales_discount_maxamt, sales_discount_minamt, sales_discount_fromdt, sales_discount_uptodt, product_tax_rate, product_total_stock, product_total_sales, total_stock_return, total_sales_return, product_total_damage, product_available_stock, product_last_stock_date, total_order_quantity, last_order_date, product_last_sale_date, product_last_return_date, product_stock_alert, product_life_time, product_status, total_purchase_amount, total_sales_amount, stock_return_amount, sales_return_amount, total_return_damage, product_narration, update_unauth_product, product_stock_gl, product_sales_gl, product_order_gl, product_profit_gl, product_loss_gl, product_stock_ret_gl, product_sales_ret_gl, product_damage_gl, is_active, is_deleted, app_user_id, app_data_time, brand_id, product_group) FROM stdin;
000004	Ata	1	\N	Ata ( 1 )	25.00	25.00	30.00	0.00	0.00	P	0.00	0.00	0.00	\N	\N	0.00	336	45	0	0	0	296	2021-08-22	0	\N	2021-08-28	2021-08-22	0	0	A	8356.00	1170.00	44.00	0.00	0.00	\N	f	13100001	13100001	13100001	31000001	31000001	13100001	13100001	41000003	t	f	Admin	2021-06-21 06:16:49.495361-07	0003	0004
000007	refrigaretor	RF-01	\N	refrigaretor ( RF-01 )	20000.00	20000.00	25000.00	0.00	0.00	F	0.00	0.00	0.00	\N	\N	0.00	210	23	0	0	0	187	2021-08-23	0	\N	2021-08-27	2021-08-22	0	0	A	4180000.00	25000.00	20000.00	0.00	0.00	\N	f	13100001	13100001	13100001	31000001	31000001	13100001	13100001	41000003	t	f	Admin	2021-08-21 21:44:40.751831-07	0004	0001
000003	Water	1 lit	\N	Water ( 1 lit )	14.00	14.00	22.00	0.00	0.00	P	0.00	0.00	0.00	\N	\N	0.00	323	29	0	0	0	299	2021-08-30	0	\N	2021-08-28	2021-08-13	0	365	A	3122.00	638.00	1400.00	0.00	0.00	\N	f	13100001	13100001	13100001	31000001	31000001	13100001	13100001	41000003	t	f	Admin	2021-06-21 06:11:40.458732-07	0003	0004
000006	Aci garden chair	Aci garden chair	\N	Aci garden chair ( Aci garden chair )	6000.00	6000.00	8000.00	9000.00	7000.00	P	0.00	0.00	0.00	2021-09-02	\N	0.00	1700	-375	0	0	0	2095	2021-08-22	0	\N	2021-08-30	2019-08-23	0	0	A	10194000.00	-8400000.00	6000.00	0.00	0.00	\N	f	13100001	13100001	13100001	31000001	31000001	13100001	13100001	41000003	t	f	Admin	2021-07-06 10:32:12.754949-07	0003	0001
000008	fresh-oil	1	\N	fresh-oil ( 1 )	30.00	30.00	40.00	0.00	0.00	P	0.00	0.00	0.00	\N	\N	0.00	100	41	0	0	0	59	2021-08-23	0	\N	2021-08-30	2021-08-26	0	0	A	2980.00	1640.00	20.00	0.00	0.00	\N	f	13100001	13100001	13100001	31000001	31000001	13100001	13100001	41000003	t	f	Admin	2021-08-23 02:54:15.625111-07	0003	0003
000005	Chanachur	100g	\N	Chanachur ( 100g )	30.00	30.00	35.00	0.00	0.00	P	0.00	0.00	0.00	\N	\N	0.00	1213	34	0	0	0	1181	2021-08-26	0	\N	2021-08-30	\N	0	0	A	36390.00	1190.00	0.00	0.00	0.00	\N	f	13100001	13100001	13100001	31000001	31000001	13100001	13100001	41000003	t	f	Admin	2021-06-21 06:20:26.043424-07	0003	0004
000002	white washing machine	small	\N	white washing machine ( small )	18000.00	18000.00	20000.00	22000.00	19000.00	P	0.00	0.00	0.00	\N	\N	0.00	235	34	0	0	0	215	2021-08-26	0	\N	2021-08-28	2021-08-26	0	0	A	4212000.00	560000.00	18000.00	0.00	0.00	\N	f	13100001	13100001	13100001	31000001	31000001	13100001	13100001	41000003	t	f	Admin	2021-06-11 03:57:59.133381-07	0002	0001
000001	Mobile Phone	S10	\N	Mobile Phone ( S10 )	5000.00	5000.00	6000.00	6500.00	0.00	P	0.00	0.00	0.00	\N	\N	0.00	1721	302	0	0	0	1433	2021-08-26	0	\N	2021-08-29	2021-08-26	0	0	A	8601000.00	1746000.00	4000.00	0.00	0.00	\N	f	13100001	13100001	13100001	31000001	31000001	13100001	13100001	41000003	t	f	Admin	2021-05-24 04:54:53.091822-07	0001	0001
\.


--
-- Data for Name: sales_products_brand; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_products_brand (brand_id, brand_name, is_active, is_deleted, app_user_id, app_data_time) FROM stdin;
0002	Sm shop	t	f	Admin	2021-06-11 03:56:15.542728-07
0003	Fresh	t	f	Admin	2021-06-21 06:10:34.89155-07
0001	RFL	f	f	Admin	2021-05-24 04:54:03.151095-07
0004	boshundhara	f	f	Admin	2021-08-20 23:04:58.573222-07
\.


--
-- Data for Name: sales_products_group; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_products_group (group_id, group_name, is_active, is_deleted, app_user_id, app_data_time) FROM stdin;
0001	Electronic	t	f	Admin	2021-05-24 04:53:50.868522-07
0003	Fresh	t	f	Admin	2021-06-21 06:10:19.500859-07
0004	Megna	t	f	Admin	2021-06-21 06:10:50.568249-07
0002	Dolls	f	f	Admin	2021-06-11 03:55:55.015332-07
\.


--
-- Data for Name: sales_products_inventory_hist; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_products_inventory_hist (id, branch_code, product_id, inv_balance_date, product_total_stock, total_order_quantity, product_total_sales, total_stock_return, total_sales_return, product_total_damage, product_available_stock, product_purchase_rate, total_purchase_amount, total_purchase_balance, total_sales_amount, total_sales_balance, stock_return_amount, sales_return_amount, total_damage_amount, cost_of_good_sold, cost_of_good_sold_balance, total_discount_receive, total_discount_pay, app_user_id, app_data_time) FROM stdin;
2	100	000001	2021-05-24	5	0	2	0	0	0	3	5000.00	25000.00	25000.00	12000.00	12000.00	0.00	0.00	0.00	10000.00	10000.00	0.00	0.00	system	2021-06-10 02:58:22.592-07
3	100	000001	2021-05-25	1	0	0	0	0	0	4	5000.00	5000.00	30000.00	0.00	12000.00	0.00	0.00	0.00	0.00	10000.00	0.00	0.00	system	2021-06-10 02:58:22.592-07
4	100	000001	2021-06-10	5	0	1	0	0	0	8	5000.00	25000.00	55000.00	6000.00	18000.00	0.00	0.00	0.00	5000.00	15000.00	0.00	0.00	system	2021-06-10 02:58:22.592-07
6	100	000003	2021-06-26	1	0	0	0	0	0	1	14.00	14.00	14.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	system	2021-06-26 02:45:42.036312-07
7	100	000002	2021-06-11	1	0	1	0	0	0	0	18000.00	18000.00	18000.00	20000.00	20000.00	0.00	0.00	0.00	18000.00	18000.00	0.00	0.00	system	2021-06-26 02:45:42.036312-07
9	100	000005	2021-06-26	1	0	0	0	0	0	1	30.00	30.00	30.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	0.00	system	2021-06-26 02:45:42.036312-07
10	100	000002	2021-06-26	1	0	1	0	0	0	0	18000.00	18000.00	36000.00	20000.00	40000.00	0.00	0.00	0.00	18000.00	36000.00	0.00	0.00	system	2021-07-06 09:24:05.963588-07
15	100	000004	2021-04-08	0	0	1	0	0	0	-1	0.00	0.00	0.00	30.00	30.00	0.00	0.00	0.00	25.00	25.00	0.00	0.00	system	2021-07-06 09:41:16.895069-07
16	100	000004	2021-06-26	10	0	1	0	0	0	8	27.78	250.00	250.00	30.00	60.00	0.00	0.00	0.00	25.00	50.00	0.00	0.00	system	2021-07-06 09:41:16.895069-07
17	100	000004	2021-07-06	0	0	2	0	0	0	6	27.78	0.00	250.00	60.00	120.00	0.00	0.00	0.00	50.00	100.00	0.00	0.00	system	2021-07-06 09:41:16.895069-07
21	100	000001	2021-08-22	400	0	70	0	0	0	338	5000.00	2000000.00	2055000.00	420000.00	438000.00	0.00	0.00	0.00	350000.00	365000.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
24	100	000004	2021-08-13	100	0	2	0	0	0	104	25.16	2500.00	2750.00	60.00	180.00	0.00	0.00	0.00	50.00	150.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
25	100	000004	2021-08-15	0	0	1	0	0	0	103	25.16	0.00	2750.00	30.00	210.00	0.00	0.00	0.00	25.00	175.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
26	100	000004	2021-08-16	10	0	0	0	0	0	113	25.15	250.00	3000.00	0.00	210.00	0.00	0.00	0.00	0.00	175.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
27	100	000004	2021-08-21	100	0	10	0	0	0	203	25.08	2500.00	5500.00	300.00	510.00	0.00	0.00	0.00	250.00	425.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
28	100	000004	2021-08-22	100	0	11	1	5	0	296	25.05	2500.00	7986.00	330.00	690.00	14.00	150.00	0.00	275.00	700.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
30	100	000007	2021-08-22	10	0	0	1	0	0	9	20000.00	200000.00	180000.00	0.00	0.00	20000.00	0.00	0.00	0.00	0.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
31	100	000007	2021-08-23	200	0	3	0	0	0	206	20000.00	4000000.00	4180000.00	75000.00	75000.00	0.00	0.00	0.00	60000.00	60000.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
34	100	000006	2019-08-23	0	0	0	1	0	0	-1	0.00	0.00	-6000.00	0.00	0.00	6000.00	0.00	0.00	0.00	0.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
35	100	000006	2021-07-06	100	0	3	0	0	0	96	6060.61	600000.00	594000.00	24000.00	24000.00	0.00	0.00	0.00	18000.00	18000.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
36	100	000006	2021-07-07	0	0	1	0	0	0	95	6060.61	0.00	594000.00	8000.00	32000.00	0.00	0.00	0.00	6000.00	24000.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
37	100	000006	2021-08-06	0	0	0	0	20	0	115	6060.61	0.00	594000.00	0.00	32000.00	0.00	0.00	0.00	0.00	24000.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
38	100	000006	2021-08-13	0	0	2	0	0	0	113	6060.61	0.00	594000.00	16000.00	48000.00	0.00	0.00	0.00	12000.00	36000.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
39	100	000006	2021-08-14	1500	0	15	0	0	0	1598	6004.25	9000000.00	9594000.00	120000.00	168000.00	0.00	0.00	0.00	90000.00	126000.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
40	100	000006	2021-08-15	0	0	1	0	0	0	1597	6004.25	0.00	9594000.00	8000.00	176000.00	0.00	0.00	0.00	6000.00	132000.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
41	100	000006	2021-08-20	0	0	3	0	0	0	1594	6004.25	0.00	9594000.00	24000.00	200000.00	0.00	0.00	0.00	18000.00	150000.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
42	100	000006	2021-08-21	0	0	10	0	0	0	1584	6004.25	0.00	9594000.00	80000.00	280000.00	0.00	0.00	0.00	60000.00	210000.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
43	100	000006	2021-08-22	100	0	60	0	1170	0	2794	6004.00	600000.00	10194000.00	480000.00	-8600000.00	0.00	9360000.00	0.00	360000.00	570000.00	0.00	0.00	system	2021-08-23 02:47:06.888571-07
47	100	000003	2021-08-22	100	0	1	0	0	0	100	14.00	1400.00	1414.00	22.00	22.00	0.00	0.00	0.00	14.00	14.00	0.00	0.00	system	2021-08-26 02:06:50.852883-07
48	100	000003	2021-08-26	1	0	13	0	0	0	88	14.00	14.00	1428.00	286.00	308.00	0.00	0.00	0.00	182.00	196.00	0.00	0.00	system	2021-08-26 02:06:50.852883-07
49	100	000005	2021-08-22	600	0	30	0	5	0	576	30.00	18000.00	18030.00	1050.00	875.00	0.00	175.00	0.00	900.00	900.00	0.00	0.00	system	2021-08-26 02:06:50.852883-07
50	100	000005	2021-08-26	1	0	0	0	0	0	577	30.00	30.00	18060.00	0.00	875.00	0.00	0.00	0.00	0.00	900.00	0.00	0.00	system	2021-08-26 02:06:50.852883-07
51	100	000002	2021-08-22	100	0	6	0	0	0	94	18000.00	1800000.00	1836000.00	120000.00	160000.00	0.00	0.00	0.00	108000.00	144000.00	0.00	0.00	system	2021-08-26 02:06:50.852883-07
52	100	000002	2021-08-26	0	0	17	1	0	0	76	18000.00	0.00	1818000.00	340000.00	500000.00	18000.00	0.00	0.00	306000.00	450000.00	0.00	0.00	system	2021-08-26 02:06:50.852883-07
53	100	000008	2021-08-23	100	0	7	0	0	0	93	30.00	3000.00	3000.00	280.00	280.00	0.00	0.00	0.00	210.00	210.00	0.00	0.00	system	2021-08-26 02:06:50.852883-07
54	100	000008	2021-08-26	0	0	13	1	0	0	79	30.00	0.00	2980.00	520.00	800.00	20.00	0.00	0.00	390.00	600.00	0.00	0.00	system	2021-08-26 02:06:50.852883-07
55	100	000001	2021-08-23	0	0	1	0	0	0	337	5000.00	0.00	2055000.00	6000.00	444000.00	0.00	0.00	0.00	5000.00	370000.00	0.00	0.00	system	2021-08-26 02:06:50.852883-07
57	100	000004	2021-08-23	0	0	2	0	0	0	294	25.05	0.00	7986.00	60.00	750.00	0.00	0.00	0.00	50.00	750.00	0.00	0.00	system	2021-08-26 02:06:50.852883-07
58	100	000004	2021-08-26	0	0	3	0	0	0	291	25.05	0.00	7986.00	90.00	840.00	0.00	0.00	0.00	75.00	825.00	0.00	0.00	system	2021-08-26 02:06:50.852883-07
59	100	000001	2021-08-26	10	0	67	2	0	0	278	5000.00	50000.00	2101000.00	402000.00	846000.00	4000.00	0.00	0.00	335000.00	705000.00	0.00	0.00	system	2021-08-26 02:07:58.006464-07
\.


--
-- Data for Name: sales_products_inventory_status; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_products_inventory_status (id, branch_code, product_id, product_total_stock, total_order_quantity, product_total_sales, total_stock_return, total_sales_return, product_total_damage, product_available_stock, product_purchase_rate, last_stock_date, last_order_date, last_sale_date, last_stock_return_date, last_sales_return_date, last_damage_date, inv_balance_upto_date, total_purchase_amount, total_sales_amount, stock_return_amount, sales_return_amount, total_damage_amount, damage_receive_amount, cost_of_good_sold, total_discount_receive, total_discount_pay, app_user_id, app_data_time, is_balance_updated) FROM stdin;
15	100	000007	200	0	23	0	16	0	177	0.00	2021-08-23	\N	2021-08-27	\N	2021-08-27	\N	2021-08-23	4000000.00	25000.00	0.00	0.00	0.00	0.00	140000.00	0.00	0.00	Admin	2021-08-22 22:49:49.6501-07	f
9	100	000003	102	14	24	0	0	0	78	0.00	2021-08-30	2021-08-26	2021-08-28	\N	2021-08-28	\N	2021-08-13	1428.00	528.00	0.00	0.00	0.00	0.00	350.00	0.00	0.00	Admin	2021-08-22 00:02:21.47914-07	f
10	100	000002	101	26	27	1	4	0	73	0.00	2021-08-26	2021-08-26	2021-08-28	2021-08-26	2021-08-28	\N	2021-08-14	1800000.00	420000.00	18000.00	0.00	0.00	0.00	432000.00	0.00	0.00	Admin	2021-08-22 00:05:11.855227-07	f
14	100	000006	100	16	30	1	0	0	69	0.00	2021-08-22	2021-08-28	2021-08-30	2019-08-23	2021-08-30	\N	2021-08-22	594000.00	240000.00	6000.00	0.00	0.00	0.00	180000.00	0.00	0.00	Admin	2021-08-22 02:44:14.408237-07	f
16	100	000008	100	36	41	1	0	0	58	0.00	2021-08-23	2021-08-30	2021-08-30	2021-08-26	2021-08-28	\N	2021-08-26	2980.00	1640.00	20.00	0.00	0.00	0.00	1380.00	0.00	0.00	Admin	2021-08-23 02:55:40.57085-07	f
13	100	000005	101	10	7	0	0	0	94	0.00	2021-08-26	2021-08-30	2021-08-30	\N	2021-08-22	\N	2021-08-26	3030.00	245.00	0.00	0.00	0.00	0.00	210.00	0.00	0.00	Admin	2021-08-22 02:16:33.253703-07	f
11	100	000001	410	206	131	2	6	0	277	0.00	2021-08-26	2021-08-28	2021-08-29	2021-08-26	2021-08-29	\N	2021-08-26	2046000.00	750000.00	4000.00	0.00	0.00	0.00	625000.00	0.00	0.00	Admin	2021-08-22 00:07:53.464737-07	f
12	100	000004	100	12	17	0	4	0	83	0.00	2021-08-22	2021-08-28	2021-08-28	\N	2021-08-27	\N	2021-08-26	2500.00	330.00	0.00	0.00	0.00	0.00	350.00	0.00	0.00	Admin	2021-08-22 00:10:32.505824-07	f
\.


--
-- Data for Name: sales_products_price_type; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_products_price_type (id, tran_type_code, product_price) FROM stdin;
\.


--
-- Data for Name: sales_purchase_bill; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_purchase_bill (id, purchase_ord_no, bill_date, purchase_date, supllier_id, bill_id, submission_date, bill_amount, payment_amount, pending_amount, remarks, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_purchase_order_dtl; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_purchase_order_dtl (id, branch_code, purchase_ord_no, purchase_type, purchase_date, product_id, unit_price, g_total_price, supplier_id, total_pur_qnty, discount_amount, voucher_number, show_room, comments, app_user_id, status) FROM stdin;
1	100	ST00000071	\N	2021-08-13	000005	30.00	30.00	0	1	0.00	\N	\N	\N	Admin	J
2	100	ST00000071	\N	2021-08-13	000005	30.00	30.00	0	1	0.00	\N	\N	\N	Admin	J
5	100	ST00000090	\N	2021-08-21	000006	6000.00	6000.00	0	1	0.00	\N	\N	\N	Admin	\N
6	100	ST00000090	\N	2021-08-21	000006	6000.00	6000.00	0	1	0.00	\N	\N	\N	Admin	\N
3	100	ST00000073	\N	2021-08-13	000001	5000.00	5000.00	0	1	0.00	\N	\N	\N	Admin	J
4	100	ST00000073	\N	2021-08-13	000001	5000.00	5000.00	0	1	0.00	\N	\N	\N	Admin	J
\.


--
-- Data for Name: sales_purchase_order_dtl_temp; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_purchase_order_dtl_temp (id, product_id, origin, pur_qnty, unit_price, total_price, app_user_id, branch_code, discount_amount) FROM stdin;
\.


--
-- Data for Name: sales_purchase_order_mst; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_purchase_order_mst (id, branch_code, purchase_ord_no, purchase_type, purchase_date, supplier_id, unit_price, g_total_price, product_id, origin, total_pur_qnty, app_user_id, comments, show_room, voucher_number, discount_amount, due_amount, total_pay, payment_comments, status) FROM stdin;
\.


--
-- Data for Name: sales_purchasemasterauthq; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_purchasemasterauthq (id, branch_code, purchase_ord_no, purchase_type, purchase_date, supplier_id, discount_amount, unit_price, g_total_price, product_id, origin, total_pur_qnty, voucher_number, show_room, comments, app_user_id, due_amount, total_pay, payment_comments, status) FROM stdin;
1	100	ST00000071	CS	2021-08-13	0	0.00	0.00	60.00	0	0	2	\N	1		Admin	0.00	0.00	\N	J
3	100	ST00000090	CS	2021-08-21	0	0.00	0.00	12000.00	0	0	2	\N	1		Admin	0.00	0.00	\N	W
2	100	ST00000073	CS	2021-08-13	0	0.00	0.00	10000.00	0	0	2	\N	1		Admin	0.00	0.00	\N	J
\.


--
-- Data for Name: sales_sales_details; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_sales_details (id, branch_code, center_code, invoice_number, client_id, product_id, serial_no, service_type, service_start_date, service_end_date, service_card_no, purchase_rate, product_price, quantity, returned_quantity, total_price, profit_amount, discount_rate, discount_amount, status, comments, app_user_id, app_data_time) FROM stdin;
1	100	4000001	SL000001	23	000001	1	\N	\N	\N	\N	5000.00	6000.00	1	0	6000.00	1000.00	0.00	0.00	I		Admin	2021-05-24 05:02:17.071-07
2	100	4000001	SL000002	23	000001	1	\N	\N	\N	\N	5000.00	6000.00	1	0	6000.00	1000.00	0.00	0.00	I		Admin	2021-05-24 05:06:34.953-07
3	100	4000001	SL000003	23	000001	1	\N	\N	\N	\N	5000.00	6000.00	1	0	6000.00	1000.00	0.00	0.00	I		Admin	2021-06-10 02:57:25.877-07
9	100	4000001	SL000004	00000003	000002	1	\N	\N	\N	\N	18000.00	20000.00	1	0	20000.00	2000.00	0.00	0.00	I		Admin	2021-06-11 05:14:56.065098-07
18	100	4000001	SL000005	00000003	000002	1	\N	\N	\N	\N	18000.00	20000.00	1	0	20000.00	2000.00	0.00	0.00	I		Admin	2021-06-26 03:19:26.047432-07
25	100	4000001	SL000006	00000003	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	I		Admin	2021-06-26 03:59:16.924945-07
26	100	4000001	SL000007	23	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	C		Admin	2021-07-06 09:16:02.485386-07
27	100	4000001	SL000008	23	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	I		Admin	2021-07-06 09:37:07.561065-07
28	100	4000001	SL000009	23	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	I		Admin	2021-07-06 09:39:42.466846-07
29	100	4000001	SL000010	23	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	I		Admin	2021-07-06 09:41:07.379616-07
30	100	4000001	SL000011	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	2	0	16000.00	4000.00	0.00	0.00	I		Admin	2021-07-06 10:41:27.548162-07
34	100	0	SL000012	9999999999999	000006	1	\N	\N	\N	\N	6000.00	8000.00	1	0	8000.00	2000.00	0.00	0.00	I		Admin	2021-07-06 10:46:00.187395-07
36	100	4000001	SL000014	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	1	0	8000.00	2000.00	0.00	0.00	I		Admin	2021-07-07 09:44:44.5976-07
38	100	4000001	SL000016	00000003	000005	1	\N	\N	\N	\N	30.00	35.00	2	0	70.00	10.00	0.00	0.00	I		Admin	2021-08-13 02:27:52.432185-07
39	100	4000001	SL000017	23	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	I		Admin	2021-08-13 02:38:20.431668-07
40	100	4000001	SL000018	00000003	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	I		Admin	2021-08-13 02:44:53.333008-07
42	100	4000001	SL000020	00000003	000006	1	\N	\N	\N	\N	6000.00	8000.00	2	0	16000.00	4000.00	0.00	0.00	I		Admin	2021-08-13 06:24:03.82957-07
46	100	4000001	SL000024	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	10	0	80000.00	20000.00	0.00	0.00	I		Admin	2021-08-14 00:10:35.978732-07
47	100	4000001	SL000025	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	5	0	40000.00	10000.00	0.00	0.00	I		Admin	2021-08-14 00:13:18.338246-07
50	100	4000001	SL000028	00000003	000001	1	\N	\N	\N	\N	5000.00	6000.00	10	0	60000.00	10000.00	0.00	0.00	I		Admin	2021-08-14 02:39:26.497909-07
54	100	4000001	SL000032	00000003	000006	1	\N	\N	\N	\N	6000.00	8000.00	1	0	8000.00	2000.00	0.00	0.00	I		Admin	2021-08-15 05:09:52.424823-07
56	100	4000001	SL000034	23	000003	1	\N	\N	\N	\N	14.00	22.00	1	0	22.00	8.00	0.00	0.00	I		Admin	2021-08-15 23:20:11.661503-07
57	100	4000001	SL000035	23	000002	1	\N	\N	\N	\N	18000.00	20000.00	2	0	40000.00	4000.00	0.00	0.00	I		Admin	2021-08-15 23:20:39.456595-07
60	100	4000001	SL000038	00000005	000001	1	\N	\N	\N	\N	5000.00	6000.00	5	0	30000.00	5000.00	0.00	0.00	I		Admin	2021-08-18 21:58:29.506147-07
61	100	4000001	SL000039	00000005	000001	1	\N	\N	\N	\N	5000.00	6000.00	5	0	30000.00	5000.00	0.00	0.00	I		Admin	2021-08-18 21:59:58.169774-07
67	100	4000001	SL000045	23	000001	1	\N	\N	\N	\N	5000.00	6000.00	6	0	36000.00	6000.00	0.00	0.00	I		Admin	2021-08-18 22:14:20.374808-07
70	100	4000001	SL000048	00000003	000001	1	\N	\N	\N	\N	5000.00	6000.00	10	0	60000.00	10000.00	0.00	0.00	I		Admin	2021-08-20 05:14:44.627518-07
71	100	4000001	SL000049	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	2	0	16000.00	4000.00	0.00	0.00	I		Admin	2021-08-20 05:16:12.879549-07
37	100	4000001	SL000015	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	1	0	6000.00	1000.00	0.00	0.00	I		Admin	2021-08-13 02:20:25.470538-07
43	100	4000001	SL000021	00000004	000002	1	\N	\N	\N	\N	18000.00	20000.00	1	0	20000.00	2000.00	0.00	0.00	I		Admin	2021-08-13 06:36:40.459588-07
48	100	4000001	SL000026	00000004	000003	1	\N	\N	\N	\N	14.00	22.00	3	0	66.00	24.00	0.00	0.00	I		Admin	2021-08-14 00:18:43.066331-07
49	100	4000001	SL000027	00000004	000005	1	\N	\N	\N	\N	30.00	35.00	5	0	175.00	25.00	0.00	0.00	I		Admin	2021-08-14 00:23:37.408224-07
51	100	4000001	SL000029	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	1	0	6000.00	1000.00	0.00	0.00	I		Admin	2021-08-14 05:49:22.385101-07
52	100	4000001	SL000030	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	3	0	18000.00	3000.00	0.00	0.00	I		Admin	2021-08-15 04:48:17.857205-07
53	100	4000001	SL000031	00000004	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	I		Admin	2021-08-15 05:04:04.624779-07
55	100	4000001	SL000033	00000004	000002	1	\N	\N	\N	\N	18000.00	20000.00	1	0	20000.00	2000.00	0.00	0.00	I		Admin	2021-08-15 05:24:46.914411-07
58	100	4000001	SL000036	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	1	0	6000.00	1000.00	0.00	0.00	I		Admin	2021-08-17 02:45:24.655131-07
59	100	4000001	SL000037	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	100	0	600000.00	100000.00	0.00	0.00	I		Admin	2021-08-18 21:55:14.684309-07
41	100	4000001	SL000019	23	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	C		Admin	2021-08-13 02:51:50.699446-07
44	100	4000001	SL000022	23	000003	1	\N	\N	\N	\N	14.00	22.00	1	0	22.00	8.00	0.00	0.00	C		Admin	2021-08-13 06:42:19.525401-07
45	100	4000001	SL000023	23	000002	1	\N	\N	\N	\N	18000.00	20000.00	1	0	20000.00	2000.00	0.00	0.00	C		Admin	2021-08-13 22:35:18.922602-07
35	100	0	SL000013	9999999999999	000006	1	\N	\N	\N	\N	6000.00	8000.00	1	0	8000.00	2000.00	0.00	0.00	C		Admin	2021-07-06 10:46:36.133426-07
62	100	4000001	SL000040	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	7	0	42000.00	7000.00	0.00	0.00	I		Admin	2021-08-18 22:03:22.949299-07
63	100	4000001	SL000041	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	3	0	18000.00	3000.00	0.00	0.00	I		Admin	2021-08-18 22:04:44.110096-07
64	100	4000001	SL000042	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	5	0	30000.00	5000.00	0.00	0.00	I		Admin	2021-08-18 22:06:40.751041-07
65	100	4000001	SL000043	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	5	0	30000.00	5000.00	0.00	0.00	I		Admin	2021-08-18 22:06:52.941934-07
66	100	4000001	SL000044	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	5	0	30000.00	5000.00	0.00	0.00	I		Admin	2021-08-18 22:08:47.259341-07
68	100	4000001	SL000046	00000004	000006	1	\N	\N	\N	\N	6000.00	8000.00	1	0	8000.00	2000.00	0.00	0.00	I		Admin	2021-08-20 05:02:13.518409-07
69	100	4000001	SL000047	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	1	0	6000.00	1000.00	0.00	0.00	I		Admin	2021-08-20 05:10:13.65358-07
72	100	4000001	SL000050	00000005	000006	1	\N	\N	\N	\N	6000.00	8000.00	10	0	80000.00	20000.00	0.00	0.00	I		Admin	2021-08-21 00:24:30.615783-07
74	100	4000001	SL000051	23	000001	1	\N	\N	\N	\N	5000.00	6000.00	1	0	6000.00	1000.00	0.00	0.00	C		Admin	2021-08-21 21:57:43.07523-07
75	100	4000001	SL000052	00000003	000001	1	\N	\N	\N	\N	5000.00	6000.00	65	65	390000.00	65000.00	0.00	0.00	R		Admin	2021-08-21 22:27:25.519366-07
76	100	4000001	SL000053	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	50	500	400000.00	100000.00	0.00	0.00	P		Admin	2021-08-21 22:38:51.504223-07
77	100	4000001	SL000054	00000006	000005	1	\N	\N	\N	\N	30.00	35.00	10	0	350.00	50.00	0.00	0.00	I		Admin	2021-08-21 23:21:46.113107-07
78	100	4000001	SL000055	00000006	000004	1	\N	\N	\N	\N	25.00	30.00	10	0	300.00	50.00	0.00	0.00	I		Admin	2021-08-21 23:24:51.105337-07
79	100	4000001	SL000056	00000003	000006	1	\N	\N	\N	\N	6000.00	8000.00	10	0	80000.00	20000.00	0.00	0.00	I		Admin	2021-08-21 23:38:17.569211-07
80	100	4000001	SL000057	23	000005	1	\N	\N	\N	\N	30.00	35.00	10	0	350.00	50.00	0.00	0.00	I		Admin	2021-08-21 23:58:17.683021-07
81	100	4000001	SL000058	23	000003	1	\N	\N	\N	\N	14.00	22.00	1	0	22.00	8.00	0.00	0.00	I		Admin	2021-08-22 00:03:37.791372-07
82	100	4000001	SL000059	00000005	000002	1	\N	\N	\N	\N	18000.00	20000.00	1	0	20000.00	2000.00	0.00	0.00	I		Admin	2021-08-22 00:06:11.713135-07
83	100	4000001	SL000060	23	000002	1	\N	\N	\N	\N	18000.00	20000.00	5	0	100000.00	10000.00	0.00	0.00	I		Admin	2021-08-22 00:07:10.103548-07
84	100	4000001	SL000061	00000003	000001	1	\N	\N	\N	\N	5000.00	6000.00	5	0	30000.00	5000.00	0.00	0.00	I		Admin	2021-08-22 00:08:50.163917-07
85	100	4000001	SL000062	23	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	I		Admin	2021-08-22 00:11:34.562894-07
73	100	4000001	SL000050	00000005	000004	2	\N	\N	\N	\N	25.00	30.00	10	5	300.00	50.00	0.00	0.00	P		Admin	2021-08-21 00:24:30.615783-07
86	100	4000001	SL000063	00000003	000005	1	\N	\N	\N	\N	30.00	35.00	10	5	350.00	50.00	0.00	0.00	P		Admin	2021-08-22 02:18:41.819681-07
87	100	4000001	SL000064	00000005	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	I		Admin	2021-08-22 21:24:49.469901-07
88	100	4000001	SL000065	00000005	000004	1	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	I		Admin	2021-08-22 21:32:48.238086-07
89	100	4000001	SL000066	23	000001	1	\N	\N	\N	\N	5000.00	6000.00	1	0	6000.00	1000.00	0.00	0.00	I		Admin	2021-08-22 22:42:01.534673-07
90	100	4000001	SL000067	00000004	000007	1	\N	\N	\N	\N	20000.00	25000.00	3	0	75000.00	15000.00	0.00	0.00	I		Admin	2021-08-22 22:52:20.221662-07
91	100	4000001	SL000068	00000005	000008	1	\N	\N	\N	\N	30.00	40.00	4	0	160.00	40.00	0.00	0.00	I		Admin	2021-08-23 02:59:52.572537-07
92	100	4000001	SL000069	00000003	000008	1	\N	\N	\N	\N	30.00	40.00	3	0	120.00	30.00	0.00	0.00	I		Admin	2021-08-23 03:04:48.274191-07
93	100	4000001	SL000070	23	000001	1	\N	\N	\N	\N	5000.00	6000.00	40	0	240000.00	40000.00	0.00	0.00	I		Admin	2021-08-25 21:59:14.769023-07
94	100	4000001	SL000071	23	000001	1	\N	\N	\N	\N	5000.00	6000.00	20	0	120000.00	20000.00	0.00	0.00	I		Admin	2021-08-25 21:59:30.661836-07
95	100	4000001	SL000072	00000003	000001	1	\N	\N	\N	\N	5000.00	6000.00	7	0	42000.00	7000.00	0.00	0.00	I		Admin	2021-08-25 22:06:59.996485-07
96	100	4000001	SL000073	23	000008	1	\N	\N	\N	\N	30.00	40.00	13	0	520.00	130.00	0.00	0.00	I		Admin	2021-08-25 22:16:58.719488-07
97	100	4000001	SL000074	00000004	000002	1	\N	\N	\N	\N	18000.00	20000.00	11	0	220000.00	22000.00	0.00	0.00	I		Admin	2021-08-25 22:21:21.729147-07
98	100	4000001	SL000075	00000005	000004	1	\N	\N	\N	\N	25.00	30.00	3	0	90.00	15.00	0.00	0.00	I		Admin	2021-08-25 22:28:08.27502-07
99	100	4000001	SL000076	23	000003	1	\N	\N	\N	\N	14.00	22.00	9	0	198.00	72.00	0.00	0.00	I		Admin	2021-08-25 22:45:36.794057-07
100	100	4000001	SL000077	00000004	000003	1	\N	\N	\N	\N	14.00	22.00	4	0	88.00	32.00	0.00	0.00	I		Admin	2021-08-25 22:54:10.842757-07
102	100	4000001	SL000079	00000005	000006	1	\N	\N	\N	\N	6000.00	8000.00	4	0	32000.00	8000.00	0.00	0.00	I		Admin	2021-08-26 02:13:47.021473-07
103	100	4000001	SL000080	23	000004	1	\N	\N	\N	\N	25.00	30.00	2	0	60.00	10.00	0.00	0.00	I		Admin	2021-08-26 02:14:29.946524-07
104	100	4000001	SL000081	00000005	000008	1	\N	\N	\N	\N	30.00	40.00	5	0	200.00	50.00	0.00	0.00	C		Admin	2021-08-26 02:15:36.888639-07
105	100	4000001	SL000082	00000003	000007	1	\N	\N	\N	\N	20000.00	25000.00	10	2	250000.00	50000.00	0.00	0.00	P		Admin	2021-08-26 02:17:49.467669-07
106	100	4000001	SL000083	00000004	000008	1	\N	\N	\N	\N	30.00	40.00	3	0	120.00	30.00	0.00	0.00	I		Admin	2021-08-26 02:30:37.467411-07
107	100	4000001	SL000084	00000004	000008	1	\N	\N	\N	\N	30.00	40.00	2	0	80.00	20.00	0.00	0.00	I		Admin	2021-08-26 02:30:55.254461-07
108	100	4000001	SL000085	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	1	0	8000.00	2000.00	0.00	0.00	I		Admin	2021-08-26 02:35:49.19233-07
109	100	4000001	SL000086	00000003	000006	1	\N	\N	\N	\N	6000.00	8000.00	1	0	8000.00	2000.00	0.00	0.00	I		Admin	2021-08-26 02:37:23.575036-07
110	100	4000001	SL000087	00000003	000001	1	\N	\N	\N	\N	5000.00	6000.00	2	0	12000.00	2000.00	0.00	0.00	I		Admin	2021-08-26 02:47:03.040036-07
111	100	4000001	SL000088	00000003	000007	1	\N	\N	\N	\N	20000.00	25000.00	1	0	25000.00	5000.00	0.00	0.00	I		Admin	2021-08-26 02:50:14.339851-07
112	100	4000001	SL000089	23	000004	1	\N	\N	\N	\N	25.00	30.00	2	0	60.00	10.00	0.00	0.00	I		Admin	2021-08-26 02:52:43.702033-07
113	100	4000001	SL000090	00000003	000008	1	\N	\N	\N	\N	30.00	40.00	1	0	40.00	10.00	0.00	0.00	I		Admin	2021-08-26 03:46:38.720135-07
136	100	4000001	SL000107	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	3	0	24000.00	6000.00	0.00	0.00	I		Admin	2021-08-28 02:59:41.521587-07
137	100	4000001	SL000108	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	3	0	24000.00	6000.00	0.00	0.00	I		Admin	2021-08-28 02:59:43.422731-07
114	100	4000001	SL000091	23	000007	1	\N	\N	\N	\N	20000.00	25000.00	10	3	250000.00	50000.00	0.00	0.00	P		Admin	2021-08-26 22:04:48.501549-07
138	100	4000001	SL000109	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	2	1	16000.00	4000.00	0.00	0.00	P		Admin	2021-08-28 03:34:47.375014-07
115	100	4000001	SL000092	00000005	000001	1	\N	\N	\N	\N	5000.00	6000.00	10	3	60000.00	10000.00	0.00	0.00	P		Admin	2021-08-26 22:15:21.270818-07
116	100	4000001	SL000093	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	10	0	80000.00	20000.00	0.00	0.00	I		Admin	2021-08-26 23:55:16.342569-07
139	100	4000001	SL000110	00000005	000001	1	\N	\N	\N	\N	5000.00	6000.00	3	0	18000.00	3000.00	0.00	0.00	I		Admin	2021-08-28 03:36:13.250284-07
117	100	4000001	SL000094	00000005	000007	1	\N	\N	\N	\N	20000.00	25000.00	10	6	250000.00	50000.00	0.00	0.00	P		Admin	2021-08-26 23:57:04.983697-07
118	100	4000001	SL000095	23	000003	1	\N	\N	\N	\N	14.00	22.00	10	0	220.00	80.00	0.00	0.00	I		Admin	2021-08-26 23:59:14.254652-07
140	100	4000001	SL000111	00000005	000001	1	\N	\N	\N	\N	5000.00	6000.00	9	0	54000.00	9000.00	0.00	0.00	I		Admin	2021-08-28 03:36:25.761969-07
119	100	4000001	SL000096	00000005	000004	1	\N	\N	\N	\N	25.00	30.00	10	3	300.00	50.00	0.00	0.00	P		Admin	2021-08-26 23:59:50.663307-07
120	100	4000001	SL000097	00000004	000002	1	\N	\N	\N	\N	18000.00	20000.00	5	0	100000.00	10000.00	0.00	0.00	I		Admin	2021-08-27 02:13:31.153193-07
141	100	4000001	SL000112	00000005	000001	1	\N	\N	\N	\N	5000.00	6000.00	10	0	60000.00	10000.00	0.00	0.00	I		Admin	2021-08-28 03:36:40.623743-07
121	100	4000001	SL000098	00000005	000001	1	\N	\N	\N	\N	5000.00	6000.00	1	0	6000.00	1000.00	0.00	0.00	I		Admin	2021-08-27 22:46:27.39735-07
122	100	4000001	SL000099	00000003	000001	1	\N	\N	\N	\N	5000.00	6000.00	4	0	24000.00	4000.00	0.00	0.00	I		Admin	2021-08-27 22:53:15.910317-07
123	100	4000001	SL000100	00000003	000001	1	\N	\N	\N	\N	5000.00	6000.00	3	0	18000.00	3000.00	0.00	0.00	I		Admin	2021-08-27 22:53:52.60427-07
142	100	4000001	SL000113	00000004	000008	1	\N	\N	\N	\N	30.00	40.00	4	0	160.00	40.00	0.00	0.00	I		Admin	2021-08-28 03:37:31.648953-07
101	100	4000001	SL000078	00000005	000002	1	\N	\N	\N	\N	18000.00	20000.00	6	1	120000.00	12000.00	0.00	0.00	P		Admin	2021-08-25 23:07:24.938994-07
125	100	4000001	SL000101	00000005	000004	1	\N	\N	\N	\N	25.00	30.00	5	0	150.00	25.00	0.00	0.00	I		Admin	2021-08-28 00:23:19.161784-07
128	100	4000001	SL000101	00000005	000004	4	\N	\N	\N	\N	25.00	30.00	1	0	30.00	5.00	0.00	0.00	I		Admin	2021-08-28 00:23:19.161784-07
129	100	4000001	SL000102	00000005	000006	1	\N	\N	\N	\N	6000.00	8000.00	4	0	32000.00	8000.00	0.00	0.00	I		Admin	2021-08-28 00:36:57.293422-07
130	100	4000001	SL000103	23	000008	1	\N	\N	\N	\N	30.00	40.00	5	0	200.00	50.00	0.00	0.00	I		Admin	2021-08-28 00:37:43.137545-07
131	100	4000001	SL000103	23	000006	2	\N	\N	\N	\N	6000.00	8000.00	1	0	8000.00	2000.00	0.00	0.00	I		Admin	2021-08-28 00:37:43.137545-07
132	100	4000001	SL000104	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	5	0	30000.00	5000.00	0.00	0.00	I		Admin	2021-08-28 00:38:29.009408-07
133	100	4000001	SL000105	00000004	000001	1	\N	\N	\N	\N	5000.00	6000.00	2	0	12000.00	2000.00	0.00	0.00	I		Admin	2021-08-28 00:38:43.675954-07
127	100	4000001	SL000101	00000005	000001	3	\N	\N	\N	\N	5000.00	6000.00	20	10	120000.00	20000.00	0.00	0.00	P		Admin	2021-08-28 00:23:19.161784-07
134	100	4000001	SL000106	23	000002	1	\N	\N	\N	\N	18000.00	20000.00	1	0	20000.00	2000.00	0.00	0.00	I		Admin	2021-08-28 00:46:11.892077-07
126	100	4000001	SL000101	00000005	000008	2	\N	\N	\N	\N	30.00	40.00	2	1	80.00	20.00	0.00	0.00	P		Admin	2021-08-28 00:23:19.161784-07
144	100	4000001	SL000115	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	1	0	8000.00	2000.00	0.00	0.00	I		Admin	2021-08-28 03:51:26.400951-07
145	100	4000001	SL000116	00000005	000003	1	\N	\N	\N	\N	14.00	22.00	2	1	44.00	16.00	0.00	0.00	P		Admin	2021-08-28 03:56:25.467273-07
146	100	4000001	SL000117	00000005	000001	1	\N	\N	\N	\N	5000.00	6000.00	5	3	30000.00	5000.00	0.00	0.00	P		Admin	2021-08-28 21:26:04.160421-07
147	100	4000001	SL000118	00000003	000008	1	\N	\N	\N	\N	30.00	40.00	2	0	80.00	20.00	0.00	0.00	I		Admin	2021-08-28 21:26:49.914423-07
148	100	4000001	SL000119	00000003	000005	1	\N	\N	\N	\N	30.00	35.00	1	0	35.00	5.00	0.00	0.00	I		Admin	2021-08-28 21:27:57.333934-07
143	100	4000001	SL000114	00000003	000006	1	\N	\N	\N	\N	6000.00	8000.00	1	1	8000.00	2000.00	0.00	0.00	R		Admin	2021-08-28 03:51:07.805169-07
149	100	4000001	SL000120	00000005	000008	1	\N	\N	\N	\N	30.00	40.00	1	0	40.00	10.00	0.00	0.00	I		Admin	2021-08-29 21:11:00.052477-07
150	100	4000001	SL000121	23	000006	1	\N	\N	\N	\N	6000.00	8000.00	1	0	8000.00	2000.00	0.00	0.00	I		Admin	2021-08-29 21:55:13.685888-07
151	100	4000001	SL000122	00000005	000008	1	\N	\N	\N	\N	30.00	40.00	2	0	80.00	20.00	0.00	0.00	I		Admin	2021-08-29 21:55:25.388035-07
152	100	4000001	SL000123	00000003	000005	1	\N	\N	\N	\N	30.00	35.00	1	0	35.00	5.00	0.00	0.00	I		Admin	2021-08-29 22:20:53.771379-07
\.


--
-- Data for Name: sales_sales_details_temp; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_sales_details_temp (id, details_branch_code, invoice_number, product_id, product_bar_code, product_name, product_model, sales_account_number, serial_no, service_type, service_start_date, service_end_date, service_card_no, product_price, quantity, total_price, profit_amount, discount_rate, discount_amount, status, comments, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_sales_master; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_sales_master (id, branch_code, center_code, invoice_number, order_number, invoice_date, tran_type_code, tran_batch_number, customer_id, customer_name, customer_phone, customer_address, employee_id, payment_document, total_quantity, returned_quantity, returned_amount, total_bill_amount, bill_amount, pay_amount, due_amount, advance_pay, total_discount_rate, total_discount_amount, invoice_discount, sms_notification, email_notification, status, invoice_comments, latitude, longitude, cancel_by, cancel_on, app_user_id, app_data_time) FROM stdin;
1	100	4000001	SL000001	\N	2021-05-24	000008	2	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	6000.00	6000.00	5000.00	1000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-05-24 05:02:17.071-07
2	100	4000001	SL000002	\N	2021-05-24	000008	3	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	6000.00	6000.00	0.00	6000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-05-24 05:06:34.953-07
3	100	4000001	SL000003	\N	2021-06-10	000008	2	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	6000.00	5500.00	2000.00	4000.00	0.00	0.00	500.00	500.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-06-10 02:57:25.877-07
4	100	4000001	SL000004	\N	2021-06-11	000008	2	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		1	0	0.00	20000.00	20000.00	0.00	20000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-06-11 05:14:56.065098-07
5	100	4000001	SL000005	\N	2021-06-26	000008	2	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		1	0	0.00	20000.00	20000.00	200.00	19800.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-06-26 03:19:26.047432-07
6	100	4000001	SL000006	\N	2021-06-26	000008	4	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		1	0	0.00	30.00	30.00	30.00	0.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-06-26 03:59:16.924945-07
7	100	4000001	SL000007	OR000001	2021-07-06	000008	1	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000	OR000001	1	0	0.00	30.00	30.00	30.00	0.00	0.00	0.00	0.00	0.00	\N	\N	C	\N	\N	\N	Admin	2021-07-06	Admin	2021-07-06 09:16:02.485386-07
8	100	4000001	SL000008	\N	2021-07-06	000008	2	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	30.00	30.00	0.00	30.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-07-06 09:37:07.561065-07
9	100	4000001	SL000009	\N	2021-07-06	000008	3	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	30.00	30.00	0.00	30.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-07-06 09:39:42.466846-07
10	100	4000001	SL000010	\N	2021-04-08	000008	1	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	30.00	30.00	0.00	30.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-07-06 09:41:07.379616-07
11	100	4000001	SL000011	\N	2021-07-06	000008	5	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		2	0	0.00	16000.00	16000.00	10000.00	6000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-07-06 10:41:27.548162-07
13	100	0	SL000012	\N	2021-07-06	000008	6	9999999999999	Walk-In Customer	9999999999999	Velanagor, Narsingdi	1000000		1	0	0.00	8000.00	8000.00	8000.00	0.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-07-06 10:46:00.187395-07
15	100	4000001	SL000014	\N	2021-07-07	000008	1	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	8000.00	8000.00	7000.00	1000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-07-07 09:44:44.5976-07
24	100	4000001	SL000023	\N	2021-08-14	000008	2	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	20000.00	20000.00	0.00	20000.00	0.00	0.00	0.00	0.00	\N	\N	C	\N	\N	\N	Admin	2021-08-26	Admin	2021-08-13 22:35:18.922602-07
17	100	4000001	SL000016	\N	2021-08-13	000008	3	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		2	0	0.00	70.00	70.00	0.00	70.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-13 02:27:52.432185-07
18	100	4000001	SL000017	\N	2021-08-13	000008	5	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	30.00	30.00	0.00	30.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-13 02:38:20.431668-07
19	100	4000001	SL000018	\N	2021-08-13	000008	6	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		1	0	0.00	30.00	30.00	0.00	30.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-13 02:44:53.333008-07
21	100	4000001	SL000020	\N	2021-08-13	000008	10	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		2	0	0.00	16000.00	16000.00	0.00	16000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-13 06:24:03.82957-07
25	100	4000001	SL000024	\N	2021-08-14	000008	6	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		10	0	0.00	80000.00	80000.00	0.00	80000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-14 00:10:35.978732-07
26	100	4000001	SL000025	\N	2021-08-14	000008	8	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		5	0	0.00	40000.00	40000.00	0.00	40000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-14 00:13:18.338246-07
29	100	4000001	SL000028	\N	2021-08-14	000008	14	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		10	0	0.00	60000.00	60000.00	0.00	60000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-14 02:39:26.497909-07
14	100	0	SL000013	\N	2021-07-06	000008	7	9999999999999	Rajib Pradhan	01749195756	Velanagor, Narsingdi	1000000		1	0	0.00	8000.00	7500.00	7500.00	500.00	0.00	0.00	500.00	500.00	\N	\N	C	\N	\N	\N	Admin	2021-08-22	Admin	2021-07-06 10:46:36.133426-07
20	100	4000001	SL000019	\N	2021-08-13	000008	8	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	30.00	30.00	0.00	30.00	0.00	0.00	0.00	0.00	\N	\N	C	\N	\N	\N	Admin	2021-08-23	Admin	2021-08-13 02:51:50.699446-07
23	100	4000001	SL000022	\N	2021-08-13	000008	12	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	22.00	22.00	0.00	22.00	0.00	0.00	0.00	0.00	\N	\N	C	\N	\N	\N	Admin	2021-08-26	Admin	2021-08-13 06:42:19.525401-07
33	100	4000001	SL000032	\N	2021-08-15	000008	3	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		1	0	0.00	8000.00	8000.00	0.00	8000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-15 05:09:52.424823-07
35	100	4000001	SL000034	\N	2021-08-16	000008	3	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	22.00	22.00	0.00	22.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-15 23:20:11.661503-07
36	100	4000001	SL000035	\N	2021-08-16	000008	4	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		2	0	0.00	40000.00	40000.00	0.00	40000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-15 23:20:39.456595-07
16	100	4000001	SL000015	\N	2021-08-13	000008	1	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		1	0	0.00	6000.00	6000.00	0.00	6000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-13 02:20:25.470538-07
22	100	4000001	SL000021	\N	2021-08-13	000008	11	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		1	0	0.00	20000.00	20000.00	0.00	20000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-13 06:36:40.459588-07
39	100	4000001	SL000038	OR000006	2021-08-19	000008	2	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000006	5	0	0.00	30000.00	30000.00	0.00	30000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-18 21:58:29.506147-07
41	100	4000001	SL000040	OR000008	2021-08-19	000008	4	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000008	7	0	0.00	42000.00	42000.00	0.00	42000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-18 22:03:22.949299-07
40	100	4000001	SL000039	OR000006	2021-08-19	000008	3	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000006	5	0	0.00	30000.00	30000.00	0.00	30000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-18 21:59:58.169774-07
42	100	4000001	SL000041	OR000008	2021-08-19	000008	5	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000008	3	0	0.00	18000.00	18000.00	0.00	18000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-18 22:04:44.110096-07
43	100	4000001	SL000042	OR000009	2021-08-19	000008	6	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000009	5	0	0.00	30000.00	30000.00	0.00	30000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-18 22:06:40.751041-07
44	100	4000001	SL000043	OR000009	2021-08-19	000008	7	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000009	5	0	0.00	30000.00	30000.00	0.00	30000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-18 22:06:52.941934-07
45	100	4000001	SL000044	OR000011	2021-08-19	000008	8	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000011	5	0	0.00	30000.00	30000.00	0.00	30000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-18 22:08:47.259341-07
47	100	4000001	SL000046	\N	2021-08-20	000008	1	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		1	0	0.00	8000.00	8000.00	0.00	8000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-20 05:02:13.518409-07
48	100	4000001	SL000047	\N	2021-08-20	000008	2	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		1	0	0.00	6000.00	6000.00	0.00	6000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-20 05:10:13.65358-07
46	100	4000001	SL000045	OR000013	2021-08-19	000008	9	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000	OR000013	6	0	0.00	36000.00	36000.00	0.00	36000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-18 22:14:20.374808-07
49	100	4000001	SL000048	\N	2021-08-20	000008	3	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		10	0	0.00	60000.00	60000.00	0.00	60000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-20 05:14:44.627518-07
50	100	4000001	SL000049	\N	2021-08-20	000008	4	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		2	0	0.00	16000.00	16000.00	0.00	16000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-20 05:16:12.879549-07
27	100	4000001	SL000026	\N	2021-08-14	000008	10	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		3	0	0.00	66.00	66.00	0.00	66.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-14 00:18:43.066331-07
28	100	4000001	SL000027	\N	2021-08-14	000008	13	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		5	0	0.00	175.00	175.00	0.00	175.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-14 00:23:37.408224-07
30	100	4000001	SL000029	\N	2021-08-14	000008	16	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		1	0	0.00	6000.00	6000.00	0.00	6000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-14 05:49:22.385101-07
31	100	4000001	SL000030	\N	2021-08-15	000008	1	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		3	0	0.00	18000.00	18000.00	0.00	18000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-15 04:48:17.857205-07
32	100	4000001	SL000031	\N	2021-08-15	000008	2	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		1	0	0.00	30.00	30.00	0.00	30.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-15 05:04:04.624779-07
34	100	4000001	SL000033	\N	2021-08-15	000008	4	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		1	0	0.00	20000.00	20000.00	0.00	20000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-15 05:24:46.914411-07
37	100	4000001	SL000036	OR000004	2021-08-17	000008	1	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000004	1	0	0.00	6000.00	6000.00	0.00	6000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-17 02:45:24.655131-07
38	100	4000001	SL000037	OR000005	2021-08-19	000008	1	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000005	100	0	0.00	600000.00	600000.00	0.00	600000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-18 21:55:14.684309-07
53	100	4000001	SL000052	\N	2021-08-22	000008	5	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		65	65	420000.00	390000.00	390000.00	0.00	390000.00	0.00	0.00	0.00	0.00	\N	\N	R	\N	\N	\N	\N	\N	Admin	2021-08-21 22:27:25.519366-07
60	100	4000001	SL000059	\N	2021-08-22	000008	22	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000		1	0	0.00	20000.00	20000.00	0.00	20000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-22 00:06:11.713135-07
61	100	4000001	SL000060	\N	2021-08-22	000008	23	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		5	0	0.00	100000.00	100000.00	0.00	100000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-22 00:07:10.103548-07
62	100	4000001	SL000061	\N	2021-08-22	000008	25	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		5	0	0.00	30000.00	30000.00	0.00	30000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-22 00:08:50.163917-07
63	100	4000001	SL000062	\N	2021-08-22	000008	27	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	30.00	30.00	0.00	30.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-22 00:11:34.562894-07
66	100	4000001	SL000065	OR000020	2021-08-23	000008	2	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000020	1	0	0.00	30.00	30.00	0.00	30.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-22 21:32:48.238086-07
51	100	4000001	SL000050	OR000017	2021-08-21	000008	2	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000017	20	5	150.00	80300.00	80300.00	0.00	80300.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-21 00:24:30.615783-07
54	100	4000001	SL000053	\N	2021-08-22	000008	8	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		50	500	9400000.00	400000.00	400000.00	0.00	400000.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-21 22:38:51.504223-07
55	100	4000001	SL000054	\N	2021-08-22	000008	14	00000006	Rakha Begum	01995297063	Velanagor, Narsingdi	1000000		10	0	0.00	350.00	350.00	0.00	350.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-21 23:21:46.113107-07
67	100	4000001	SL000066	\N	2021-08-23	000008	3	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	6000.00	6000.00	0.00	6000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-22 22:42:01.534673-07
56	100	4000001	SL000055	OR000019	2021-08-22	000008	15	00000006	Rakha Begum	01995297063	Velanagor, Narsingdi	1000000	OR000019	10	0	0.00	300.00	300.00	0.00	300.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-21 23:24:51.105337-07
52	100	4000001	SL000051	\N	2021-08-22	000008	4	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	6000.00	6000.00	0.00	6000.00	0.00	0.00	0.00	0.00	\N	\N	C	\N	\N	\N	Admin	2021-08-22	Admin	2021-08-21 21:57:43.07523-07
57	100	4000001	SL000056	\N	2021-08-22	000008	16	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		10	0	0.00	80000.00	80000.00	0.00	80000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-21 23:38:17.569211-07
64	100	4000001	SL000063	\N	2021-08-22	000008	30	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		10	5	175.00	350.00	350.00	0.00	350.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-22 02:18:41.819681-07
58	100	4000001	SL000057	\N	2021-08-22	000008	18	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		10	0	0.00	350.00	350.00	0.00	350.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-21 23:58:17.683021-07
59	100	4000001	SL000058	\N	2021-08-22	000008	20	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	22.00	22.00	0.00	22.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-22 00:03:37.791372-07
65	100	4000001	SL000064	\N	2021-08-23	000008	1	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000		1	0	0.00	30.00	30.00	0.00	30.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-22 21:24:49.469901-07
74	100	4000001	SL000073	OR000022	2021-08-26	000008	4	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000	OR000022	13	0	0.00	520.00	520.00	0.00	520.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-25 22:16:58.719488-07
68	100	4000001	SL000067	\N	2021-08-23	000008	5	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		3	0	0.00	75000.00	75000.00	0.00	75000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-22 22:52:20.221662-07
69	100	4000001	SL000068	\N	2021-08-23	000008	7	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000		4	0	0.00	160.00	160.00	0.00	160.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-23 02:59:52.572537-07
70	100	4000001	SL000069	\N	2021-08-23	000008	8	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		3	0	0.00	120.00	120.00	0.00	120.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-23 03:04:48.274191-07
71	100	4000001	SL000070	OR000021	2021-08-26	000008	1	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000	OR000021	40	0	0.00	240000.00	240000.00	0.00	240000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-25 21:59:14.769023-07
73	100	4000001	SL000072	OR000016	2021-08-26	000008	3	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000	OR000016	7	0	0.00	42000.00	42000.00	0.00	42000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-25 22:06:59.996485-07
72	100	4000001	SL000071	OR000021	2021-08-26	000008	2	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000	OR000021	20	0	0.00	120000.00	120000.00	0.00	120000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-25 21:59:30.661836-07
75	100	4000001	SL000074	OR000023	2021-08-26	000008	5	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000023	11	0	0.00	220000.00	220000.00	0.00	220000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-25 22:21:21.729147-07
76	100	4000001	SL000075	OR000024	2021-08-26	000008	6	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000024	3	0	0.00	90.00	90.00	0.00	90.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-25 22:28:08.27502-07
77	100	4000001	SL000076	OR000025	2021-08-26	000008	7	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000	OR000025	9	0	0.00	198.00	198.00	0.00	198.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-25 22:45:36.794057-07
78	100	4000001	SL000077	OR000026	2021-08-26	000008	8	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000026	4	0	0.00	88.00	88.00	0.00	88.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-25 22:54:10.842757-07
80	100	4000001	SL000079	\N	2021-08-26	000008	16	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000		4	0	0.00	32000.00	32000.00	0.00	32000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 02:13:47.021473-07
81	100	4000001	SL000080	\N	2021-08-26	000008	17	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		2	0	0.00	60.00	60.00	0.00	60.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 02:14:29.946524-07
82	100	4000001	SL000081	\N	2021-08-26	000008	18	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000		5	0	0.00	200.00	200.00	0.00	200.00	0.00	0.00	0.00	0.00	\N	\N	C	\N	\N	\N	Admin	2021-08-26	Admin	2021-08-26 02:15:36.888639-07
96	100	4000001	SL000095	\N	2021-08-27	000008	13	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		10	0	0.00	220.00	220.00	0.00	220.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 23:59:14.254652-07
83	100	4000001	SL000082	\N	2021-08-26	000008	19	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		10	2	50000.00	250000.00	250000.00	0.00	250000.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-26 02:17:49.467669-07
92	100	4000001	SL000091	\N	2021-08-27	000008	1	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		10	3	350000.00	250000.00	250000.00	0.00	250000.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-26 22:04:48.501549-07
84	100	4000001	SL000083	OR000029	2021-08-26	000008	21	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000029	3	0	0.00	120.00	120.00	0.00	120.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 02:30:37.467411-07
85	100	4000001	SL000084	OR000029	2021-08-26	000008	22	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000029	2	0	0.00	80.00	80.00	0.00	80.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 02:30:55.254461-07
86	100	4000001	SL000085	\N	2021-08-26	000008	23	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	8000.00	8000.00	0.00	8000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 02:35:49.19233-07
87	100	4000001	SL000086	\N	2021-08-26	000008	24	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		1	0	0.00	8000.00	8000.00	0.00	8000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 02:37:23.575036-07
88	100	4000001	SL000087	\N	2021-08-26	000008	25	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		2	0	0.00	12000.00	12000.00	0.00	12000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 02:47:03.040036-07
89	100	4000001	SL000088	\N	2021-08-26	000008	26	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		1	0	0.00	25000.00	25000.00	0.00	25000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 02:50:14.339851-07
90	100	4000001	SL000089	\N	2021-08-26	000008	27	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		2	0	0.00	60.00	60.00	0.00	60.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 02:52:43.702033-07
91	100	4000001	SL000090	\N	2021-08-26	000008	28	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		1	0	0.00	40.00	40.00	0.00	40.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 03:46:38.720135-07
99	100	4000001	SL000098	OR000030	2021-08-28	000008	1	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000030	1	0	0.00	6000.00	6000.00	0.00	6000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-27 22:46:27.39735-07
100	100	4000001	SL000099	OR000033	2021-08-28	000008	2	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000	OR000033	4	0	0.00	24000.00	24000.00	0.00	24000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-27 22:53:15.910317-07
97	100	4000001	SL000096	\N	2021-08-27	000008	14	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000		10	3	270.00	300.00	300.00	0.00	300.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-26 23:59:50.663307-07
98	100	4000001	SL000097	\N	2021-08-27	000008	17	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		5	0	0.00	100000.00	100000.00	0.00	100000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-27 02:13:31.153193-07
93	100	4000001	SL000092	\N	2021-08-27	000008	5	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000		10	3	54000.00	60000.00	60000.00	0.00	60000.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-26 22:15:21.270818-07
94	100	4000001	SL000093	\N	2021-08-27	000008	9	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		10	0	0.00	80000.00	80000.00	0.00	80000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-26 23:55:16.342569-07
101	100	4000001	SL000100	OR000033	2021-08-28	000008	3	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000	OR000033	3	0	0.00	18000.00	18000.00	0.00	18000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-27 22:53:52.60427-07
95	100	4000001	SL000094	\N	2021-08-27	000008	10	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000		10	6	425000.00	250000.00	250000.00	0.00	250000.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-26 23:57:04.983697-07
79	100	4000001	SL000078	OR000027	2021-08-26	000008	9	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000027	6	1	140000.00	120000.00	120000.00	0.00	120000.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-25 23:07:24.938994-07
121	100	4000001	SL000117	\N	2021-08-29	000008	1	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000		5	3	18000.00	30000.00	30000.00	0.00	30000.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-28 21:26:04.160421-07
114	100	4000001	SL000110	OR000038	2021-08-28	000008	17	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000038	3	0	0.00	18000.00	18000.00	0.00	18000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 03:36:13.250284-07
104	100	4000001	SL000102	\N	2021-08-28	000008	6	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000		4	0	0.00	32000.00	32000.00	0.00	32000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 00:36:57.293422-07
105	100	4000001	SL000103	OR000034	2021-08-28	000008	7	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000	OR000034	6	0	0.00	8200.00	8200.00	0.00	8200.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 00:37:43.137545-07
106	100	4000001	SL000104	OR000035	2021-08-28	000008	8	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000035	5	0	0.00	30000.00	30000.00	0.00	30000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 00:38:29.009408-07
115	100	4000001	SL000111	OR000038	2021-08-28	000008	18	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000038	9	0	0.00	54000.00	54000.00	0.00	54000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 03:36:25.761969-07
107	100	4000001	SL000105	OR000035	2021-08-28	000008	9	00000004	hasan	5465676	htafdhwguyjabcjev	1000000	OR000035	2	0	0.00	12000.00	12000.00	0.00	12000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 00:38:43.675954-07
122	100	4000001	SL000118	\N	2021-08-29	000008	3	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		2	0	0.00	80.00	80.00	0.00	80.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 21:26:49.914423-07
108	100	4000001	SL000106	\N	2021-08-28	000008	11	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	20000.00	20000.00	0.00	20000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 00:46:11.892077-07
116	100	4000001	SL000112	OR000039	2021-08-28	000008	19	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000039	10	0	0.00	60000.00	60000.00	0.00	60000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 03:36:40.623743-07
103	100	4000001	SL000101	OR000031	2021-08-28	000008	5	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000031	28	11	60040.00	120260.00	120260.00	0.00	120260.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-28 00:23:19.161784-07
111	100	4000001	SL000107	OR000037	2021-08-28	000008	13	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000	OR000037	3	0	0.00	24000.00	24000.00	0.00	24000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 02:59:41.521587-07
117	100	4000001	SL000113	\N	2021-08-28	000008	20	00000004	hasan	5465676	htafdhwguyjabcjev	1000000		4	0	0.00	160.00	160.00	0.00	160.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 03:37:31.648953-07
112	100	4000001	SL000108	OR000037	2021-08-28	000008	14	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000	OR000037	3	0	0.00	24000.00	24000.00	0.00	24000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 02:59:43.422731-07
113	100	4000001	SL000109	\N	2021-08-28	000008	15	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		2	1	8000.00	16000.00	16000.00	0.00	16000.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-28 03:34:47.375014-07
119	100	4000001	SL000115	OR000037	2021-08-28	000008	22	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000	OR000037	1	0	0.00	8000.00	8000.00	0.00	8000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 03:51:26.400951-07
126	100	4000001	SL000122	OR000042	2021-08-30	000008	5	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000042	2	0	0.00	80.00	80.00	0.00	80.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-29 21:55:25.388035-07
123	100	4000001	SL000119	OR000041	2021-08-29	000008	4	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000	OR000041	1	0	0.00	35.00	35.00	0.00	35.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-28 21:27:57.333934-07
120	100	4000001	SL000116	\N	2021-08-28	000008	23	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000		2	1	22.00	44.00	44.00	0.00	44.00	0.00	0.00	0.00	0.00	\N	\N	P	\N	\N	\N	\N	\N	Admin	2021-08-28 03:56:25.467273-07
127	100	4000001	SL000123	OR000043	2021-08-30	000008	6	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000	OR000043	1	0	0.00	35.00	35.00	0.00	35.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-29 22:20:53.771379-07
118	100	4000001	SL000114	\N	2021-08-28	000008	21	00000003	Habiba	118486586	Uttar Kararchar Boritola,Shibpur, Narsingdi	1000000		1	1	8000.00	8000.00	8000.00	0.00	8000.00	0.00	0.00	0.00	0.00	\N	\N	R	\N	\N	\N	\N	\N	Admin	2021-08-28 03:51:07.805169-07
124	100	4000001	SL000120	OR000042	2021-08-30	000008	2	00000005	Billal	01673489595	Uttar Kararchar Boritola, Shibpur, Narsingdi	1000000	OR000042	1	0	0.00	40.00	40.00	0.00	40.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-29 21:11:00.052477-07
125	100	4000001	SL000121	\N	2021-08-30	000008	4	23	Mohammad Rajib Pradhan	01749195756	Dhaka	1000000		1	0	0.00	8000.00	8000.00	0.00	8000.00	0.00	0.00	0.00	0.00	\N	\N	I	\N	\N	\N	\N	\N	Admin	2021-08-29 21:55:13.685888-07
\.


--
-- Data for Name: sales_sales_return_details; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_sales_return_details (id, branch_code, center_code, client_id, product_id, return_invoice, return_date, sales_invoice, sales_date, tran_type_code, tran_batch_number, returned_quantity, return_amount, purchase_value, return_reason, status, cancel_by, cancel_on, app_user_id, app_data_time) FROM stdin;
1	100	0	9999999999	000005	SRT1	2021-08-06	SRT1	2021-08-06	\N	\N	1	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 02:28:34.325334-07
2	100	0	9999999999	000005	SRT2	2021-08-06	SRT2	2021-08-06	\N	\N	1	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 02:35:19.215919-07
3	100	0	9999999999	000003	SRT3	2021-08-06	SRT3	2021-08-06	\N	\N	1	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 02:52:06.400825-07
4	100	0	9999999999	000003	SRT4	2021-08-06	SRT4	2021-08-06	\N	\N	1	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 02:52:28.176419-07
5	100	0	9999999999	000001	SRT5	2021-08-06	SRT5	2021-08-06	\N	\N	1	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 05:26:46.404-07
6	100	0	9999999999	000001	SRT6	2021-08-06	SRT6	2021-08-06	\N	\N	1	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 05:28:24.865062-07
7	100	0	9999999999	000001	SRT7	2021-08-06	SRT7	2021-08-06	\N	\N	1	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 05:48:50.960205-07
8	100	0	9999999999	000001	SRT8	2021-08-06	SRT8	2021-08-06	\N	\N	1	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 06:01:16.868497-07
9	100	0	9999999999	000001	SRT9	2021-08-06	SRT9	2021-08-06	\N	\N	10	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 06:03:20.354803-07
10	100	0	9999999999	000006	SRT10	2021-08-06	SRT10	2021-08-06	\N	\N	20	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 06:26:17.056905-07
11	100	0	9999999999	000004	SRT11	2021-08-06	SRT11	2021-08-06	\N	\N	5	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 06:26:40.944394-07
13	100	0	9999999999	000003	SRT12	2021-08-13	SRT12	2021-08-13	\N	\N	3	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 06:42:40.264278-07
14	100	0	9999999999	000002	SRT13	2021-08-14	SRT13	2021-08-14	\N	\N	14	0.00	0.00	SR Return	R	\N	\N	Admin	2021-08-13 22:35:58.73367-07
35	100	4000001	00000005	000002	IRT21	2021-08-27	SL000078	2021-08-26	\N	18	4	80000.00	72000.00		R	\N	\N	Admin	2021-08-27 02:14:46.494838-07
18	100	4000001	23	000006	IRT4	2021-08-22	SL000053	2021-08-22	\N	10	100	800000.00	600000.00		R	\N	\N	Admin	2021-08-21 22:41:56.301403-07
19	100	4000001	23	000006	IRT5	2021-08-22	SL000053	2021-08-22	\N	11	70	560000.00	420000.00		R	\N	\N	Admin	2021-08-21 22:42:20.054023-07
20	100	4000001	23	000006	IRT6	2021-08-22	SL000053	2021-08-22	\N	12	500	4000000.00	3000000.00		R	\N	\N	Admin	2021-08-21 22:42:43.817981-07
21	100	4000001	23	000006	IRT7	2021-08-22	SL000053	2021-08-22	\N	13	500	4000000.00	3000000.00		R	\N	\N	Admin	2021-08-21 22:43:13.184432-07
15	100	4000001	00000003	000001	IRT1	2021-08-22	SL000052	2021-08-22	\N	6	5	30000.00	25000.00	damage	C	Admin	2021-08-22	Admin	2021-08-21 22:28:40.236259-07
16	100	4000001	00000003	000001	IRT2	2021-08-22	SL000052	2021-08-22	\N	7	65	390000.00	325000.00		C	Admin	2021-08-22	Admin	2021-08-21 22:35:08.223662-07
17	100	4000001	23	000006	IRT3	2021-08-22	SL000053	2021-08-22	\N	9	5	40000.00	30000.00		C	Admin	2021-08-22	Admin	2021-08-21 22:40:31.143435-07
22	100	4000001	00000005	000004	IRT8	2021-08-22	SL000050	2021-08-21	\N	28	5	150.00	125.00		R	\N	\N	Admin	2021-08-22 02:14:08.974912-07
23	100	4000001	00000003	000005	IRT9	2021-08-22	SL000063	2021-08-22	\N	31	5	175.00	150.00		R	\N	\N	Admin	2021-08-22 02:19:53.397894-07
24	100	4000001	00000003	000007	IRT10	2021-08-26	SL000082	2021-08-26	\N	20	2	50000.00	40000.00		R	\N	\N	Admin	2021-08-26 02:20:35.132521-07
25	100	4000001	23	000007	IRT11	2021-08-27	SL000091	2021-08-27	\N	2	4	100000.00	80000.00		R	\N	\N	Admin	2021-08-26 22:05:29.487922-07
26	100	4000001	23	000007	IRT12	2021-08-27	SL000091	2021-08-27	\N	3	7	175000.00	140000.00		R	\N	\N	Admin	2021-08-26 22:06:18.875369-07
27	100	4000001	23	000007	IRT13	2021-08-27	SL000091	2021-08-27	\N	4	3	75000.00	60000.00		R	\N	\N	Admin	2021-08-26 22:06:43.956335-07
28	100	4000001	00000005	000001	IRT14	2021-08-27	SL000092	2021-08-27	\N	6	4	24000.00	20000.00		R	\N	\N	Admin	2021-08-26 22:16:19.539169-07
29	100	4000001	00000005	000001	IRT15	2021-08-27	SL000092	2021-08-27	\N	7	2	12000.00	10000.00		R	\N	\N	Admin	2021-08-26 22:22:25.407246-07
30	100	4000001	00000005	000001	IRT16	2021-08-27	SL000092	2021-08-27	\N	8	3	18000.00	15000.00		R	\N	\N	Admin	2021-08-26 22:27:01.905277-07
31	100	4000001	00000005	000007	IRT17	2021-08-27	SL000094	2021-08-27	\N	11	5	125000.00	100000.00		R	\N	\N	Admin	2021-08-26 23:57:24.933749-07
32	100	4000001	00000005	000007	IRT18	2021-08-27	SL000094	2021-08-27	\N	12	6	300000.00	120000.00		R	\N	\N	Admin	2021-08-26 23:57:51.764222-07
33	100	4000001	00000005	000004	IRT19	2021-08-27	SL000096	2021-08-27	\N	15	4	120.00	100.00		R	\N	\N	Admin	2021-08-27 00:00:09.268928-07
34	100	4000001	00000005	000004	IRT20	2021-08-27	SL000096	2021-08-27	\N	16	3	150.00	75.00		R	\N	\N	Admin	2021-08-27 02:08:59.674084-07
37	100	4000001	00000005	000002	IRT22	2021-08-28	SL000078	2021-08-26	\N	4	1	60000.00	18000.00		R	\N	\N	Admin	2021-08-28 00:25:44.380986-07
38	100	4000001	00000005	000001	IRT23	2021-08-28	SL000101	2021-08-28	\N	10	10	60000.00	50000.00		R	\N	\N	Admin	2021-08-28 00:39:02.697389-07
39	100	4000001	00000005	000008	IRT24	2021-08-28	SL000101	2021-08-28	\N	12	1	40.00	30.00		R	\N	\N	Admin	2021-08-28 03:07:59.537134-07
40	100	4000001	23	000006	IRT25	2021-08-28	SL000109	2021-08-28	\N	16	1	8000.00	6000.00		R	\N	\N	Admin	2021-08-28 03:35:03.741087-07
41	100	4000001	00000005	000003	IRT26	2021-08-28	SL000116	2021-08-28	\N	24	1	22.00	14.00		R	\N	\N	Admin	2021-08-28 03:56:43.953326-07
42	100	4000001	00000005	000001	IRT27	2021-08-29	SL000117	2021-08-29	\N	2	3	18000.00	15000.00		R	\N	\N	Admin	2021-08-28 21:26:30.274594-07
43	100	4000001	00000003	000006	IRT28	2021-08-30	SL000114	2021-08-28	\N	1	1	8000.00	6000.00		R	\N	\N	Admin	2021-08-29 21:09:16.926698-07
\.


--
-- Data for Name: sales_showroom; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_showroom (id, showroom_id, show_room_name, show_room_address, comments) FROM stdin;
\.


--
-- Data for Name: sales_stock_quantity_transfer; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_stock_quantity_transfer (id, from_branch_code, to_branch_code, product_id, product_name, stock_quantity, trf_quantity, app_user_id, app_data_time) FROM stdin;
8	100	100	000005		100	12	Admin	2021-08-13 22:27:04.709953-07
9	100	100	000003		210	2	Admin	2021-08-15 04:21:24.084559-07
\.


--
-- Data for Name: sales_stock_return_details; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_stock_return_details (id, branch_code, product_id, supplier_id, return_date, stock_id, stock_date, stock_voucher, tran_type_code, tran_batch_number, returned_quantity, return_amount, return_voucher, return_reason, status, cancel_by, cancel_on, app_user_id, app_data_time) FROM stdin;
1	100	000003	0005	2021-08-13	ST00000076	2021-08-13	\N	\N	9	100	1400.00	RT00000001	Return All Product of ST00000076	\N	Admin	2021-08-21	Admin	2021-08-13 03:33:42.258841-07
2	100	000004	0002	2021-08-16		\N	\N	\N	2	2	30.00	RT00000002		\N	Admin	2021-08-21	Admin	2021-08-15 23:19:34.850989-07
3	100	000007	0009	2021-08-22		\N	\N	\N	2	1	20000.00	RT00000003	damage	\N	\N	\N	Admin	2021-08-21 21:48:00.81122-07
4	100	000004	0002	2021-08-22		\N	\N	\N	3	1	14.00	RT00000004		\N	\N	\N	Admin	2021-08-21 21:55:28.649768-07
5	100	000006	0009	2019-08-23		\N	\N	\N	1	1	6000.00	RT00000005		\N	\N	\N	Admin	2021-08-22 21:22:07.924441-07
6	100	000002	0009	2021-08-26	ST00000102	2021-08-26	\N	\N	12	1	18000.00	RT00000006	Return All Product of ST00000102	\N	\N	\N	Admin	2021-08-26 02:05:00.370845-07
7	100	000008	0009	2021-08-26		\N	\N	\N	13	1	20.00	RT00000007		\N	\N	\N	Admin	2021-08-26 02:05:58.558513-07
8	100	000001	0009	2021-08-26		\N	\N	\N	15	2	4000.00	RT00000008		\N	\N	\N	Admin	2021-08-26 02:07:39.177333-07
\.


--
-- Data for Name: sales_stockdetails; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_stockdetails (id, branch_code, stock_id, supplier_id, product_id, purces_price, total_price, discount_amount, status, quantity, returned_quantity, return_date, stock_date, comments, app_user_id, app_data_time) FROM stdin;
1	100	ST00100001	0001	000001	5000.00	25000.00	0.00	S	5	0	\N	2021-05-24		Admin	2021-05-24 04:55:07.974336-07
3	100	ST00000001	0001	000001	5000.00	25000.00	0.00	S	5	0	\N	2021-06-10		Admin	2021-06-10 02:34:11.528536-07
2	100	ST00000002	0001	000001	5000.00	5000.00	0.00	J	1	0	\N	2021-05-25		Admin	2021-05-25 04:10:43.615232-07
7	100	ST00000002	0	000002	18000.00	18000.00	0.00	J	1	0	\N	2021-06-11		Admin	2021-06-11 04:14:32.259631-07
11	100	ST00000003	0003	000002	18000.00	18000.00	0.00	S	1	0	\N	2021-06-11		Admin	2021-06-11 04:20:46.032181-07
15	100	ST00000004	0007	000003	14.00	14.00	0.00	S	1	0	\N	2021-06-26		Admin	2021-06-26 01:55:02.217947-07
16	100	ST00000004	0007	000002	18000.00	18000.00	0.00	S	1	0	\N	2021-06-26		Admin	2021-06-26 01:55:22.099977-07
17	100	ST00000004	0007	000005	30.00	30.00	0.00	S	1	0	\N	2021-06-26		Admin	2021-06-26 02:34:25.420928-07
18	100	ST00000005	0002	000004	25.00	250.00	0.00	S	10	0	\N	2021-06-26		Admin	2021-06-26 03:21:13.52703-07
19	100	ST00000006	0008	000006	6000.00	600000.00	0.00	S	100	0	\N	2021-07-06	\N	Admin	2021-07-06 10:34:26.370058-07
44	100	ST00000062	0	000006	6000.00	6000.00	0.00	J	1	0	\N	2021-07-15		Admin	2021-07-14 22:22:31.782989-07
43	100	ST00000055	0	000006	6000.00	6000.00	0.00	J	1	0	\N	2021-07-15		Admin	2021-07-14 22:04:45.143247-07
42	100	ST00000050	0	000002	18000.00	18000.00	0.00	J	1	0	\N	2021-07-15		Admin	2021-07-14 21:58:49.01461-07
45	100	ST00000065	0	000006	6000.00	6000.00	0.00	J	1	0	\N	2021-07-15		Admin	2021-07-14 22:46:04.373025-07
20	100	ST00000007	0002	000001	5000.00	50000.00	0.00	C	10	0	\N	2021-07-11	\N	Admin	2021-07-10 21:46:16.91624-07
24	100	ST00000011	0002	000003	14.00	140.00	0.00	C	10	0	\N	2021-07-11		Admin	2021-07-10 21:56:44.910608-07
23	100	ST00000010	0002	000003	14.00	140.00	0.00	C	10	0	\N	2021-07-11	\N	Admin	2021-07-10 21:55:13.926728-07
22	100	ST00000009	0002	000003	14.00	140.00	0.00	C	10	0	\N	2021-07-11	\N	Admin	2021-07-10 21:52:33.670388-07
21	100	ST00000008	0007	000001	5000.00	50000.00	0.00	C	10	0	\N	2021-07-11	\N	Admin	2021-07-10 21:47:40.393815-07
25	100	ST00000012	0002	000003	14.00	140.00	0.00	S	10	0	\N	2021-07-11	\N	Admin	2021-07-10 22:06:52.562512-07
46	100	ST00000066	0	000006	6000.00	6000.00	0.00	W	1	0	\N	2021-07-15		Admin	2021-07-14 22:49:11.874936-07
47	100	ST00000067	0	000004	25.00	25.00	0.00	W	1	0	\N	2021-07-15		Admin	2021-07-14 22:49:51.589603-07
48	100	ST00000068	0	000006	6000.00	6000.00	0.00	W	1	0	\N	2021-07-15		Admin	2021-07-14 22:50:37.048463-07
28	100	ST00000015	0007	000001	5000.00	50000.00	0.00	C	10	0	\N	2021-07-11		Admin	2021-07-10 22:11:25.932779-07
27	100	ST00000014	0007	000001	5000.00	50000.00	0.00	C	10	0	\N	2021-07-11	\N	Admin	2021-07-10 22:10:22.509759-07
26	100	ST00000013	0002	000003	14.00	140.00	0.00	C	10	0	\N	2021-07-11		Admin	2021-07-10 22:07:29.034292-07
29	100	ST00000016	0006	000002	18000.00	180000.00	0.00	S	10	0	\N	2021-07-11	\N	Admin	2021-07-10 22:15:50.161286-07
30	100	ST00000017	0006	000002	18000.00	216000.00	0.00	S	12	0	\N	2021-07-11		Admin	2021-07-10 22:16:45.129952-07
31	100	ST00000018	0	000001	5000.00	5000.00	0.00	J	1	0	\N	2021-07-11		Admin	2021-07-10 22:19:34.779329-07
32	100	ST00000019	0002	000002	18000.00	180000.00	0.00	S	10	0	\N	2021-07-11		Admin	2021-07-11 00:38:20.353996-07
34	100	ST00000021	0002	000004	25.00	375.00	0.00	S	15	0	\N	2021-07-11	\N	Admin	2021-07-11 02:13:45.690564-07
35	100	ST00000022	0004	000005	30.00	330.00	0.00	S	11	0	\N	2021-07-11		Admin	2021-07-11 02:14:15.898712-07
33	100	ST00000020	0	000004	25.00	250.00	0.00	J	10	0	\N	2021-07-11		Admin	2021-07-11 02:11:22.65213-07
38	100	ST00000025	0002	000004	25.00	25.00	0.00	S	1	0	\N	2021-07-12	\N	Admin	2021-07-12 02:20:03.638224-07
39	100	ST00000026	0	000004	25.00	25.00	0.00	J	1	0	\N	2021-07-13		Admin	2021-07-12 22:26:53.675411-07
37	100	ST00000024	0	000004	25.00	50.00	0.00	J	2	0	\N	2021-07-12		Admin	2021-07-12 00:21:33.333962-07
36	100	ST00000023	0	000004	25.00	125.00	0.00	J	5	0	\N	2021-07-12		Admin	2021-07-11 22:57:55.432648-07
40	100	ST00000042	0	000004	25.00	25.00	0.00	J	1	0	\N	2021-07-15		Admin	2021-07-14 21:19:26.398065-07
41	100	ST00000047	0	000004	25.00	25.00	0.00	J	1	0	\N	2021-07-15		Admin	2021-07-14 21:42:29.75325-07
49	100	ST00000074	0004	000005	30.00	3000.00	0.00	S	100	0	\N	2021-08-13	\N	Admin	2021-08-13 02:26:38.814051-07
50	100	ST00000075	0004	000004	25.00	2500.00	0.00	S	100	0	\N	2021-08-13	\N	Admin	2021-08-13 02:32:16.646289-07
59	100	ST00000083	9999999999999	000005	30.00	3000.00	0.00	S	100	0	\N	2021-08-14	\N	Admin	2021-08-14 00:21:09.090747-07
51	100	ST00000076	0005	000003	14.00	1400.00	0.00	R	100	100	2021-08-13	2021-08-13	\N	Admin	2021-08-13 02:49:13.885398-07
52	100	ST00000077	0002	000002	18000.00	900000.00	0.00	S	50	0	\N	2021-08-14	\N	Admin	2021-08-13 22:28:59.249705-07
53	100	ST00000078	0002	000002	18000.00	900000.00	0.00	S	50	0	\N	2021-08-14	\N	Admin	2021-08-13 22:37:35.358602-07
54	100	ST00000078	0002	000001	5000.00	2500000.00	0.00	S	500	0	\N	2021-08-14	\N	Admin	2021-08-13 22:37:35.358602-07
55	100	ST00000079	0002	000001	5000.00	2500000.00	0.00	S	500	0	\N	2021-08-14	\N	Admin	2021-08-13 22:38:23.871702-07
56	100	ST00000080	0002	000006	6000.00	3000000.00	0.00	S	500	0	\N	2021-08-14	\N	Admin	2021-08-14 00:09:24.316793-07
57	100	ST00000081	9999999999999	000006	6000.00	6000000.00	0.00	S	1000	0	\N	2021-08-14	\N	Admin	2021-08-14 00:12:01.131849-07
58	100	ST00000082	9999999999999	000003	14.00	1400.00	0.00	S	100	0	\N	2021-08-14	\N	Admin	2021-08-14 00:16:57.159961-07
60	100	ST00000084	0002	000005	30.00	12000.00	0.00	S	400	0	\N	2021-08-14	\N	Admin	2021-08-14 00:21:37.226108-07
61	100	ST00000085	0002	000001	5000.00	1500000.00	0.00	S	300	0	\N	2021-08-14	\N	Admin	2021-08-14 05:46:48.992296-07
63	100	ST00000087	0002	000004	25.00	250.00	0.00	S	10	0	\N	2021-08-16		Admin	2021-08-15 23:16:25.013002-07
64	100	ST00000088	0002	000004	25.00	2500.00	0.00	S	100	0	\N	2021-08-21		Admin	2021-08-21 00:15:47.370067-07
62	100	ST00000086	0002	000003	14.00	140.00	0.00	S	10	0	\N	2021-08-16		Admin	2021-08-15 23:16:09.592118-07
65	100	ST00000091	0009	000007	20000.00	200000.00	0.00	S	10	0	\N	2021-08-22	\N	Admin	2021-08-21 21:46:24.469302-07
66	100	ST00000092	9999999999999	000005	30.00	15000.00	0.00	S	500	0	\N	2021-08-22	\N	Admin	2021-08-21 23:55:21.506323-07
67	100	ST00000093	0009	000003	14.00	1400.00	0.00	S	100	0	\N	2021-08-22		Admin	2021-08-22 00:01:48.041764-07
68	100	ST00000094	0009	000002	18000.00	1800000.00	0.00	S	100	0	\N	2021-08-22	\N	Admin	2021-08-22 00:05:11.882284-07
69	100	ST00000095	0002	000001	5000.00	2000000.00	0.00	S	400	0	\N	2021-08-22		Admin	2021-08-22 00:07:32.171215-07
70	100	ST00000096	0009	000004	25.00	2500.00	0.00	S	100	0	\N	2021-08-22		Admin	2021-08-22 00:09:47.953896-07
71	100	ST00000097	0002	000005	30.00	3000.00	0.00	S	100	0	\N	2021-08-22		Admin	2021-08-22 02:16:06.533882-07
72	100	ST00000098	0002	000006	6000.00	600000.00	0.00	S	100	0	\N	2021-08-22		Admin	2021-08-22 02:43:56.011386-07
73	100	ST00000099	0009	000007	20000.00	4000000.00	0.00	S	200	0	\N	2021-08-23		Admin	2021-08-22 22:49:14.89537-07
74	100	ST00000100	0003	000008	30.00	3000.00	0.00	S	100	0	\N	2021-08-23		Admin	2021-08-23 02:55:08.304328-07
75	100	ST00000101	0009	000003	14.00	14.00	0.00	S	1	0	\N	2021-08-26		Admin	2021-08-26 02:02:47.474676-07
76	100	ST00000101	0009	000005	30.00	30.00	0.00	S	1	0	\N	2021-08-26		Admin	2021-08-26 02:02:52.376692-07
77	100	ST00000102	0009	000002	18000.00	18000.00	0.00	R	1	1	2021-08-26	2021-08-26	\N	Admin	2021-08-26 02:04:33.846271-07
78	100	ST00000103	0009	000001	5000.00	50000.00	0.00	S	10	0	\N	2021-08-26	\N	Admin	2021-08-26 02:06:36.614312-07
79	100	ST00000104	0009	000003	14.00	14.00	0.00	S	1	0	\N	2021-08-30	\N	Admin	2021-08-29 21:54:56.125129-07
\.


--
-- Data for Name: sales_stockdetailstemp; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_stockdetailstemp (id, branch_code, product_name, product_model, product_bar_code, quantity, purces_price, total_price, discount_amount, status, comments, app_user_id, app_data_time, product_id) FROM stdin;
\.


--
-- Data for Name: sales_stockmaster; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_stockmaster (id, branch_code, stock_id, supplier_id, stock_date, tran_type_code, tran_batch_number, voucher_number, show_room, status, payment_comments, total_quantity, returned_quantity, returned_amount, cancel_quantity, cancel_amount, total_price, total_pay, due_amount, discount_amount, comments, app_user_id, app_data_time) FROM stdin;
2	100	ST00000002	0001	2021-05-25	STOCK	1	\N	1	S	\N	1	0	0.00	0	0.00	5000.00	0.00	5000.00	\N		Admin	2021-05-25 04:10:45.71-07
1	100	ST00000001	0001	2021-05-24	STOCK	1	\N	1	S	\N	5	0	0.00	0	0.00	25000.00	20000.00	5000.00	\N		Admin	2021-05-24 04:55:11.213-07
4	100	ST00000001	0001	2021-06-10	STOCK	1	\N	1	S	\N	5	0	0.00	0	0.00	25000.00	3000.00	22000.00	\N		Admin	2021-06-10 02:34:14.963-07
5	100	ST00000003	0003	2021-06-11	STOCK	1	\N	1	S	\N	1	0	0.00	0	0.00	18000.00	0.00	18000.00	\N		Admin	2021-06-11 04:33:48.676265-07
6	100	ST00000004	0007	2021-06-26	STOCK	1	\N	1	S	\N	3	0	0.00	0	0.00	18044.00	0.00	18044.00	\N		Admin	2021-06-26 02:34:37.014822-07
7	100	ST00000005	0002	2021-06-26	STOCK	3	\N	1	S	\N	10	0	0.00	0	0.00	250.00	200.00	50.00	\N		Admin	2021-06-26 03:21:16.682119-07
8	100	ST00000006	0008	2021-07-06	STOCK	4	XYZ-457	1	S		100	0	0.00	0	0.00	600000.00	500000.00	100000.00	\N			2021-07-06 10:34:26.371336-07
29	100	ST00000079	0002	2021-08-14	STOCK	4	\N	1	S		500	0	0.00	0	0.00	2500000.00	0.00	2500000.00	\N			2021-08-13 22:38:23.872668-07
30	100	ST00000080	0002	2021-08-14	STOCK	5	\N	1	S		500	0	0.00	0	0.00	3000000.00	0.00	3000000.00	\N			2021-08-14 00:09:24.33475-07
31	100	ST00000081	9999999999999	2021-08-14	STOCK	7	\N	1	S		1000	0	0.00	0	0.00	6000000.00	0.00	6000000.00	\N			2021-08-14 00:12:01.136795-07
9	100	ST00000007	0002	2021-07-11	STOCK	1	\N	1	C		10	0	0.00	0	0.00	50000.00	0.00	50000.00	\N			2021-07-10 21:46:16.982885-07
13	100	ST00000011	0002	2021-07-11	STOCK	5	\N	1	C	\N	10	0	0.00	0	0.00	140.00	0.00	140.00	\N		Admin	2021-07-10 21:56:48.825271-07
12	100	ST00000010	0002	2021-07-11	STOCK	4	\N	1	C		10	0	0.00	0	0.00	140.00	0.00	140.00	\N			2021-07-10 21:55:13.92966-07
11	100	ST00000009	0002	2021-07-11	STOCK	3	\N	1	C		10	0	0.00	0	0.00	140.00	0.00	140.00	\N			2021-07-10 21:52:33.670388-07
10	100	ST00000008	0007	2021-07-11	STOCK	2	\N	1	C		10	0	0.00	0	0.00	50000.00	0.00	50000.00	\N			2021-07-10 21:47:40.398076-07
14	100	ST00000012	0002	2021-07-11	STOCK	6	\N	1	S		10	0	0.00	0	0.00	140.00	0.00	140.00	\N			2021-07-10 22:06:52.564506-07
32	100	ST00000082	9999999999999	2021-08-14	STOCK	9	\N	1	S		100	0	0.00	0	0.00	1400.00	0.00	1400.00	\N			2021-08-14 00:16:57.162956-07
17	100	ST00000015	0007	2021-07-11	STOCK	9	\N	1	C	\N	10	0	0.00	0	0.00	50000.00	0.00	50000.00	\N		Admin	2021-07-10 22:11:28.363784-07
16	100	ST00000014	0007	2021-07-11	STOCK	8	\N	1	C		10	0	0.00	0	0.00	50000.00	0.00	50000.00	\N			2021-07-10 22:10:22.51106-07
15	100	ST00000013	0002	2021-07-11	STOCK	7	\N	1	C	\N	10	0	0.00	0	0.00	140.00	0.00	140.00	\N		Admin	2021-07-10 22:07:34.164817-07
18	100	ST00000016	0006	2021-07-11	STOCK	10	\N	1	S		10	0	0.00	0	0.00	180000.00	0.00	180000.00	\N			2021-07-10 22:15:50.162281-07
19	100	ST00000017	0006	2021-07-11	STOCK	11	\N	1	S	\N	12	0	0.00	0	0.00	216000.00	0.00	216000.00	\N		Admin	2021-07-10 22:17:03.573255-07
20	100	ST00000019	0002	2021-07-11	STOCK	12	\N	1	S	\N	10	0	0.00	0	0.00	180000.00	180000.00	0.00	\N	ok	Admin	2021-07-11 00:38:28.688281-07
21	100	ST00000021	0002	2021-07-11	STOCK	13	\N	1	S	good	15	0	0.00	0	0.00	375.00	0.00	375.00	\N	good		2021-07-11 02:13:45.696623-07
22	100	ST00000022	0004	2021-07-11	STOCK	14	\N	1	S	\N	11	0	0.00	0	0.00	330.00	330.00	0.00	\N		Admin	2021-07-11 02:14:27.382603-07
23	100	ST00000025	0002	2021-07-12	STOCK	1	\N	1	S		1	0	0.00	0	0.00	25.00	0.00	25.00	\N			2021-07-12 02:20:03.638224-07
24	100	ST00000074	0004	2021-08-13	STOCK	2	\N	1	S		100	0	0.00	0	0.00	3000.00	0.00	3000.00	\N			2021-08-13 02:26:38.879542-07
25	100	ST00000075	0004	2021-08-13	STOCK	4	\N	1	S		100	0	0.00	0	0.00	2500.00	0.00	2500.00	\N			2021-08-13 02:32:16.647254-07
33	100	ST00000083	9999999999999	2021-08-14	STOCK	11	\N	1	S		100	0	0.00	0	0.00	3000.00	0.00	3000.00	\N			2021-08-14 00:21:09.092711-07
26	100	ST00000076	0005	2021-08-13	STOCK	7	\N	1	R		100	100	1400.00	0	0.00	1400.00	0.00	1400.00	\N			2021-08-13 02:49:13.886363-07
27	100	ST00000077	0002	2021-08-14	STOCK	1	\N	1	S		50	0	0.00	0	0.00	900000.00	0.00	900000.00	\N			2021-08-13 22:28:59.317489-07
28	100	ST00000078	0002	2021-08-14	STOCK	3	\N	1	S		550	0	0.00	0	0.00	3400000.00	0.00	3400000.00	\N			2021-08-13 22:37:35.376555-07
34	100	ST00000084	0002	2021-08-14	STOCK	12	\N	1	S		400	0	0.00	0	0.00	12000.00	0.00	12000.00	\N			2021-08-14 00:21:37.227038-07
35	100	ST00000085	0002	2021-08-14	STOCK	15	\N	1	S		300	0	0.00	0	0.00	1500000.00	0.00	1500000.00	\N			2021-08-14 05:46:49.097015-07
36	100	ST00000087	0002	2021-08-16	STOCK	1	\N	1	S	\N	10	0	0.00	0	0.00	250.00	0.00	250.00	\N	ok	Admin	2021-08-15 23:16:29.34502-07
37	100	ST00000088	0002	2021-08-21	STOCK	1	\N	1	S	\N	100	0	0.00	0	0.00	2500.00	0.00	2500.00	\N	good	Admin	2021-08-21 00:15:59.894879-07
38	100	ST00000086	0002	2021-08-16	STOCK	5	\N	1	S	\N	10	0	0.00	0	0.00	140.00	0.00	140.00	\N		Admin	2021-08-15 23:16:13.199304-07
39	100	ST00000091	0009	2021-08-22	STOCK	1	\N	1	S		10	0	0.00	0	0.00	200000.00	0.00	200000.00	\N			2021-08-21 21:46:24.486271-07
40	100	ST00000092	9999999999999	2021-08-22	STOCK	17	\N	1	S		500	0	0.00	0	0.00	15000.00	0.00	15000.00	\N			2021-08-21 23:55:21.518759-07
41	100	ST00000093	0009	2021-08-22	STOCK	19	\N	1	S	\N	100	0	0.00	0	0.00	1400.00	0.00	1400.00	\N	ok	Admin	2021-08-22 00:01:54.243992-07
42	100	ST00000094	0009	2021-08-22	STOCK	21	\N	1	S		100	0	0.00	0	0.00	1800000.00	0.00	1800000.00	\N			2021-08-22 00:05:11.882995-07
43	100	ST00000095	0002	2021-08-22	STOCK	24	\N	1	S	\N	400	0	0.00	0	0.00	2000000.00	0.00	2000000.00	\N	nyc	Admin	2021-08-22 00:07:37.539481-07
44	100	ST00000096	0009	2021-08-22	STOCK	26	\N	1	S	\N	100	0	0.00	0	0.00	2500.00	0.00	2500.00	\N		Admin	2021-08-22 00:09:49.191915-07
45	100	ST00000097	0002	2021-08-22	STOCK	29	\N	1	S	\N	100	0	0.00	0	0.00	3000.00	0.00	3000.00	\N	ok	Admin	2021-08-22 02:16:21.041305-07
46	100	ST00000098	0002	2021-08-22	STOCK	32	\N	1	S	\N	100	0	0.00	0	0.00	600000.00	0.00	600000.00	\N		Admin	2021-08-22 02:43:57.572489-07
47	100	ST00000099	0009	2021-08-23	STOCK	4	\N	1	S	\N	200	0	0.00	0	0.00	4000000.00	4000000.00	0.00	\N	impressive	Admin	2021-08-22 22:49:27.947355-07
48	100	ST00000100	0003	2021-08-23	STOCK	6	\N	1	S	\N	100	0	0.00	0	0.00	3000.00	3000.00	0.00	\N	good	Admin	2021-08-23 02:55:18.276163-07
49	100	ST00000101	0009	2021-08-26	STOCK	10	\N	1	S	\N	2	0	0.00	0	0.00	44.00	30.00	14.00	\N		Admin	2021-08-26 02:02:56.984657-07
52	100	ST00000104	0009	2021-08-30	STOCK	3	\N	1	S		1	0	0.00	0	0.00	14.00	0.00	14.00	\N			2021-08-29 21:54:56.203637-07
50	100	ST00000102	0009	2021-08-26	STOCK	11	\N	1	R		1	1	18000.00	0	0.00	18000.00	0.00	18000.00	\N			2021-08-26 02:04:33.847323-07
51	100	ST00000103	0009	2021-08-26	STOCK	14	\N	1	S		10	0	0.00	0	0.00	50000.00	0.00	50000.00	\N			2021-08-26 02:06:36.715953-07
\.


--
-- Data for Name: sales_stockmasterauthq; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_stockmasterauthq (id, branch_code, stock_id, supplier_id, stock_date, voucher_number, show_room, status, tran_type_code, payment_comments, total_quantity, returned_quantity, returned_amount, cancel_quantity, cancel_amount, total_price, total_pay, due_amount, discount_amount, comments, app_user_id, app_data_time) FROM stdin;
4	100	ST00000002	0	2021-06-11	\N	1	J	CS	\N	1	0	0.00	0	0.00	18000.00	0.00	18000.00	0.00		Admin	2021-06-11 04:14:36.680119-07
20	100	ST00000018	0	2021-07-11	\N	1	J	CS	\N	1	0	0.00	0	0.00	5000.00	0.00	5000.00	0.00		Admin	2021-07-10 22:19:36.499707-07
22	100	ST00000020	0	2021-07-11	\N	1	J	CS	\N	10	0	0.00	0	0.00	250.00	0.00	250.00	0.00		Admin	2021-07-11 02:11:38.845856-07
28	100	ST00000026	0	2021-07-13	\N	1	J	CS	\N	1	0	0.00	0	0.00	25.00	0.00	25.00	0.00		Admin	2021-07-12 22:27:23.033256-07
26	100	ST00000024	0	2021-07-12	\N	1	J	CS	\N	2	0	0.00	0	0.00	50.00	0.00	50.00	0.00		Admin	2021-07-12 00:21:35.925977-07
25	100	ST00000023	0	2021-07-12	\N	1	J	CS	\N	5	0	0.00	0	0.00	125.00	0.00	125.00	0.00		Admin	2021-07-11 22:58:31.781567-07
33	100	ST00000042	0	2021-07-15	\N	1	J	CS	\N	1	0	0.00	0	0.00	25.00	0.00	25.00	0.00		Admin	2021-07-14 21:19:34.302334-07
37	100	ST00000047	0	2021-07-15	\N	1	J	CS	\N	1	0	0.00	0	0.00	25.00	0.00	25.00	0.00		Admin	2021-07-14 21:42:30.943008-07
52	100	ST00000062	0	2021-07-15	\N	1	J	CS	\N	1	0	0.00	0	0.00	6000.00	0.00	6000.00	0.00		Admin	2021-07-14 22:22:33.248352-07
43	100	ST00000055	0	2021-07-15	\N	1	J	CS	\N	1	0	0.00	0	0.00	6000.00	0.00	6000.00	0.00		Admin	2021-07-14 22:04:46.611284-07
39	100	ST00000050	0	2021-07-15	\N	1	J	CS	\N	1	0	0.00	0	0.00	18000.00	0.00	18000.00	0.00		Admin	2021-07-14 21:58:51.030198-07
55	100	ST00000065	0	2021-07-15	\N	1	J	CS	\N	1	0	0.00	0	0.00	6000.00	0.00	6000.00	0.00		Admin	2021-07-14 22:46:06.269337-07
56	100	ST00000066	0	2021-07-15	\N	1	W	CS	\N	1	0	0.00	0	0.00	6000.00	0.00	6000.00	0.00		Admin	2021-07-14 22:49:15.045367-07
57	100	ST00000067	0	2021-07-15	\N	1	W	CS	\N	1	0	0.00	0	0.00	25.00	0.00	25.00	0.00		Admin	2021-07-14 22:49:53.772884-07
58	100	ST00000068	0	2021-07-15	\N	1	W	CS	\N	1	0	0.00	0	0.00	6000.00	0.00	6000.00	0.00		Admin	2021-07-14 22:50:42.134661-07
\.


--
-- Data for Name: sales_stockpaymentdetails; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_stockpaymentdetails (id, branch_code, stock_id, payment_method, pay_amount, payment_date, payment_comments, app_user_id, app_data_time) FROM stdin;
\.


--
-- Data for Name: sales_supplier_information; Type: TABLE DATA; Schema: public; Owner: delarship
--

COPY public.sales_supplier_information (supp_id, branch_code, supp_name, proprietor_name, account_number, supp_address, supp_mobile, supp_email, supp_web, supp_key_person, supp_fax, supp_grade, is_active, is_deleted, app_user_id, app_data_time, joining_date) FROM stdin;
0002	100	Abul	sm shop	\N	\N	01671103360	\N	\N	\N	\N	\N	t	f	Admin	2021-06-11 03:54:06.275328-07	2021-07-06
0004	100	H&M	\N	\N	\N	14565876586	\N	\N	\N	\N	\N	t	f	Admin	2021-06-12 00:21:42.795636-07	2021-07-06
0005	100	kabir	\N	\N	\N	71624762587	\N	\N	\N	\N	\N	t	f	Admin	2021-06-21 06:08:52.642761-07	2021-07-06
0007	100	Samsung	Hasan	\N	\N	01671104456	\N	\N	\N	\N	\N	t	f	Admin	2021-06-26 02:30:04.012632-07	2021-07-06
0008	100	WALTON EXCLUSIVE	WALTON EXCLUSIVE	\N	\N	01711233638	\N	\N	\N	\N	A	t	f	Admin	2021-07-06 10:30:43.501209-07	2021-07-06
0003	100	mahin	sm shop	\N	\N	17648656846	\N	\N	\N	\N	\N	t	f	Admin	2021-06-11 04:23:09.237536-07	2021-07-06
0006	100	Walton	Jamal	\N	\N	2768734769	mq@gmail.com	\N	\N	\N	\N	t	f	Admin	2021-06-26 01:54:11.629229-07	2021-07-06
0009	100	abdullah	\N	\N	dhaka	017654	\N	\N	mqr	\N	A	t	f	Admin	2021-08-21 21:41:08.295572-07	2008-08-22
0001	100	RFL	RFL	\N	\N	0134123412	\N	\N	\N	\N	\N	t	f	Admin	2021-05-24 04:55:32.496105-07	2021-07-06
\.


--
-- Name: appauth_application_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_application_log_id_seq', 1, false);


--
-- Name: appauth_dashboard_matrix_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_dashboard_matrix_id_seq', 1, false);


--
-- Name: appauth_eodsod_process_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_eodsod_process_id_seq', 1, false);


--
-- Name: appauth_eodsod_process_list_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_eodsod_process_list_id_seq', 1, false);


--
-- Name: appauth_global_parameters_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_global_parameters_id_seq', 1, true);


--
-- Name: appauth_holiday_list_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_holiday_list_id_seq', 1, false);


--
-- Name: appauth_inventory_number_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_inventory_number_id_seq', 49, true);


--
-- Name: appauth_query_table_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_query_table_id_seq', 6, true);


--
-- Name: appauth_report_configuration_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_report_configuration_id_seq', 1, true);


--
-- Name: appauth_report_parameter_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_report_parameter_id_seq', 3922, true);


--
-- Name: appauth_report_parameter_mapping_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_report_parameter_mapping_id_seq', 1, false);


--
-- Name: appauth_report_table_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_report_table_group_id_seq', 1, false);


--
-- Name: appauth_report_table_tabular_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.appauth_report_table_tabular_id_seq', 890, true);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 866, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 3, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 660, true);


--
-- Name: delar_application_settings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_application_settings_id_seq', 1, true);


--
-- Name: delar_client_center_trf_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_client_center_trf_hist_id_seq', 3, true);


--
-- Name: delar_clients_inventory_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_clients_inventory_hist_id_seq', 1, false);


--
-- Name: delar_clients_inventory_status_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_clients_inventory_status_id_seq', 1, false);


--
-- Name: delar_clients_security_info_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_clients_security_info_id_seq', 1, false);


--
-- Name: delar_employee_center_permit_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_employee_center_permit_id_seq', 1, false);


--
-- Name: delar_products_packet_mapping_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_products_packet_mapping_id_seq', 1, false);


--
-- Name: delar_sales_return_packet_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_sales_return_packet_id_seq', 33, true);


--
-- Name: delar_srstage_details_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_srstage_details_id_seq', 61, true);


--
-- Name: delar_srstage_details_temp_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_srstage_details_temp_id_seq', 94, true);


--
-- Name: delar_srstage_inventory_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_srstage_inventory_hist_id_seq', 1, false);


--
-- Name: delar_srstage_inventory_status_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_srstage_inventory_status_id_seq', 46, true);


--
-- Name: delar_srstage_inventory_sum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_srstage_inventory_sum_id_seq', 1, false);


--
-- Name: delar_srstage_master_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_srstage_master_id_seq', 27, true);


--
-- Name: delar_stock_return_packet_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.delar_stock_return_packet_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 15, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 185, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 80, true);


--
-- Name: ecom_application_settings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.ecom_application_settings_id_seq', 1, true);


--
-- Name: ecom_delivery_address_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.ecom_delivery_address_id_seq', 1, true);


--
-- Name: ecom_ecom_slider_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.ecom_ecom_slider_id_seq', 1, true);


--
-- Name: ecom_order_details_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.ecom_order_details_id_seq', 1, true);


--
-- Name: ecom_pagemodel_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.ecom_pagemodel_id_seq', 1, false);


--
-- Name: ecom_product_images_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.ecom_product_images_id_seq', 1, false);


--
-- Name: ecom_user_chart_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.ecom_user_chart_id_seq', 1, false);


--
-- Name: ecom_user_profile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.ecom_user_profile_id_seq', 1, false);


--
-- Name: finance_account_charges_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_account_charges_id_seq', 1, false);


--
-- Name: finance_accounts_balance_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_accounts_balance_hist_id_seq', 51, true);


--
-- Name: finance_accounts_balmon_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_accounts_balmon_hist_id_seq', 1, false);


--
-- Name: finance_application_settings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_application_settings_id_seq', 1, true);


--
-- Name: finance_cash_and_bank_ledger_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_cash_and_bank_ledger_id_seq', 3, true);


--
-- Name: finance_cash_transaction_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_cash_transaction_id_seq', 1, false);


--
-- Name: finance_client_account_mapping_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_client_account_mapping_id_seq', 3, true);


--
-- Name: finance_deposit_closing_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_deposit_closing_id_seq', 1, false);


--
-- Name: finance_deposit_payment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_deposit_payment_id_seq', 1, false);


--
-- Name: finance_deposit_receive_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_deposit_receive_id_seq', 1, false);


--
-- Name: finance_deposit_transfer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_deposit_transfer_id_seq', 1, false);


--
-- Name: finance_document_register_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_document_register_id_seq', 1, false);


--
-- Name: finance_led_rec_pay_bal_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_led_rec_pay_bal_hist_id_seq', 26, true);


--
-- Name: finance_led_rec_pay_balmon_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_led_rec_pay_balmon_hist_id_seq', 1, true);


--
-- Name: finance_ledger_balance_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_ledger_balance_hist_id_seq', 88, true);


--
-- Name: finance_ledger_balance_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_ledger_balance_id_seq', 9, true);


--
-- Name: finance_ledger_balmon_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_ledger_balmon_hist_id_seq', 28, true);


--
-- Name: finance_ledger_report_balance_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_ledger_report_balance_id_seq', 3298, true);


--
-- Name: finance_ledger_report_param_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_ledger_report_param_id_seq', 3478, true);


--
-- Name: finance_ledger_transaction_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_ledger_transaction_type_id_seq', 1, true);


--
-- Name: finance_tran_telbal_details_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_tran_telbal_details_id_seq', 1, false);


--
-- Name: finance_transaction_details_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_transaction_details_id_seq', 649, true);


--
-- Name: finance_transaction_master_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_transaction_master_id_seq', 215, true);


--
-- Name: finance_transaction_table_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_transaction_table_id_seq', 654, true);


--
-- Name: finance_transfer_tran_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.finance_transfer_tran_id_seq', 1, false);


--
-- Name: hrm_advance_salary_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_advance_salary_id_seq', 1, false);


--
-- Name: hrm_allowance_payment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_allowance_payment_id_seq', 1, false);


--
-- Name: hrm_attendance_card_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_attendance_card_log_id_seq', 1, false);


--
-- Name: hrm_attendance_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_attendance_log_id_seq', 1, false);


--
-- Name: hrm_employee_document_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_employee_document_id_seq', 1, false);


--
-- Name: hrm_employee_experience_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_employee_experience_id_seq', 1, true);


--
-- Name: hrm_employee_nominee_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_employee_nominee_id_seq', 1, false);


--
-- Name: hrm_employee_training_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_employee_training_id_seq', 1, false);


--
-- Name: hrm_leave_application_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_leave_application_id_seq', 1, false);


--
-- Name: hrm_others_deduction_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_others_deduction_id_seq', 1, false);


--
-- Name: hrm_salary_sheet_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_salary_sheet_id_seq', 73, true);


--
-- Name: hrm_shift_info_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.hrm_shift_info_hist_id_seq', 1, false);


--
-- Name: sales_all_trandtl_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_all_trandtl_id_seq', 1, false);


--
-- Name: sales_application_settings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_application_settings_id_seq', 1, false);


--
-- Name: sales_client_balance_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_client_balance_id_seq', 1, false);


--
-- Name: sales_client_closing_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_client_closing_id_seq', 3, true);


--
-- Name: sales_client_id_changes_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_client_id_changes_hist_id_seq', 1, true);


--
-- Name: sales_client_photo_sign_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_client_photo_sign_id_seq', 1, false);


--
-- Name: sales_client_profit_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_client_profit_history_id_seq', 1, false);


--
-- Name: sales_delar_security_info_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_delar_security_info_id_seq', 1, false);


--
-- Name: sales_emi_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_emi_history_id_seq', 1, false);


--
-- Name: sales_emi_receive_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_emi_receive_id_seq', 1, false);


--
-- Name: sales_emi_settings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_emi_settings_id_seq', 1, true);


--
-- Name: sales_emi_setup_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_emi_setup_id_seq', 3, true);


--
-- Name: sales_fees_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_fees_history_id_seq', 1, false);


--
-- Name: sales_nominee_information_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_nominee_information_id_seq', 1, false);


--
-- Name: sales_order_details_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_order_details_id_seq', 50, true);


--
-- Name: sales_order_master_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_order_master_id_seq', 49, true);


--
-- Name: sales_product_damage_details_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_product_damage_details_id_seq', 1, false);


--
-- Name: sales_product_offer_list_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_product_offer_list_id_seq', 1, false);


--
-- Name: sales_product_offer_package_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_product_offer_package_id_seq', 1, false);


--
-- Name: sales_product_price_list_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_product_price_list_id_seq', 1, false);


--
-- Name: sales_products_inventory_hist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_products_inventory_hist_id_seq', 59, true);


--
-- Name: sales_products_inventory_status_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_products_inventory_status_id_seq', 16, true);


--
-- Name: sales_products_price_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_products_price_type_id_seq', 1, false);


--
-- Name: sales_purchase_bill_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_purchase_bill_id_seq', 1, false);


--
-- Name: sales_purchase_order_dtl_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_purchase_order_dtl_id_seq', 6, true);


--
-- Name: sales_purchase_order_dtl_temp_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_purchase_order_dtl_temp_id_seq', 44, true);


--
-- Name: sales_purchase_order_mst_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_purchase_order_mst_id_seq', 1, false);


--
-- Name: sales_purchasemasterauthq_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_purchasemasterauthq_id_seq', 3, true);


--
-- Name: sales_sales_details_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_sales_details_id_seq', 152, true);


--
-- Name: sales_sales_details_temp_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_sales_details_temp_id_seq', 215, true);


--
-- Name: sales_sales_master_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_sales_master_id_seq', 127, true);


--
-- Name: sales_sales_return_details_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_sales_return_details_id_seq', 43, true);


--
-- Name: sales_showroom_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_showroom_id_seq', 1, false);


--
-- Name: sales_stock_quantity_transfer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_stock_quantity_transfer_id_seq', 9, true);


--
-- Name: sales_stock_return_details_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_stock_return_details_id_seq', 8, true);


--
-- Name: sales_stockdetails_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_stockdetails_id_seq', 79, true);


--
-- Name: sales_stockdetailstemp_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_stockdetailstemp_id_seq', 85, true);


--
-- Name: sales_stockmaster_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_stockmaster_id_seq', 52, true);


--
-- Name: sales_stockmasterauthq_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_stockmasterauthq_id_seq', 87, true);


--
-- Name: sales_stockpaymentdetails_id_seq; Type: SEQUENCE SET; Schema: public; Owner: delarship
--

SELECT pg_catalog.setval('public.sales_stockpaymentdetails_id_seq', 1, false);


--
-- Name: appauth_application_log appauth_application_log_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_application_log
    ADD CONSTRAINT appauth_application_log_pkey PRIMARY KEY (id);


--
-- Name: appauth_branch appauth_branch_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_branch
    ADD CONSTRAINT appauth_branch_pkey PRIMARY KEY (branch_code);


--
-- Name: appauth_dashboard_matrix appauth_dashboard_matrix_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_dashboard_matrix
    ADD CONSTRAINT appauth_dashboard_matrix_pkey PRIMARY KEY (id);


--
-- Name: appauth_employees appauth_employees_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_employees
    ADD CONSTRAINT appauth_employees_pkey PRIMARY KEY (employee_id);


--
-- Name: appauth_eodsod_process_list appauth_eodsod_process_list_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_eodsod_process_list
    ADD CONSTRAINT appauth_eodsod_process_list_pkey PRIMARY KEY (id);


--
-- Name: appauth_eodsod_process appauth_eodsod_process_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_eodsod_process
    ADD CONSTRAINT appauth_eodsod_process_pkey PRIMARY KEY (id);


--
-- Name: appauth_global_parameters appauth_global_parameters_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_global_parameters
    ADD CONSTRAINT appauth_global_parameters_pkey PRIMARY KEY (id);


--
-- Name: appauth_holiday_list appauth_holiday_list_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_holiday_list
    ADD CONSTRAINT appauth_holiday_list_pkey PRIMARY KEY (id);


--
-- Name: appauth_inventory_number appauth_inventory_number_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_inventory_number
    ADD CONSTRAINT appauth_inventory_number_pkey PRIMARY KEY (id);


--
-- Name: appauth_loc_country appauth_loc_country_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_loc_country
    ADD CONSTRAINT appauth_loc_country_pkey PRIMARY KEY (country_id);


--
-- Name: appauth_loc_district appauth_loc_district_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_loc_district
    ADD CONSTRAINT appauth_loc_district_pkey PRIMARY KEY (district_id);


--
-- Name: appauth_loc_division appauth_loc_division_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_loc_division
    ADD CONSTRAINT appauth_loc_division_pkey PRIMARY KEY (division_id);


--
-- Name: appauth_loc_region appauth_loc_region_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_loc_region
    ADD CONSTRAINT appauth_loc_region_pkey PRIMARY KEY (region_id);


--
-- Name: appauth_loc_union appauth_loc_union_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_loc_union
    ADD CONSTRAINT appauth_loc_union_pkey PRIMARY KEY (union_id);


--
-- Name: appauth_loc_upazila appauth_loc_upazila_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_loc_upazila
    ADD CONSTRAINT appauth_loc_upazila_pkey PRIMARY KEY (upozila_id);


--
-- Name: appauth_query_table appauth_query_table_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_query_table
    ADD CONSTRAINT appauth_query_table_pkey PRIMARY KEY (id);


--
-- Name: appauth_report_configuration appauth_report_configuration_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_report_configuration
    ADD CONSTRAINT appauth_report_configuration_pkey PRIMARY KEY (id);


--
-- Name: appauth_report_parameter_mapping appauth_report_parameter_mapping_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_report_parameter_mapping
    ADD CONSTRAINT appauth_report_parameter_mapping_pkey PRIMARY KEY (id);


--
-- Name: appauth_report_parameter appauth_report_parameter_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_report_parameter
    ADD CONSTRAINT appauth_report_parameter_pkey PRIMARY KEY (id);


--
-- Name: appauth_report_table_group appauth_report_table_group_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_report_table_group
    ADD CONSTRAINT appauth_report_table_group_pkey PRIMARY KEY (id);


--
-- Name: appauth_report_table_tabular appauth_report_table_tabular_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_report_table_tabular
    ADD CONSTRAINT appauth_report_table_tabular_pkey PRIMARY KEY (id);


--
-- Name: appauth_user_settings appauth_user_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_user_settings
    ADD CONSTRAINT appauth_user_settings_pkey PRIMARY KEY (app_user_id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: delar_application_settings delar_application_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_application_settings
    ADD CONSTRAINT delar_application_settings_pkey PRIMARY KEY (id);


--
-- Name: delar_center delar_center_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_center
    ADD CONSTRAINT delar_center_pkey PRIMARY KEY (center_code);


--
-- Name: delar_client_center_trf_hist delar_client_center_trf_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_client_center_trf_hist
    ADD CONSTRAINT delar_client_center_trf_hist_pkey PRIMARY KEY (id);


--
-- Name: delar_clients_inventory_hist delar_clients_inventory_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_clients_inventory_hist
    ADD CONSTRAINT delar_clients_inventory_hist_pkey PRIMARY KEY (id);


--
-- Name: delar_clients_inventory_status delar_clients_inventory_status_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_clients_inventory_status
    ADD CONSTRAINT delar_clients_inventory_status_pkey PRIMARY KEY (id);


--
-- Name: delar_clients_security_info delar_clients_security_info_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_clients_security_info
    ADD CONSTRAINT delar_clients_security_info_pkey PRIMARY KEY (id);


--
-- Name: delar_employee_center_permit delar_employee_center_permit_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_employee_center_permit
    ADD CONSTRAINT delar_employee_center_permit_pkey PRIMARY KEY (id);


--
-- Name: delar_products_packet_mapping delar_products_packet_mapping_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_products_packet_mapping
    ADD CONSTRAINT delar_products_packet_mapping_pkey PRIMARY KEY (id);


--
-- Name: delar_sales_return_packet delar_sales_return_packet_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_sales_return_packet
    ADD CONSTRAINT delar_sales_return_packet_pkey PRIMARY KEY (id);


--
-- Name: delar_srstage_details delar_srstage_details_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_details
    ADD CONSTRAINT delar_srstage_details_pkey PRIMARY KEY (id);


--
-- Name: delar_srstage_details_temp delar_srstage_details_temp_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_details_temp
    ADD CONSTRAINT delar_srstage_details_temp_pkey PRIMARY KEY (id);


--
-- Name: delar_srstage_inventory_hist delar_srstage_inventory_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_inventory_hist
    ADD CONSTRAINT delar_srstage_inventory_hist_pkey PRIMARY KEY (id);


--
-- Name: delar_srstage_inventory_status delar_srstage_inventory_status_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_inventory_status
    ADD CONSTRAINT delar_srstage_inventory_status_pkey PRIMARY KEY (id);


--
-- Name: delar_srstage_inventory_sum delar_srstage_inventory_sum_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_inventory_sum
    ADD CONSTRAINT delar_srstage_inventory_sum_pkey PRIMARY KEY (id);


--
-- Name: delar_srstage_master delar_srstage_master_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_srstage_master
    ADD CONSTRAINT delar_srstage_master_pkey PRIMARY KEY (id);


--
-- Name: delar_stock_return_packet delar_stock_return_packet_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_stock_return_packet
    ADD CONSTRAINT delar_stock_return_packet_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: ecom_application_settings ecom_application_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_application_settings
    ADD CONSTRAINT ecom_application_settings_pkey PRIMARY KEY (id);


--
-- Name: ecom_delivery_address ecom_delivery_address_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_delivery_address
    ADD CONSTRAINT ecom_delivery_address_pkey PRIMARY KEY (id);


--
-- Name: ecom_ecom_slider ecom_ecom_slider_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_ecom_slider
    ADD CONSTRAINT ecom_ecom_slider_pkey PRIMARY KEY (id);


--
-- Name: ecom_order_details ecom_order_details_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_order_details
    ADD CONSTRAINT ecom_order_details_pkey PRIMARY KEY (id);


--
-- Name: ecom_order_master ecom_order_master_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_order_master
    ADD CONSTRAINT ecom_order_master_pkey PRIMARY KEY (order_number);


--
-- Name: ecom_pagemodel ecom_pagemodel_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_pagemodel
    ADD CONSTRAINT ecom_pagemodel_pkey PRIMARY KEY (id);


--
-- Name: ecom_product_categories ecom_product_categories_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_product_categories
    ADD CONSTRAINT ecom_product_categories_pkey PRIMARY KEY (categories_id);


--
-- Name: ecom_product_group_list ecom_product_group_list_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_product_group_list
    ADD CONSTRAINT ecom_product_group_list_pkey PRIMARY KEY (group_id);


--
-- Name: ecom_product_images ecom_product_images_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_product_images
    ADD CONSTRAINT ecom_product_images_pkey PRIMARY KEY (id);


--
-- Name: ecom_product_sub_categories ecom_product_sub_categories_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_product_sub_categories
    ADD CONSTRAINT ecom_product_sub_categories_pkey PRIMARY KEY (subcategories_id);


--
-- Name: ecom_products ecom_products_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_products
    ADD CONSTRAINT ecom_products_pkey PRIMARY KEY (product_id);


--
-- Name: ecom_user_chart ecom_user_chart_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_user_chart
    ADD CONSTRAINT ecom_user_chart_pkey PRIMARY KEY (id);


--
-- Name: ecom_user_coupon ecom_user_coupon_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_user_coupon
    ADD CONSTRAINT ecom_user_coupon_pkey PRIMARY KEY (coupon_code);


--
-- Name: ecom_user_profile ecom_user_profile_app_user_id_id_key; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_user_profile
    ADD CONSTRAINT ecom_user_profile_app_user_id_id_key UNIQUE (app_user_id_id);


--
-- Name: ecom_user_profile ecom_user_profile_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_user_profile
    ADD CONSTRAINT ecom_user_profile_pkey PRIMARY KEY (id);


--
-- Name: ecom_web_user_info ecom_web_user_info_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_web_user_info
    ADD CONSTRAINT ecom_web_user_info_pkey PRIMARY KEY (webuser_phone);


--
-- Name: finance_account_charges finance_account_charges_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_account_charges
    ADD CONSTRAINT finance_account_charges_pkey PRIMARY KEY (id);


--
-- Name: finance_account_type finance_account_type_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_account_type
    ADD CONSTRAINT finance_account_type_pkey PRIMARY KEY (account_type_code);


--
-- Name: finance_accounts_balance_hist finance_accounts_balance_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_accounts_balance_hist
    ADD CONSTRAINT finance_accounts_balance_hist_pkey PRIMARY KEY (id);


--
-- Name: finance_accounts_balance finance_accounts_balance_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_accounts_balance
    ADD CONSTRAINT finance_accounts_balance_pkey PRIMARY KEY (account_number);


--
-- Name: finance_accounts_balmon_hist finance_accounts_balmon_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_accounts_balmon_hist
    ADD CONSTRAINT finance_accounts_balmon_hist_pkey PRIMARY KEY (id);


--
-- Name: finance_application_settings finance_application_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_application_settings
    ADD CONSTRAINT finance_application_settings_pkey PRIMARY KEY (id);


--
-- Name: finance_cash_and_bank_ledger finance_cash_and_bank_ledger_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_cash_and_bank_ledger
    ADD CONSTRAINT finance_cash_and_bank_ledger_pkey PRIMARY KEY (id);


--
-- Name: finance_cash_transaction finance_cash_transaction_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_cash_transaction
    ADD CONSTRAINT finance_cash_transaction_pkey PRIMARY KEY (id);


--
-- Name: finance_charges finance_charges_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_charges
    ADD CONSTRAINT finance_charges_pkey PRIMARY KEY (charges_id);


--
-- Name: finance_client_account_mapping finance_client_account_mapping_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_client_account_mapping
    ADD CONSTRAINT finance_client_account_mapping_pkey PRIMARY KEY (id);


--
-- Name: finance_client_type finance_client_type_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_client_type
    ADD CONSTRAINT finance_client_type_pkey PRIMARY KEY (client_type_code);


--
-- Name: finance_deposit_closing finance_deposit_closing_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_deposit_closing
    ADD CONSTRAINT finance_deposit_closing_pkey PRIMARY KEY (id);


--
-- Name: finance_deposit_payment finance_deposit_payment_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_deposit_payment
    ADD CONSTRAINT finance_deposit_payment_pkey PRIMARY KEY (id);


--
-- Name: finance_deposit_receive finance_deposit_receive_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_deposit_receive
    ADD CONSTRAINT finance_deposit_receive_pkey PRIMARY KEY (id);


--
-- Name: finance_deposit_transfer finance_deposit_transfer_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_deposit_transfer
    ADD CONSTRAINT finance_deposit_transfer_pkey PRIMARY KEY (id);


--
-- Name: finance_document_register finance_document_register_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_document_register
    ADD CONSTRAINT finance_document_register_pkey PRIMARY KEY (id);


--
-- Name: finance_general_ledger finance_general_ledger_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_general_ledger
    ADD CONSTRAINT finance_general_ledger_pkey PRIMARY KEY (gl_code);


--
-- Name: finance_led_rec_pay_bal_hist finance_led_rec_pay_bal_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_led_rec_pay_bal_hist
    ADD CONSTRAINT finance_led_rec_pay_bal_hist_pkey PRIMARY KEY (id);


--
-- Name: finance_led_rec_pay_balmon_hist finance_led_rec_pay_balmon_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_led_rec_pay_balmon_hist
    ADD CONSTRAINT finance_led_rec_pay_balmon_hist_pkey PRIMARY KEY (id);


--
-- Name: finance_ledger_balance_hist finance_ledger_balance_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_balance_hist
    ADD CONSTRAINT finance_ledger_balance_hist_pkey PRIMARY KEY (id);


--
-- Name: finance_ledger_balance finance_ledger_balance_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_balance
    ADD CONSTRAINT finance_ledger_balance_pkey PRIMARY KEY (id);


--
-- Name: finance_ledger_balmon_hist finance_ledger_balmon_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_balmon_hist
    ADD CONSTRAINT finance_ledger_balmon_hist_pkey PRIMARY KEY (id);


--
-- Name: finance_ledger_report_balance finance_ledger_report_balance_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_report_balance
    ADD CONSTRAINT finance_ledger_report_balance_pkey PRIMARY KEY (id);


--
-- Name: finance_ledger_report_param finance_ledger_report_param_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_report_param
    ADD CONSTRAINT finance_ledger_report_param_pkey PRIMARY KEY (id);


--
-- Name: finance_ledger_transaction_type finance_ledger_transaction_type_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_transaction_type
    ADD CONSTRAINT finance_ledger_transaction_type_pkey PRIMARY KEY (id);


--
-- Name: finance_tran_telbal_details finance_tran_telbal_details_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_tran_telbal_details
    ADD CONSTRAINT finance_tran_telbal_details_pkey PRIMARY KEY (id);


--
-- Name: finance_transaction_details finance_transaction_details_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_details
    ADD CONSTRAINT finance_transaction_details_pkey PRIMARY KEY (id);


--
-- Name: finance_transaction_ibr finance_transaction_ibr_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_ibr
    ADD CONSTRAINT finance_transaction_ibr_pkey PRIMARY KEY (transaction_id);


--
-- Name: finance_transaction_master finance_transaction_master_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_master
    ADD CONSTRAINT finance_transaction_master_pkey PRIMARY KEY (id);


--
-- Name: finance_transaction_table finance_transaction_table_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_table
    ADD CONSTRAINT finance_transaction_table_pkey PRIMARY KEY (id);


--
-- Name: finance_transaction_telbal finance_transaction_telbal_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_telbal
    ADD CONSTRAINT finance_transaction_telbal_pkey PRIMARY KEY (teller_id);


--
-- Name: finance_transaction_type finance_transaction_type_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_type
    ADD CONSTRAINT finance_transaction_type_pkey PRIMARY KEY (tran_type_id);


--
-- Name: finance_transfer_tran finance_transfer_tran_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transfer_tran
    ADD CONSTRAINT finance_transfer_tran_pkey PRIMARY KEY (id);


--
-- Name: hrm_advance_salary hrm_advance_salary_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_advance_salary
    ADD CONSTRAINT hrm_advance_salary_pkey PRIMARY KEY (id);


--
-- Name: hrm_allowance_payment hrm_allowance_payment_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_allowance_payment
    ADD CONSTRAINT hrm_allowance_payment_pkey PRIMARY KEY (id);


--
-- Name: hrm_attendance_card_log hrm_attendance_card_log_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_card_log
    ADD CONSTRAINT hrm_attendance_card_log_pkey PRIMARY KEY (id);


--
-- Name: hrm_attendance_log hrm_attendance_log_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_log
    ADD CONSTRAINT hrm_attendance_log_pkey PRIMARY KEY (id);


--
-- Name: hrm_attendance_schedule hrm_attendance_schedule_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_schedule
    ADD CONSTRAINT hrm_attendance_schedule_pkey PRIMARY KEY (schedule_id);


--
-- Name: hrm_bank_info hrm_bank_info_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_bank_info
    ADD CONSTRAINT hrm_bank_info_pkey PRIMARY KEY (bank_id);


--
-- Name: hrm_business_unit hrm_business_unit_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_business_unit
    ADD CONSTRAINT hrm_business_unit_pkey PRIMARY KEY (bunit_id);


--
-- Name: hrm_company_information hrm_company_information_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_company_information
    ADD CONSTRAINT hrm_company_information_pkey PRIMARY KEY (company_id);


--
-- Name: hrm_company_office hrm_company_office_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_company_office
    ADD CONSTRAINT hrm_company_office_pkey PRIMARY KEY (office_id);


--
-- Name: hrm_department_info hrm_department_info_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_department_info
    ADD CONSTRAINT hrm_department_info_pkey PRIMARY KEY (department_id);


--
-- Name: hrm_education_degree hrm_education_degree_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_education_degree
    ADD CONSTRAINT hrm_education_degree_pkey PRIMARY KEY (degree_id);


--
-- Name: hrm_employee_designation hrm_employee_designation_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_designation
    ADD CONSTRAINT hrm_employee_designation_pkey PRIMARY KEY (desig_id);


--
-- Name: hrm_employee_details hrm_employee_details_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_pkey PRIMARY KEY (employee_id);


--
-- Name: hrm_employee_document hrm_employee_document_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_document
    ADD CONSTRAINT hrm_employee_document_pkey PRIMARY KEY (id);


--
-- Name: hrm_employee_document_type hrm_employee_document_type_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_document_type
    ADD CONSTRAINT hrm_employee_document_type_pkey PRIMARY KEY (document_type_id);


--
-- Name: hrm_employee_experience hrm_employee_experience_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_experience
    ADD CONSTRAINT hrm_employee_experience_pkey PRIMARY KEY (id);


--
-- Name: hrm_employee_holyday hrm_employee_holyday_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_holyday
    ADD CONSTRAINT hrm_employee_holyday_pkey PRIMARY KEY (holiday_sl_no);


--
-- Name: hrm_employee_nominee hrm_employee_nominee_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_nominee
    ADD CONSTRAINT hrm_employee_nominee_pkey PRIMARY KEY (id);


--
-- Name: hrm_employee_training hrm_employee_training_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_training
    ADD CONSTRAINT hrm_employee_training_pkey PRIMARY KEY (id);


--
-- Name: hrm_employment_type hrm_employment_type_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employment_type
    ADD CONSTRAINT hrm_employment_type_pkey PRIMARY KEY (emptype_id);


--
-- Name: hrm_extra_allowance hrm_extra_allowance_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_extra_allowance
    ADD CONSTRAINT hrm_extra_allowance_pkey PRIMARY KEY (allowance_id);


--
-- Name: hrm_holyday_info hrm_holyday_info_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_holyday_info
    ADD CONSTRAINT hrm_holyday_info_pkey PRIMARY KEY (holiday_sl_no);


--
-- Name: hrm_holyday_type hrm_holyday_type_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_holyday_type
    ADD CONSTRAINT hrm_holyday_type_pkey PRIMARY KEY (holiday_type_id);


--
-- Name: hrm_leave_application hrm_leave_application_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_leave_application
    ADD CONSTRAINT hrm_leave_application_pkey PRIMARY KEY (id);


--
-- Name: hrm_leave_info hrm_leave_info_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_leave_info
    ADD CONSTRAINT hrm_leave_info_pkey PRIMARY KEY (leave_id);


--
-- Name: hrm_others_deduction hrm_others_deduction_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_others_deduction
    ADD CONSTRAINT hrm_others_deduction_pkey PRIMARY KEY (id);


--
-- Name: hrm_pay_bill hrm_pay_bill_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_pay_bill
    ADD CONSTRAINT hrm_pay_bill_pkey PRIMARY KEY (bill_id);


--
-- Name: hrm_salary_scale_bonous hrm_salary_scale_bonous_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_salary_scale_bonous
    ADD CONSTRAINT hrm_salary_scale_bonous_pkey PRIMARY KEY (bonus_id);


--
-- Name: hrm_salary_scale_details hrm_salary_scale_details_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_salary_scale_details
    ADD CONSTRAINT hrm_salary_scale_details_pkey PRIMARY KEY (salsdtlcale_id);


--
-- Name: hrm_salary_scale hrm_salary_scale_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_salary_scale
    ADD CONSTRAINT hrm_salary_scale_pkey PRIMARY KEY (salscale_id);


--
-- Name: hrm_shift_info_hist hrm_shift_info_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_shift_info_hist
    ADD CONSTRAINT hrm_shift_info_hist_pkey PRIMARY KEY (id);


--
-- Name: hrm_shift_info hrm_shift_info_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_shift_info
    ADD CONSTRAINT hrm_shift_info_pkey PRIMARY KEY (shift_id);


--
-- Name: sales_all_trandtl sales_all_trandtl_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_all_trandtl
    ADD CONSTRAINT sales_all_trandtl_pkey PRIMARY KEY (id);


--
-- Name: sales_application_settings sales_application_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_application_settings
    ADD CONSTRAINT sales_application_settings_pkey PRIMARY KEY (id);


--
-- Name: sales_client_balance sales_client_balance_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_balance
    ADD CONSTRAINT sales_client_balance_pkey PRIMARY KEY (id);


--
-- Name: sales_client_closing sales_client_closing_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_closing
    ADD CONSTRAINT sales_client_closing_pkey PRIMARY KEY (id);


--
-- Name: sales_client_id_changes_hist sales_client_id_changes_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_id_changes_hist
    ADD CONSTRAINT sales_client_id_changes_hist_pkey PRIMARY KEY (id);


--
-- Name: sales_client_photo_sign sales_client_photo_sign_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_photo_sign
    ADD CONSTRAINT sales_client_photo_sign_pkey PRIMARY KEY (id);


--
-- Name: sales_client_profit_history sales_client_profit_history_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_profit_history
    ADD CONSTRAINT sales_client_profit_history_pkey PRIMARY KEY (id);


--
-- Name: sales_clients sales_clients_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_clients
    ADD CONSTRAINT sales_clients_pkey PRIMARY KEY (client_id);


--
-- Name: sales_delar_security_info sales_delar_security_info_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_delar_security_info
    ADD CONSTRAINT sales_delar_security_info_pkey PRIMARY KEY (id);


--
-- Name: sales_emi_history sales_emi_history_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_emi_history
    ADD CONSTRAINT sales_emi_history_pkey PRIMARY KEY (id);


--
-- Name: sales_emi_receive sales_emi_receive_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_emi_receive
    ADD CONSTRAINT sales_emi_receive_pkey PRIMARY KEY (id);


--
-- Name: sales_emi_settings sales_emi_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_emi_settings
    ADD CONSTRAINT sales_emi_settings_pkey PRIMARY KEY (id);


--
-- Name: sales_emi_setup sales_emi_setup_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_emi_setup
    ADD CONSTRAINT sales_emi_setup_pkey PRIMARY KEY (id);


--
-- Name: sales_fees_history sales_fees_history_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_fees_history
    ADD CONSTRAINT sales_fees_history_pkey PRIMARY KEY (id);


--
-- Name: sales_nominee_information sales_nominee_information_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_nominee_information
    ADD CONSTRAINT sales_nominee_information_pkey PRIMARY KEY (id);


--
-- Name: sales_order_details sales_order_details_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_order_details
    ADD CONSTRAINT sales_order_details_pkey PRIMARY KEY (id);


--
-- Name: sales_order_master sales_order_master_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_order_master
    ADD CONSTRAINT sales_order_master_pkey PRIMARY KEY (id);


--
-- Name: sales_product_damage_details sales_product_damage_details_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_product_damage_details
    ADD CONSTRAINT sales_product_damage_details_pkey PRIMARY KEY (id);


--
-- Name: sales_product_offer_list sales_product_offer_list_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_product_offer_list
    ADD CONSTRAINT sales_product_offer_list_pkey PRIMARY KEY (id);


--
-- Name: sales_product_offer_package sales_product_offer_package_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_product_offer_package
    ADD CONSTRAINT sales_product_offer_package_pkey PRIMARY KEY (id);


--
-- Name: sales_product_price_list sales_product_price_list_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_product_price_list
    ADD CONSTRAINT sales_product_price_list_pkey PRIMARY KEY (id);


--
-- Name: sales_products_brand sales_products_brand_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_products_brand
    ADD CONSTRAINT sales_products_brand_pkey PRIMARY KEY (brand_id);


--
-- Name: sales_products_group sales_products_group_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_products_group
    ADD CONSTRAINT sales_products_group_pkey PRIMARY KEY (group_id);


--
-- Name: sales_products_inventory_hist sales_products_inventory_hist_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_products_inventory_hist
    ADD CONSTRAINT sales_products_inventory_hist_pkey PRIMARY KEY (id);


--
-- Name: sales_products_inventory_status sales_products_inventory_status_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_products_inventory_status
    ADD CONSTRAINT sales_products_inventory_status_pkey PRIMARY KEY (id);


--
-- Name: sales_products sales_products_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_products
    ADD CONSTRAINT sales_products_pkey PRIMARY KEY (product_id);


--
-- Name: sales_products_price_type sales_products_price_type_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_products_price_type
    ADD CONSTRAINT sales_products_price_type_pkey PRIMARY KEY (id);


--
-- Name: sales_purchase_bill sales_purchase_bill_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_purchase_bill
    ADD CONSTRAINT sales_purchase_bill_pkey PRIMARY KEY (id);


--
-- Name: sales_purchase_order_dtl sales_purchase_order_dtl_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_purchase_order_dtl
    ADD CONSTRAINT sales_purchase_order_dtl_pkey PRIMARY KEY (id);


--
-- Name: sales_purchase_order_dtl_temp sales_purchase_order_dtl_temp_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_purchase_order_dtl_temp
    ADD CONSTRAINT sales_purchase_order_dtl_temp_pkey PRIMARY KEY (id);


--
-- Name: sales_purchase_order_mst sales_purchase_order_mst_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_purchase_order_mst
    ADD CONSTRAINT sales_purchase_order_mst_pkey PRIMARY KEY (id);


--
-- Name: sales_purchasemasterauthq sales_purchasemasterauthq_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_purchasemasterauthq
    ADD CONSTRAINT sales_purchasemasterauthq_pkey PRIMARY KEY (id);


--
-- Name: sales_sales_details sales_sales_details_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_sales_details
    ADD CONSTRAINT sales_sales_details_pkey PRIMARY KEY (id);


--
-- Name: sales_sales_details_temp sales_sales_details_temp_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_sales_details_temp
    ADD CONSTRAINT sales_sales_details_temp_pkey PRIMARY KEY (id);


--
-- Name: sales_sales_master sales_sales_master_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_sales_master
    ADD CONSTRAINT sales_sales_master_pkey PRIMARY KEY (id);


--
-- Name: sales_sales_return_details sales_sales_return_details_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_sales_return_details
    ADD CONSTRAINT sales_sales_return_details_pkey PRIMARY KEY (id);


--
-- Name: sales_showroom sales_showroom_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_showroom
    ADD CONSTRAINT sales_showroom_pkey PRIMARY KEY (id);


--
-- Name: sales_stock_quantity_transfer sales_stock_quantity_transfer_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stock_quantity_transfer
    ADD CONSTRAINT sales_stock_quantity_transfer_pkey PRIMARY KEY (id);


--
-- Name: sales_stock_return_details sales_stock_return_details_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stock_return_details
    ADD CONSTRAINT sales_stock_return_details_pkey PRIMARY KEY (id);


--
-- Name: sales_stockdetails sales_stockdetails_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stockdetails
    ADD CONSTRAINT sales_stockdetails_pkey PRIMARY KEY (id);


--
-- Name: sales_stockdetailstemp sales_stockdetailstemp_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stockdetailstemp
    ADD CONSTRAINT sales_stockdetailstemp_pkey PRIMARY KEY (id);


--
-- Name: sales_stockmaster sales_stockmaster_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stockmaster
    ADD CONSTRAINT sales_stockmaster_pkey PRIMARY KEY (id);


--
-- Name: sales_stockmasterauthq sales_stockmasterauthq_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stockmasterauthq
    ADD CONSTRAINT sales_stockmasterauthq_pkey PRIMARY KEY (id);


--
-- Name: sales_stockpaymentdetails sales_stockpaymentdetails_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stockpaymentdetails
    ADD CONSTRAINT sales_stockpaymentdetails_pkey PRIMARY KEY (id);


--
-- Name: sales_supplier_information sales_supplier_information_pkey; Type: CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_supplier_information
    ADD CONSTRAINT sales_supplier_information_pkey PRIMARY KEY (supp_id);


--
-- Name: appauth_branch_country_id_66153359; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_branch_country_id_66153359 ON public.appauth_branch USING btree (country_id);


--
-- Name: appauth_branch_country_id_66153359_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_branch_country_id_66153359_like ON public.appauth_branch USING btree (country_id varchar_pattern_ops);


--
-- Name: appauth_branch_district_id_85d92163; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_branch_district_id_85d92163 ON public.appauth_branch USING btree (district_id);


--
-- Name: appauth_branch_district_id_85d92163_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_branch_district_id_85d92163_like ON public.appauth_branch USING btree (district_id varchar_pattern_ops);


--
-- Name: appauth_branch_division_id_32ed7ad4; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_branch_division_id_32ed7ad4 ON public.appauth_branch USING btree (division_id);


--
-- Name: appauth_branch_division_id_32ed7ad4_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_branch_division_id_32ed7ad4_like ON public.appauth_branch USING btree (division_id varchar_pattern_ops);


--
-- Name: appauth_branch_union_id_80c99188; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_branch_union_id_80c99188 ON public.appauth_branch USING btree (union_id);


--
-- Name: appauth_branch_union_id_80c99188_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_branch_union_id_80c99188_like ON public.appauth_branch USING btree (union_id varchar_pattern_ops);


--
-- Name: appauth_branch_upozila_id_9f5c9eba; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_branch_upozila_id_9f5c9eba ON public.appauth_branch USING btree (upozila_id);


--
-- Name: appauth_branch_upozila_id_9f5c9eba_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_branch_upozila_id_9f5c9eba_like ON public.appauth_branch USING btree (upozila_id varchar_pattern_ops);


--
-- Name: appauth_employees_branch_code_93e4be7c; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_employees_branch_code_93e4be7c ON public.appauth_employees USING btree (branch_code);


--
-- Name: appauth_employees_employee_id_3d01a50f_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_employees_employee_id_3d01a50f_like ON public.appauth_employees USING btree (employee_id varchar_pattern_ops);


--
-- Name: appauth_eodsod_process_branch_code_c4ed3649; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_eodsod_process_branch_code_c4ed3649 ON public.appauth_eodsod_process USING btree (branch_code);


--
-- Name: appauth_loc_country_country_id_6d353cf9_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_country_country_id_6d353cf9_like ON public.appauth_loc_country USING btree (country_id varchar_pattern_ops);


--
-- Name: appauth_loc_district_district_id_eb76c489_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_district_district_id_eb76c489_like ON public.appauth_loc_district USING btree (district_id varchar_pattern_ops);


--
-- Name: appauth_loc_district_division_id_648258af; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_district_division_id_648258af ON public.appauth_loc_district USING btree (division_id);


--
-- Name: appauth_loc_district_division_id_648258af_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_district_division_id_648258af_like ON public.appauth_loc_district USING btree (division_id varchar_pattern_ops);


--
-- Name: appauth_loc_division_country_id_98db27d5; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_division_country_id_98db27d5 ON public.appauth_loc_division USING btree (country_id);


--
-- Name: appauth_loc_division_country_id_98db27d5_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_division_country_id_98db27d5_like ON public.appauth_loc_division USING btree (country_id varchar_pattern_ops);


--
-- Name: appauth_loc_division_division_id_9273568e_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_division_division_id_9273568e_like ON public.appauth_loc_division USING btree (division_id varchar_pattern_ops);


--
-- Name: appauth_loc_region_region_id_4032efb2_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_region_region_id_4032efb2_like ON public.appauth_loc_region USING btree (region_id varchar_pattern_ops);


--
-- Name: appauth_loc_region_union_id_16da29be; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_region_union_id_16da29be ON public.appauth_loc_region USING btree (union_id);


--
-- Name: appauth_loc_region_union_id_16da29be_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_region_union_id_16da29be_like ON public.appauth_loc_region USING btree (union_id varchar_pattern_ops);


--
-- Name: appauth_loc_union_union_id_f0c8ca06_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_union_union_id_f0c8ca06_like ON public.appauth_loc_union USING btree (union_id varchar_pattern_ops);


--
-- Name: appauth_loc_union_upozila_id_98fc1437; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_union_upozila_id_98fc1437 ON public.appauth_loc_union USING btree (upozila_id);


--
-- Name: appauth_loc_union_upozila_id_98fc1437_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_union_upozila_id_98fc1437_like ON public.appauth_loc_union USING btree (upozila_id varchar_pattern_ops);


--
-- Name: appauth_loc_upazila_district_id_8a88d57d; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_upazila_district_id_8a88d57d ON public.appauth_loc_upazila USING btree (district_id);


--
-- Name: appauth_loc_upazila_district_id_8a88d57d_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_upazila_district_id_8a88d57d_like ON public.appauth_loc_upazila USING btree (district_id varchar_pattern_ops);


--
-- Name: appauth_loc_upazila_upozila_id_ecd55712_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_loc_upazila_upozila_id_ecd55712_like ON public.appauth_loc_upazila USING btree (upozila_id varchar_pattern_ops);


--
-- Name: appauth_user_settings_app_user_id_a0386dc3_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_user_settings_app_user_id_a0386dc3_like ON public.appauth_user_settings USING btree (app_user_id varchar_pattern_ops);


--
-- Name: appauth_user_settings_employee_id_356174c8; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_user_settings_employee_id_356174c8 ON public.appauth_user_settings USING btree (employee_id);


--
-- Name: appauth_user_settings_employee_id_356174c8_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX appauth_user_settings_employee_id_356174c8_like ON public.appauth_user_settings USING btree (employee_id varchar_pattern_ops);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: delar_center_center_code_517612d2_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX delar_center_center_code_517612d2_like ON public.delar_center USING btree (center_code varchar_pattern_ops);


--
-- Name: delar_center_center_employee_id_a389429f; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX delar_center_center_employee_id_a389429f ON public.delar_center USING btree (center_employee_id);


--
-- Name: delar_center_center_employee_id_a389429f_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX delar_center_center_employee_id_a389429f_like ON public.delar_center USING btree (center_employee_id varchar_pattern_ops);


--
-- Name: delar_center_center_region_id_56bee516; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX delar_center_center_region_id_56bee516 ON public.delar_center USING btree (center_region_id);


--
-- Name: delar_center_center_region_id_56bee516_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX delar_center_center_region_id_56bee516_like ON public.delar_center USING btree (center_region_id varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: ecom_order_master_delivery_address_id_cefc9a7e; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_order_master_delivery_address_id_cefc9a7e ON public.ecom_order_master USING btree (delivery_address_id);


--
-- Name: ecom_order_master_order_number_47bcbcec_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_order_master_order_number_47bcbcec_like ON public.ecom_order_master USING btree (order_number varchar_pattern_ops);


--
-- Name: ecom_product_categories_categories_id_9549486d_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_product_categories_categories_id_9549486d_like ON public.ecom_product_categories USING btree (categories_id varchar_pattern_ops);


--
-- Name: ecom_product_group_list_categories_id_9e726cf6; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_product_group_list_categories_id_9e726cf6 ON public.ecom_product_group_list USING btree (categories_id);


--
-- Name: ecom_product_group_list_categories_id_9e726cf6_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_product_group_list_categories_id_9e726cf6_like ON public.ecom_product_group_list USING btree (categories_id varchar_pattern_ops);


--
-- Name: ecom_product_group_list_group_id_e88c9602_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_product_group_list_group_id_e88c9602_like ON public.ecom_product_group_list USING btree (group_id varchar_pattern_ops);


--
-- Name: ecom_product_group_list_subcategories_id_c416a73d; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_product_group_list_subcategories_id_c416a73d ON public.ecom_product_group_list USING btree (subcategories_id);


--
-- Name: ecom_product_group_list_subcategories_id_c416a73d_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_product_group_list_subcategories_id_c416a73d_like ON public.ecom_product_group_list USING btree (subcategories_id varchar_pattern_ops);


--
-- Name: ecom_product_images_product_id_ffccd58e; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_product_images_product_id_ffccd58e ON public.ecom_product_images USING btree (product_id);


--
-- Name: ecom_product_images_product_id_ffccd58e_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_product_images_product_id_ffccd58e_like ON public.ecom_product_images USING btree (product_id varchar_pattern_ops);


--
-- Name: ecom_product_sub_categories_categories_id_ceecdf2e; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_product_sub_categories_categories_id_ceecdf2e ON public.ecom_product_sub_categories USING btree (categories_id);


--
-- Name: ecom_product_sub_categories_categories_id_ceecdf2e_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_product_sub_categories_categories_id_ceecdf2e_like ON public.ecom_product_sub_categories USING btree (categories_id varchar_pattern_ops);


--
-- Name: ecom_product_sub_categories_subcategories_id_12ea19a3_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_product_sub_categories_subcategories_id_12ea19a3_like ON public.ecom_product_sub_categories USING btree (subcategories_id varchar_pattern_ops);


--
-- Name: ecom_products_category_id_2aad9a6d; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_products_category_id_2aad9a6d ON public.ecom_products USING btree (category_id);


--
-- Name: ecom_products_category_id_2aad9a6d_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_products_category_id_2aad9a6d_like ON public.ecom_products USING btree (category_id varchar_pattern_ops);


--
-- Name: ecom_products_product_brand_id_8f30aa72; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_products_product_brand_id_8f30aa72 ON public.ecom_products USING btree (product_brand_id);


--
-- Name: ecom_products_product_brand_id_8f30aa72_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_products_product_brand_id_8f30aa72_like ON public.ecom_products USING btree (product_brand_id varchar_pattern_ops);


--
-- Name: ecom_products_product_id_f586a884_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_products_product_id_f586a884_like ON public.ecom_products USING btree (product_id varchar_pattern_ops);


--
-- Name: ecom_products_sub_category_id_8a546a86; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_products_sub_category_id_8a546a86 ON public.ecom_products USING btree (sub_category_id);


--
-- Name: ecom_products_sub_category_id_8a546a86_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_products_sub_category_id_8a546a86_like ON public.ecom_products USING btree (sub_category_id varchar_pattern_ops);


--
-- Name: ecom_user_coupon_coupon_code_838810cd_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_user_coupon_coupon_code_838810cd_like ON public.ecom_user_coupon USING btree (coupon_code varchar_pattern_ops);


--
-- Name: ecom_web_user_info_webuser_phone_b3ededa7_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX ecom_web_user_info_webuser_phone_b3ededa7_like ON public.ecom_web_user_info USING btree (webuser_phone varchar_pattern_ops);


--
-- Name: finance_account_type_account_ledger_code_9d224dcc; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_account_type_account_ledger_code_9d224dcc ON public.finance_account_type USING btree (account_ledger_code);


--
-- Name: finance_account_type_account_ledger_code_9d224dcc_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_account_type_account_ledger_code_9d224dcc_like ON public.finance_account_type USING btree (account_ledger_code varchar_pattern_ops);


--
-- Name: finance_account_type_account_type_code_ed6b2f51_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_account_type_account_type_code_ed6b2f51_like ON public.finance_account_type USING btree (account_type_code varchar_pattern_ops);


--
-- Name: finance_account_type_expense_ledger_6ca248c7; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_account_type_expense_ledger_6ca248c7 ON public.finance_account_type USING btree (expense_ledger);


--
-- Name: finance_account_type_expense_ledger_6ca248c7_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_account_type_expense_ledger_6ca248c7_like ON public.finance_account_type USING btree (expense_ledger varchar_pattern_ops);


--
-- Name: finance_account_type_income_ledger_574c346a; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_account_type_income_ledger_574c346a ON public.finance_account_type USING btree (income_ledger);


--
-- Name: finance_account_type_income_ledger_574c346a_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_account_type_income_ledger_574c346a_like ON public.finance_account_type USING btree (income_ledger varchar_pattern_ops);


--
-- Name: finance_account_type_payable_ledger_b8c86dfb; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_account_type_payable_ledger_b8c86dfb ON public.finance_account_type USING btree (payable_ledger);


--
-- Name: finance_account_type_payable_ledger_b8c86dfb_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_account_type_payable_ledger_b8c86dfb_like ON public.finance_account_type USING btree (payable_ledger varchar_pattern_ops);


--
-- Name: finance_account_type_receivable_ledger_c6c423aa; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_account_type_receivable_ledger_c6c423aa ON public.finance_account_type USING btree (receivable_ledger);


--
-- Name: finance_account_type_receivable_ledger_c6c423aa_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_account_type_receivable_ledger_c6c423aa_like ON public.finance_account_type USING btree (receivable_ledger varchar_pattern_ops);


--
-- Name: finance_accounts_balance_account_number_ef0d7218_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_accounts_balance_account_number_ef0d7218_like ON public.finance_accounts_balance USING btree (account_number varchar_pattern_ops);


--
-- Name: finance_accounts_balance_hist_branch_code_14b5049b; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_accounts_balance_hist_branch_code_14b5049b ON public.finance_accounts_balance_hist USING btree (branch_code);


--
-- Name: finance_accounts_balmon_hist_branch_code_99cb7f74; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_accounts_balmon_hist_branch_code_99cb7f74 ON public.finance_accounts_balmon_hist USING btree (branch_code);


--
-- Name: finance_cash_and_bank_ledger_branch_code_9d5fabf7; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_cash_and_bank_ledger_branch_code_9d5fabf7 ON public.finance_cash_and_bank_ledger USING btree (branch_code);


--
-- Name: finance_cash_and_bank_ledger_gl_code_c3ae6403; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_cash_and_bank_ledger_gl_code_c3ae6403 ON public.finance_cash_and_bank_ledger USING btree (gl_code);


--
-- Name: finance_cash_and_bank_ledger_gl_code_c3ae6403_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_cash_and_bank_ledger_gl_code_c3ae6403_like ON public.finance_cash_and_bank_ledger USING btree (gl_code varchar_pattern_ops);


--
-- Name: finance_charges_charges_id_6654d089_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_charges_charges_id_6654d089_like ON public.finance_charges USING btree (charges_id varchar_pattern_ops);


--
-- Name: finance_charges_charges_ledger_code_981244af; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_charges_charges_ledger_code_981244af ON public.finance_charges USING btree (charges_ledger_code);


--
-- Name: finance_charges_charges_ledger_code_981244af_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_charges_charges_ledger_code_981244af_like ON public.finance_charges USING btree (charges_ledger_code varchar_pattern_ops);


--
-- Name: finance_client_account_mapping_account_type_code_7063d77a; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_client_account_mapping_account_type_code_7063d77a ON public.finance_client_account_mapping USING btree (account_type_code);


--
-- Name: finance_client_account_mapping_account_type_code_7063d77a_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_client_account_mapping_account_type_code_7063d77a_like ON public.finance_client_account_mapping USING btree (account_type_code varchar_pattern_ops);


--
-- Name: finance_client_account_mapping_client_type_code_338d0742; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_client_account_mapping_client_type_code_338d0742 ON public.finance_client_account_mapping USING btree (client_type_code);


--
-- Name: finance_client_account_mapping_client_type_code_338d0742_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_client_account_mapping_client_type_code_338d0742_like ON public.finance_client_account_mapping USING btree (client_type_code varchar_pattern_ops);


--
-- Name: finance_client_type_client_type_code_7e9963ff_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_client_type_client_type_code_7e9963ff_like ON public.finance_client_type USING btree (client_type_code varchar_pattern_ops);


--
-- Name: finance_general_ledger_gl_code_275ef5b2_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_general_ledger_gl_code_275ef5b2_like ON public.finance_general_ledger USING btree (gl_code varchar_pattern_ops);


--
-- Name: finance_general_ledger_parent_code_f053aacb; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_general_ledger_parent_code_f053aacb ON public.finance_general_ledger USING btree (parent_code);


--
-- Name: finance_general_ledger_parent_code_f053aacb_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_general_ledger_parent_code_f053aacb_like ON public.finance_general_ledger USING btree (parent_code varchar_pattern_ops);


--
-- Name: finance_ledger_balance_gl_code_e3cac0f2; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_ledger_balance_gl_code_e3cac0f2 ON public.finance_ledger_balance USING btree (gl_code);


--
-- Name: finance_ledger_balance_gl_code_e3cac0f2_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_ledger_balance_gl_code_e3cac0f2_like ON public.finance_ledger_balance USING btree (gl_code varchar_pattern_ops);


--
-- Name: finance_ledger_transaction_type_gl_code_cf88ecd1; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_ledger_transaction_type_gl_code_cf88ecd1 ON public.finance_ledger_transaction_type USING btree (gl_code);


--
-- Name: finance_ledger_transaction_type_gl_code_cf88ecd1_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_ledger_transaction_type_gl_code_cf88ecd1_like ON public.finance_ledger_transaction_type USING btree (gl_code varchar_pattern_ops);


--
-- Name: finance_ledger_transaction_type_tran_type_id_48d5a37c; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_ledger_transaction_type_tran_type_id_48d5a37c ON public.finance_ledger_transaction_type USING btree (tran_type_id);


--
-- Name: finance_ledger_transaction_type_tran_type_id_48d5a37c_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_ledger_transaction_type_tran_type_id_48d5a37c_like ON public.finance_ledger_transaction_type USING btree (tran_type_id varchar_pattern_ops);


--
-- Name: finance_transaction_ibr_transaction_id_bc92bc17_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_ibr_transaction_id_bc92bc17_like ON public.finance_transaction_ibr USING btree (transaction_id varchar_pattern_ops);


--
-- Name: finance_transaction_telbal_teller_id_089d5343_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_telbal_teller_id_089d5343_like ON public.finance_transaction_telbal USING btree (teller_id varchar_pattern_ops);


--
-- Name: finance_transaction_type_credit_gl_code_fa25fb08; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_type_credit_gl_code_fa25fb08 ON public.finance_transaction_type USING btree (credit_gl_code);


--
-- Name: finance_transaction_type_credit_gl_code_fa25fb08_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_type_credit_gl_code_fa25fb08_like ON public.finance_transaction_type USING btree (credit_gl_code varchar_pattern_ops);


--
-- Name: finance_transaction_type_debit_gl_code_37fb82e2; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_type_debit_gl_code_37fb82e2 ON public.finance_transaction_type USING btree (debit_gl_code);


--
-- Name: finance_transaction_type_debit_gl_code_37fb82e2_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_type_debit_gl_code_37fb82e2_like ON public.finance_transaction_type USING btree (debit_gl_code varchar_pattern_ops);


--
-- Name: finance_transaction_type_tran_account_type_e07bfe26; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_type_tran_account_type_e07bfe26 ON public.finance_transaction_type USING btree (tran_account_type);


--
-- Name: finance_transaction_type_tran_account_type_e07bfe26_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_type_tran_account_type_e07bfe26_like ON public.finance_transaction_type USING btree (tran_account_type varchar_pattern_ops);


--
-- Name: finance_transaction_type_tran_debit_account_type_8e709b03; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_type_tran_debit_account_type_8e709b03 ON public.finance_transaction_type USING btree (tran_debit_account_type);


--
-- Name: finance_transaction_type_tran_debit_account_type_8e709b03_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_type_tran_debit_account_type_8e709b03_like ON public.finance_transaction_type USING btree (tran_debit_account_type varchar_pattern_ops);


--
-- Name: finance_transaction_type_tran_type_id_9aad9897_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_type_tran_type_id_9aad9897_like ON public.finance_transaction_type USING btree (tran_type_id varchar_pattern_ops);


--
-- Name: finance_transaction_type_transaction_client_type_edf6c214; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_type_transaction_client_type_edf6c214 ON public.finance_transaction_type USING btree (transaction_client_type);


--
-- Name: finance_transaction_type_transaction_client_type_edf6c214_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX finance_transaction_type_transaction_client_type_edf6c214_like ON public.finance_transaction_type USING btree (transaction_client_type varchar_pattern_ops);


--
-- Name: hrm_advance_salary_employee_id_id_ce80740d; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_advance_salary_employee_id_id_ce80740d ON public.hrm_advance_salary USING btree (employee_id_id);


--
-- Name: hrm_advance_salary_employee_id_id_ce80740d_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_advance_salary_employee_id_id_ce80740d_like ON public.hrm_advance_salary USING btree (employee_id_id varchar_pattern_ops);


--
-- Name: hrm_allowance_payment_allowance_id_id_ef9e2265; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_allowance_payment_allowance_id_id_ef9e2265 ON public.hrm_allowance_payment USING btree (allowance_id_id);


--
-- Name: hrm_allowance_payment_allowance_id_id_ef9e2265_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_allowance_payment_allowance_id_id_ef9e2265_like ON public.hrm_allowance_payment USING btree (allowance_id_id varchar_pattern_ops);


--
-- Name: hrm_allowance_payment_employee_id_id_66ea71dc; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_allowance_payment_employee_id_id_66ea71dc ON public.hrm_allowance_payment USING btree (employee_id_id);


--
-- Name: hrm_allowance_payment_employee_id_id_66ea71dc_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_allowance_payment_employee_id_id_66ea71dc_like ON public.hrm_allowance_payment USING btree (employee_id_id varchar_pattern_ops);


--
-- Name: hrm_attendance_card_log_employee_id_589d8fe5; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_card_log_employee_id_589d8fe5 ON public.hrm_attendance_card_log USING btree (employee_id);


--
-- Name: hrm_attendance_card_log_employee_id_589d8fe5_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_card_log_employee_id_589d8fe5_like ON public.hrm_attendance_card_log USING btree (employee_id varchar_pattern_ops);


--
-- Name: hrm_attendance_card_log_shift_id_5f4b9478; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_card_log_shift_id_5f4b9478 ON public.hrm_attendance_card_log USING btree (shift_id);


--
-- Name: hrm_attendance_card_log_shift_id_5f4b9478_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_card_log_shift_id_5f4b9478_like ON public.hrm_attendance_card_log USING btree (shift_id varchar_pattern_ops);


--
-- Name: hrm_attendance_log_early_exit_approve_29dd429e; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_log_early_exit_approve_29dd429e ON public.hrm_attendance_log USING btree (early_exit_approve);


--
-- Name: hrm_attendance_log_early_exit_approve_29dd429e_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_log_early_exit_approve_29dd429e_like ON public.hrm_attendance_log USING btree (early_exit_approve varchar_pattern_ops);


--
-- Name: hrm_attendance_log_employee_id_d64c4560; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_log_employee_id_d64c4560 ON public.hrm_attendance_log USING btree (employee_id);


--
-- Name: hrm_attendance_log_employee_id_d64c4560_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_log_employee_id_d64c4560_like ON public.hrm_attendance_log USING btree (employee_id varchar_pattern_ops);


--
-- Name: hrm_attendance_log_late_entry_approve_4075b4bf; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_log_late_entry_approve_4075b4bf ON public.hrm_attendance_log USING btree (late_entry_approve);


--
-- Name: hrm_attendance_log_late_entry_approve_4075b4bf_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_log_late_entry_approve_4075b4bf_like ON public.hrm_attendance_log USING btree (late_entry_approve varchar_pattern_ops);


--
-- Name: hrm_attendance_log_shift_id_4394e5f9; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_log_shift_id_4394e5f9 ON public.hrm_attendance_log USING btree (shift_id);


--
-- Name: hrm_attendance_log_shift_id_4394e5f9_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_log_shift_id_4394e5f9_like ON public.hrm_attendance_log USING btree (shift_id varchar_pattern_ops);


--
-- Name: hrm_attendance_schedule_employee_id_77cdaa2b; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_schedule_employee_id_77cdaa2b ON public.hrm_attendance_schedule USING btree (employee_id);


--
-- Name: hrm_attendance_schedule_employee_id_77cdaa2b_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_schedule_employee_id_77cdaa2b_like ON public.hrm_attendance_schedule USING btree (employee_id varchar_pattern_ops);


--
-- Name: hrm_attendance_schedule_schedule_id_bdf33f4c_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_schedule_schedule_id_bdf33f4c_like ON public.hrm_attendance_schedule USING btree (schedule_id varchar_pattern_ops);


--
-- Name: hrm_attendance_schedule_shift_id_697a135e; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_schedule_shift_id_697a135e ON public.hrm_attendance_schedule USING btree (shift_id);


--
-- Name: hrm_attendance_schedule_shift_id_697a135e_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_attendance_schedule_shift_id_697a135e_like ON public.hrm_attendance_schedule USING btree (shift_id varchar_pattern_ops);


--
-- Name: hrm_bank_info_bank_id_6f4ffc08_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_bank_info_bank_id_6f4ffc08_like ON public.hrm_bank_info USING btree (bank_id varchar_pattern_ops);


--
-- Name: hrm_business_unit_bunit_id_5033be54_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_business_unit_bunit_id_5033be54_like ON public.hrm_business_unit USING btree (bunit_id varchar_pattern_ops);


--
-- Name: hrm_company_information_company_id_5457e3ad_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_information_company_id_5457e3ad_like ON public.hrm_company_information USING btree (company_id varchar_pattern_ops);


--
-- Name: hrm_company_information_country_id_3151c044; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_information_country_id_3151c044 ON public.hrm_company_information USING btree (country_id);


--
-- Name: hrm_company_information_country_id_3151c044_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_information_country_id_3151c044_like ON public.hrm_company_information USING btree (country_id varchar_pattern_ops);


--
-- Name: hrm_company_information_district_id_3caa4a24; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_information_district_id_3caa4a24 ON public.hrm_company_information USING btree (district_id);


--
-- Name: hrm_company_information_district_id_3caa4a24_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_information_district_id_3caa4a24_like ON public.hrm_company_information USING btree (district_id varchar_pattern_ops);


--
-- Name: hrm_company_information_division_id_671b3455; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_information_division_id_671b3455 ON public.hrm_company_information USING btree (division_id);


--
-- Name: hrm_company_information_division_id_671b3455_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_information_division_id_671b3455_like ON public.hrm_company_information USING btree (division_id varchar_pattern_ops);


--
-- Name: hrm_company_information_upozila_id_6483b444; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_information_upozila_id_6483b444 ON public.hrm_company_information USING btree (upozila_id);


--
-- Name: hrm_company_information_upozila_id_6483b444_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_information_upozila_id_6483b444_like ON public.hrm_company_information USING btree (upozila_id varchar_pattern_ops);


--
-- Name: hrm_company_office_country_id_0593a831; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_office_country_id_0593a831 ON public.hrm_company_office USING btree (country_id);


--
-- Name: hrm_company_office_country_id_0593a831_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_office_country_id_0593a831_like ON public.hrm_company_office USING btree (country_id varchar_pattern_ops);


--
-- Name: hrm_company_office_district_id_e41c0c48; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_office_district_id_e41c0c48 ON public.hrm_company_office USING btree (district_id);


--
-- Name: hrm_company_office_district_id_e41c0c48_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_office_district_id_e41c0c48_like ON public.hrm_company_office USING btree (district_id varchar_pattern_ops);


--
-- Name: hrm_company_office_division_id_b392e776; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_office_division_id_b392e776 ON public.hrm_company_office USING btree (division_id);


--
-- Name: hrm_company_office_division_id_b392e776_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_office_division_id_b392e776_like ON public.hrm_company_office USING btree (division_id varchar_pattern_ops);


--
-- Name: hrm_company_office_office_id_bad7ad08_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_office_office_id_bad7ad08_like ON public.hrm_company_office USING btree (office_id varchar_pattern_ops);


--
-- Name: hrm_company_office_upozila_id_23b98cc3; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_office_upozila_id_23b98cc3 ON public.hrm_company_office USING btree (upozila_id);


--
-- Name: hrm_company_office_upozila_id_23b98cc3_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_company_office_upozila_id_23b98cc3_like ON public.hrm_company_office USING btree (upozila_id varchar_pattern_ops);


--
-- Name: hrm_department_info_department_id_6eafcd34_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_department_info_department_id_6eafcd34_like ON public.hrm_department_info USING btree (department_id varchar_pattern_ops);


--
-- Name: hrm_education_degree_degree_id_de9f0d19_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_education_degree_degree_id_de9f0d19_like ON public.hrm_education_degree USING btree (degree_id varchar_pattern_ops);


--
-- Name: hrm_employee_designation_desig_id_68c717de_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_designation_desig_id_68c717de_like ON public.hrm_employee_designation USING btree (desig_id varchar_pattern_ops);


--
-- Name: hrm_employee_details_business_unit_id_5538533d; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_business_unit_id_5538533d ON public.hrm_employee_details USING btree (business_unit_id);


--
-- Name: hrm_employee_details_business_unit_id_5538533d_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_business_unit_id_5538533d_like ON public.hrm_employee_details USING btree (business_unit_id varchar_pattern_ops);


--
-- Name: hrm_employee_details_country_id_7b2fc6f0; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_country_id_7b2fc6f0 ON public.hrm_employee_details USING btree (country_id);


--
-- Name: hrm_employee_details_country_id_7b2fc6f0_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_country_id_7b2fc6f0_like ON public.hrm_employee_details USING btree (country_id varchar_pattern_ops);


--
-- Name: hrm_employee_details_current_shift_c8424269; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_current_shift_c8424269 ON public.hrm_employee_details USING btree (current_shift);


--
-- Name: hrm_employee_details_current_shift_c8424269_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_current_shift_c8424269_like ON public.hrm_employee_details USING btree (current_shift varchar_pattern_ops);


--
-- Name: hrm_employee_details_department_id_id_93dbfd0f; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_department_id_id_93dbfd0f ON public.hrm_employee_details USING btree (department_id_id);


--
-- Name: hrm_employee_details_department_id_id_93dbfd0f_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_department_id_id_93dbfd0f_like ON public.hrm_employee_details USING btree (department_id_id varchar_pattern_ops);


--
-- Name: hrm_employee_details_designation_id_96fea5a5; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_designation_id_96fea5a5 ON public.hrm_employee_details USING btree (designation_id);


--
-- Name: hrm_employee_details_designation_id_96fea5a5_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_designation_id_96fea5a5_like ON public.hrm_employee_details USING btree (designation_id varchar_pattern_ops);


--
-- Name: hrm_employee_details_district_id_f5db7e7c; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_district_id_f5db7e7c ON public.hrm_employee_details USING btree (district_id);


--
-- Name: hrm_employee_details_district_id_f5db7e7c_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_district_id_f5db7e7c_like ON public.hrm_employee_details USING btree (district_id varchar_pattern_ops);


--
-- Name: hrm_employee_details_division_id_3309c6b7; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_division_id_3309c6b7 ON public.hrm_employee_details USING btree (division_id);


--
-- Name: hrm_employee_details_division_id_3309c6b7_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_division_id_3309c6b7_like ON public.hrm_employee_details USING btree (division_id varchar_pattern_ops);


--
-- Name: hrm_employee_details_employee_id_75a1dee6_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_employee_id_75a1dee6_like ON public.hrm_employee_details USING btree (employee_id varchar_pattern_ops);


--
-- Name: hrm_employee_details_emptype_id_5ab23ff1; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_emptype_id_5ab23ff1 ON public.hrm_employee_details USING btree (emptype_id);


--
-- Name: hrm_employee_details_emptype_id_5ab23ff1_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_emptype_id_5ab23ff1_like ON public.hrm_employee_details USING btree (emptype_id varchar_pattern_ops);


--
-- Name: hrm_employee_details_office_location_b64b9ffe; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_office_location_b64b9ffe ON public.hrm_employee_details USING btree (office_location);


--
-- Name: hrm_employee_details_office_location_b64b9ffe_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_office_location_b64b9ffe_like ON public.hrm_employee_details USING btree (office_location varchar_pattern_ops);


--
-- Name: hrm_employee_details_salary_bank_ed639bb0; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_salary_bank_ed639bb0 ON public.hrm_employee_details USING btree (salary_bank);


--
-- Name: hrm_employee_details_salary_bank_ed639bb0_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_salary_bank_ed639bb0_like ON public.hrm_employee_details USING btree (salary_bank varchar_pattern_ops);


--
-- Name: hrm_employee_details_salscale_id_b262b68b; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_salscale_id_b262b68b ON public.hrm_employee_details USING btree (salscale_id);


--
-- Name: hrm_employee_details_salscale_id_b262b68b_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_salscale_id_b262b68b_like ON public.hrm_employee_details USING btree (salscale_id varchar_pattern_ops);


--
-- Name: hrm_employee_details_upozila_id_3127e7fc; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_upozila_id_3127e7fc ON public.hrm_employee_details USING btree (upozila_id);


--
-- Name: hrm_employee_details_upozila_id_3127e7fc_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_details_upozila_id_3127e7fc_like ON public.hrm_employee_details USING btree (upozila_id varchar_pattern_ops);


--
-- Name: hrm_employee_document_document_type_705e8488; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_document_document_type_705e8488 ON public.hrm_employee_document USING btree (document_type);


--
-- Name: hrm_employee_document_document_type_705e8488_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_document_document_type_705e8488_like ON public.hrm_employee_document USING btree (document_type varchar_pattern_ops);


--
-- Name: hrm_employee_document_employee_id_e3cceaca; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_document_employee_id_e3cceaca ON public.hrm_employee_document USING btree (employee_id);


--
-- Name: hrm_employee_document_employee_id_e3cceaca_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_document_employee_id_e3cceaca_like ON public.hrm_employee_document USING btree (employee_id varchar_pattern_ops);


--
-- Name: hrm_employee_document_type_document_type_id_ebbec1a5_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_document_type_document_type_id_ebbec1a5_like ON public.hrm_employee_document_type USING btree (document_type_id varchar_pattern_ops);


--
-- Name: hrm_employee_experience_employee_id_82fe434c; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_experience_employee_id_82fe434c ON public.hrm_employee_experience USING btree (employee_id);


--
-- Name: hrm_employee_experience_employee_id_82fe434c_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_experience_employee_id_82fe434c_like ON public.hrm_employee_experience USING btree (employee_id varchar_pattern_ops);


--
-- Name: hrm_employee_holyday_employee_id_id_702dd733; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_holyday_employee_id_id_702dd733 ON public.hrm_employee_holyday USING btree (employee_id_id);


--
-- Name: hrm_employee_holyday_employee_id_id_702dd733_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_holyday_employee_id_id_702dd733_like ON public.hrm_employee_holyday USING btree (employee_id_id varchar_pattern_ops);


--
-- Name: hrm_employee_holyday_holiday_sl_no_197a0ff0_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_holyday_holiday_sl_no_197a0ff0_like ON public.hrm_employee_holyday USING btree (holiday_sl_no varchar_pattern_ops);


--
-- Name: hrm_employee_holyday_holiday_type_id_a20c99b1; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_holyday_holiday_type_id_a20c99b1 ON public.hrm_employee_holyday USING btree (holiday_type_id);


--
-- Name: hrm_employee_holyday_holiday_type_id_a20c99b1_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_holyday_holiday_type_id_a20c99b1_like ON public.hrm_employee_holyday USING btree (holiday_type_id varchar_pattern_ops);


--
-- Name: hrm_employee_nominee_employee_id_f9330948; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_nominee_employee_id_f9330948 ON public.hrm_employee_nominee USING btree (employee_id);


--
-- Name: hrm_employee_nominee_employee_id_f9330948_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_nominee_employee_id_f9330948_like ON public.hrm_employee_nominee USING btree (employee_id varchar_pattern_ops);


--
-- Name: hrm_employee_training_employee_id_e764c871; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_training_employee_id_e764c871 ON public.hrm_employee_training USING btree (employee_id);


--
-- Name: hrm_employee_training_employee_id_e764c871_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_training_employee_id_e764c871_like ON public.hrm_employee_training USING btree (employee_id varchar_pattern_ops);


--
-- Name: hrm_employee_training_schedule_id_b953b2b8; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_training_schedule_id_b953b2b8 ON public.hrm_employee_training USING btree (schedule_id);


--
-- Name: hrm_employee_training_schedule_id_b953b2b8_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employee_training_schedule_id_b953b2b8_like ON public.hrm_employee_training USING btree (schedule_id varchar_pattern_ops);


--
-- Name: hrm_employment_type_emptype_id_c2ae3f68_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_employment_type_emptype_id_c2ae3f68_like ON public.hrm_employment_type USING btree (emptype_id varchar_pattern_ops);


--
-- Name: hrm_extra_allowance_allowance_id_b73399e3_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_extra_allowance_allowance_id_b73399e3_like ON public.hrm_extra_allowance USING btree (allowance_id varchar_pattern_ops);


--
-- Name: hrm_holyday_info_holiday_sl_no_ade4bcef_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_holyday_info_holiday_sl_no_ade4bcef_like ON public.hrm_holyday_info USING btree (holiday_sl_no varchar_pattern_ops);


--
-- Name: hrm_holyday_info_holiday_type_id_d4cc0e11; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_holyday_info_holiday_type_id_d4cc0e11 ON public.hrm_holyday_info USING btree (holiday_type_id);


--
-- Name: hrm_holyday_info_holiday_type_id_d4cc0e11_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_holyday_info_holiday_type_id_d4cc0e11_like ON public.hrm_holyday_info USING btree (holiday_type_id varchar_pattern_ops);


--
-- Name: hrm_holyday_type_holiday_type_id_7021a2e0_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_holyday_type_holiday_type_id_7021a2e0_like ON public.hrm_holyday_type USING btree (holiday_type_id varchar_pattern_ops);


--
-- Name: hrm_leave_application_application_to_90058102; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_leave_application_application_to_90058102 ON public.hrm_leave_application USING btree (application_to);


--
-- Name: hrm_leave_application_application_to_90058102_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_leave_application_application_to_90058102_like ON public.hrm_leave_application USING btree (application_to varchar_pattern_ops);


--
-- Name: hrm_leave_application_approve_by_72b17e88; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_leave_application_approve_by_72b17e88 ON public.hrm_leave_application USING btree (approve_by);


--
-- Name: hrm_leave_application_approve_by_72b17e88_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_leave_application_approve_by_72b17e88_like ON public.hrm_leave_application USING btree (approve_by varchar_pattern_ops);


--
-- Name: hrm_leave_application_employee_id_1a228630; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_leave_application_employee_id_1a228630 ON public.hrm_leave_application USING btree (employee_id);


--
-- Name: hrm_leave_application_employee_id_1a228630_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_leave_application_employee_id_1a228630_like ON public.hrm_leave_application USING btree (employee_id varchar_pattern_ops);


--
-- Name: hrm_leave_application_leave_id_d1e12a3a; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_leave_application_leave_id_d1e12a3a ON public.hrm_leave_application USING btree (leave_id);


--
-- Name: hrm_leave_application_leave_id_d1e12a3a_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_leave_application_leave_id_d1e12a3a_like ON public.hrm_leave_application USING btree (leave_id varchar_pattern_ops);


--
-- Name: hrm_leave_info_leave_id_8eaba6e7_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_leave_info_leave_id_8eaba6e7_like ON public.hrm_leave_info USING btree (leave_id varchar_pattern_ops);


--
-- Name: hrm_others_deduction_employee_id_id_8f15b14d; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_others_deduction_employee_id_id_8f15b14d ON public.hrm_others_deduction USING btree (employee_id_id);


--
-- Name: hrm_others_deduction_employee_id_id_8f15b14d_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_others_deduction_employee_id_id_8f15b14d_like ON public.hrm_others_deduction USING btree (employee_id_id varchar_pattern_ops);


--
-- Name: hrm_pay_bill_approve_by_d42d4002; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_pay_bill_approve_by_d42d4002 ON public.hrm_pay_bill USING btree (approve_by);


--
-- Name: hrm_pay_bill_approve_by_d42d4002_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_pay_bill_approve_by_d42d4002_like ON public.hrm_pay_bill USING btree (approve_by varchar_pattern_ops);


--
-- Name: hrm_pay_bill_bill_id_0eec37e0_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_pay_bill_bill_id_0eec37e0_like ON public.hrm_pay_bill USING btree (bill_id varchar_pattern_ops);


--
-- Name: hrm_pay_bill_checked_by_634e9140; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_pay_bill_checked_by_634e9140 ON public.hrm_pay_bill USING btree (checked_by);


--
-- Name: hrm_pay_bill_checked_by_634e9140_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_pay_bill_checked_by_634e9140_like ON public.hrm_pay_bill USING btree (checked_by varchar_pattern_ops);


--
-- Name: hrm_pay_bill_prepare_by_2c8863a3; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_pay_bill_prepare_by_2c8863a3 ON public.hrm_pay_bill USING btree (prepare_by);


--
-- Name: hrm_pay_bill_prepare_by_2c8863a3_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_pay_bill_prepare_by_2c8863a3_like ON public.hrm_pay_bill USING btree (prepare_by varchar_pattern_ops);


--
-- Name: hrm_salary_scale_bonous_bonus_id_a8ecb68a_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_salary_scale_bonous_bonus_id_a8ecb68a_like ON public.hrm_salary_scale_bonous USING btree (bonus_id varchar_pattern_ops);


--
-- Name: hrm_salary_scale_bonous_salscale_id_378a5def; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_salary_scale_bonous_salscale_id_378a5def ON public.hrm_salary_scale_bonous USING btree (salscale_id);


--
-- Name: hrm_salary_scale_bonous_salscale_id_378a5def_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_salary_scale_bonous_salscale_id_378a5def_like ON public.hrm_salary_scale_bonous USING btree (salscale_id varchar_pattern_ops);


--
-- Name: hrm_salary_scale_details_salscale_id_1055e585; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_salary_scale_details_salscale_id_1055e585 ON public.hrm_salary_scale_details USING btree (salscale_id);


--
-- Name: hrm_salary_scale_details_salscale_id_1055e585_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_salary_scale_details_salscale_id_1055e585_like ON public.hrm_salary_scale_details USING btree (salscale_id varchar_pattern_ops);


--
-- Name: hrm_salary_scale_details_salsdtlcale_id_6a36db17_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_salary_scale_details_salsdtlcale_id_6a36db17_like ON public.hrm_salary_scale_details USING btree (salsdtlcale_id varchar_pattern_ops);


--
-- Name: hrm_salary_scale_salscale_id_f15cd8bc_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_salary_scale_salscale_id_f15cd8bc_like ON public.hrm_salary_scale USING btree (salscale_id varchar_pattern_ops);


--
-- Name: hrm_shift_info_hist_shift_id_58f9c026; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_shift_info_hist_shift_id_58f9c026 ON public.hrm_shift_info_hist USING btree (shift_id);


--
-- Name: hrm_shift_info_hist_shift_id_58f9c026_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_shift_info_hist_shift_id_58f9c026_like ON public.hrm_shift_info_hist USING btree (shift_id varchar_pattern_ops);


--
-- Name: hrm_shift_info_office_id_30e29744; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_shift_info_office_id_30e29744 ON public.hrm_shift_info USING btree (office_id);


--
-- Name: hrm_shift_info_office_id_30e29744_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_shift_info_office_id_30e29744_like ON public.hrm_shift_info USING btree (office_id varchar_pattern_ops);


--
-- Name: hrm_shift_info_shift_id_c79f1084_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX hrm_shift_info_shift_id_c79f1084_like ON public.hrm_shift_info USING btree (shift_id varchar_pattern_ops);


--
-- Name: sales_client_photo_sign_client_id_b3f3c6cb; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_client_photo_sign_client_id_b3f3c6cb ON public.sales_client_photo_sign USING btree (client_id);


--
-- Name: sales_client_photo_sign_client_id_b3f3c6cb_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_client_photo_sign_client_id_b3f3c6cb_like ON public.sales_client_photo_sign USING btree (client_id varchar_pattern_ops);


--
-- Name: sales_client_profit_history_client_id_81e0bed2; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_client_profit_history_client_id_81e0bed2 ON public.sales_client_profit_history USING btree (client_id);


--
-- Name: sales_client_profit_history_client_id_81e0bed2_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_client_profit_history_client_id_81e0bed2_like ON public.sales_client_profit_history USING btree (client_id varchar_pattern_ops);


--
-- Name: sales_clients_client_id_199a1479_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_clients_client_id_199a1479_like ON public.sales_clients USING btree (client_id varchar_pattern_ops);


--
-- Name: sales_clients_district_id_2e9e190f; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_clients_district_id_2e9e190f ON public.sales_clients USING btree (district_id);


--
-- Name: sales_clients_district_id_2e9e190f_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_clients_district_id_2e9e190f_like ON public.sales_clients USING btree (district_id varchar_pattern_ops);


--
-- Name: sales_delar_security_info_client_id_ef9c765b; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_delar_security_info_client_id_ef9c765b ON public.sales_delar_security_info USING btree (client_id);


--
-- Name: sales_delar_security_info_client_id_ef9c765b_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_delar_security_info_client_id_ef9c765b_like ON public.sales_delar_security_info USING btree (client_id varchar_pattern_ops);


--
-- Name: sales_nominee_information_client_id_cd706bed; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_nominee_information_client_id_cd706bed ON public.sales_nominee_information USING btree (client_id);


--
-- Name: sales_nominee_information_client_id_cd706bed_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_nominee_information_client_id_cd706bed_like ON public.sales_nominee_information USING btree (client_id varchar_pattern_ops);


--
-- Name: sales_products_brand_brand_id_796b2977_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_products_brand_brand_id_796b2977_like ON public.sales_products_brand USING btree (brand_id varchar_pattern_ops);


--
-- Name: sales_products_brand_id_93365e90; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_products_brand_id_93365e90 ON public.sales_products USING btree (brand_id);


--
-- Name: sales_products_brand_id_93365e90_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_products_brand_id_93365e90_like ON public.sales_products USING btree (brand_id varchar_pattern_ops);


--
-- Name: sales_products_group_group_id_2ff859c2_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_products_group_group_id_2ff859c2_like ON public.sales_products_group USING btree (group_id varchar_pattern_ops);


--
-- Name: sales_products_product_group_f3356370; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_products_product_group_f3356370 ON public.sales_products USING btree (product_group);


--
-- Name: sales_products_product_group_f3356370_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_products_product_group_f3356370_like ON public.sales_products USING btree (product_group varchar_pattern_ops);


--
-- Name: sales_products_product_id_d68b1245_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_products_product_id_d68b1245_like ON public.sales_products USING btree (product_id varchar_pattern_ops);


--
-- Name: sales_purchase_order_dtl_temp_product_id_a4071450; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_purchase_order_dtl_temp_product_id_a4071450 ON public.sales_purchase_order_dtl_temp USING btree (product_id);


--
-- Name: sales_purchase_order_dtl_temp_product_id_a4071450_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_purchase_order_dtl_temp_product_id_a4071450_like ON public.sales_purchase_order_dtl_temp USING btree (product_id varchar_pattern_ops);


--
-- Name: sales_stock_quantity_transfer_ from_branch_code_0e744b55; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX "sales_stock_quantity_transfer_ from_branch_code_0e744b55" ON public.sales_stock_quantity_transfer USING btree (from_branch_code);


--
-- Name: sales_stock_quantity_transfer_product_id_7f97c70d; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_stock_quantity_transfer_product_id_7f97c70d ON public.sales_stock_quantity_transfer USING btree (product_id);


--
-- Name: sales_stock_quantity_transfer_product_id_7f97c70d_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_stock_quantity_transfer_product_id_7f97c70d_like ON public.sales_stock_quantity_transfer USING btree (product_id varchar_pattern_ops);


--
-- Name: sales_stock_quantity_transfer_to_branch_code_7290ffa3; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_stock_quantity_transfer_to_branch_code_7290ffa3 ON public.sales_stock_quantity_transfer USING btree (to_branch_code);


--
-- Name: sales_stockdetailstemp_product_id_77aac8c2; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_stockdetailstemp_product_id_77aac8c2 ON public.sales_stockdetailstemp USING btree (product_id);


--
-- Name: sales_stockdetailstemp_product_id_77aac8c2_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_stockdetailstemp_product_id_77aac8c2_like ON public.sales_stockdetailstemp USING btree (product_id varchar_pattern_ops);


--
-- Name: sales_supplier_information_supp_id_612ddb10_like; Type: INDEX; Schema: public; Owner: delarship
--

CREATE INDEX sales_supplier_information_supp_id_612ddb10_like ON public.sales_supplier_information USING btree (supp_id varchar_pattern_ops);


--
-- Name: appauth_branch appauth_branch_country_id_66153359_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_branch
    ADD CONSTRAINT appauth_branch_country_id_66153359_fk_appauth_l FOREIGN KEY (country_id) REFERENCES public.appauth_loc_country(country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_branch appauth_branch_district_id_85d92163_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_branch
    ADD CONSTRAINT appauth_branch_district_id_85d92163_fk_appauth_l FOREIGN KEY (district_id) REFERENCES public.appauth_loc_district(district_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_branch appauth_branch_division_id_32ed7ad4_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_branch
    ADD CONSTRAINT appauth_branch_division_id_32ed7ad4_fk_appauth_l FOREIGN KEY (division_id) REFERENCES public.appauth_loc_division(division_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_branch appauth_branch_union_id_80c99188_fk_appauth_loc_union_union_id; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_branch
    ADD CONSTRAINT appauth_branch_union_id_80c99188_fk_appauth_loc_union_union_id FOREIGN KEY (union_id) REFERENCES public.appauth_loc_union(union_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_branch appauth_branch_upozila_id_9f5c9eba_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_branch
    ADD CONSTRAINT appauth_branch_upozila_id_9f5c9eba_fk_appauth_l FOREIGN KEY (upozila_id) REFERENCES public.appauth_loc_upazila(upozila_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_employees appauth_employees_branch_code_93e4be7c_fk_appauth_b; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_employees
    ADD CONSTRAINT appauth_employees_branch_code_93e4be7c_fk_appauth_b FOREIGN KEY (branch_code) REFERENCES public.appauth_branch(branch_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_eodsod_process appauth_eodsod_proce_branch_code_c4ed3649_fk_appauth_b; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_eodsod_process
    ADD CONSTRAINT appauth_eodsod_proce_branch_code_c4ed3649_fk_appauth_b FOREIGN KEY (branch_code) REFERENCES public.appauth_branch(branch_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_loc_district appauth_loc_district_division_id_648258af_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_loc_district
    ADD CONSTRAINT appauth_loc_district_division_id_648258af_fk_appauth_l FOREIGN KEY (division_id) REFERENCES public.appauth_loc_division(division_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_loc_division appauth_loc_division_country_id_98db27d5_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_loc_division
    ADD CONSTRAINT appauth_loc_division_country_id_98db27d5_fk_appauth_l FOREIGN KEY (country_id) REFERENCES public.appauth_loc_country(country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_loc_region appauth_loc_region_union_id_16da29be_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_loc_region
    ADD CONSTRAINT appauth_loc_region_union_id_16da29be_fk_appauth_l FOREIGN KEY (union_id) REFERENCES public.appauth_loc_union(union_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_loc_union appauth_loc_union_upozila_id_98fc1437_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_loc_union
    ADD CONSTRAINT appauth_loc_union_upozila_id_98fc1437_fk_appauth_l FOREIGN KEY (upozila_id) REFERENCES public.appauth_loc_upazila(upozila_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_loc_upazila appauth_loc_upazila_district_id_8a88d57d_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_loc_upazila
    ADD CONSTRAINT appauth_loc_upazila_district_id_8a88d57d_fk_appauth_l FOREIGN KEY (district_id) REFERENCES public.appauth_loc_district(district_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appauth_user_settings appauth_user_setting_employee_id_356174c8_fk_appauth_e; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.appauth_user_settings
    ADD CONSTRAINT appauth_user_setting_employee_id_356174c8_fk_appauth_e FOREIGN KEY (employee_id) REFERENCES public.appauth_employees(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: delar_center delar_center_center_employee_id_a389429f_fk_appauth_e; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_center
    ADD CONSTRAINT delar_center_center_employee_id_a389429f_fk_appauth_e FOREIGN KEY (center_employee_id) REFERENCES public.appauth_employees(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: delar_center delar_center_center_region_id_56bee516_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.delar_center
    ADD CONSTRAINT delar_center_center_region_id_56bee516_fk_appauth_l FOREIGN KEY (center_region_id) REFERENCES public.appauth_loc_region(region_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ecom_order_master ecom_order_master_delivery_address_id_cefc9a7e_fk_ecom_deli; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_order_master
    ADD CONSTRAINT ecom_order_master_delivery_address_id_cefc9a7e_fk_ecom_deli FOREIGN KEY (delivery_address_id) REFERENCES public.ecom_delivery_address(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ecom_product_group_list ecom_product_group_l_categories_id_9e726cf6_fk_ecom_prod; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_product_group_list
    ADD CONSTRAINT ecom_product_group_l_categories_id_9e726cf6_fk_ecom_prod FOREIGN KEY (categories_id) REFERENCES public.ecom_product_categories(categories_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ecom_product_group_list ecom_product_group_l_subcategories_id_c416a73d_fk_ecom_prod; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_product_group_list
    ADD CONSTRAINT ecom_product_group_l_subcategories_id_c416a73d_fk_ecom_prod FOREIGN KEY (subcategories_id) REFERENCES public.ecom_product_sub_categories(subcategories_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ecom_product_images ecom_product_images_product_id_ffccd58e_fk_ecom_prod; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_product_images
    ADD CONSTRAINT ecom_product_images_product_id_ffccd58e_fk_ecom_prod FOREIGN KEY (product_id) REFERENCES public.ecom_products(product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ecom_product_sub_categories ecom_product_sub_cat_categories_id_ceecdf2e_fk_ecom_prod; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_product_sub_categories
    ADD CONSTRAINT ecom_product_sub_cat_categories_id_ceecdf2e_fk_ecom_prod FOREIGN KEY (categories_id) REFERENCES public.ecom_product_categories(categories_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ecom_products ecom_products_category_id_2aad9a6d_fk_ecom_prod; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_products
    ADD CONSTRAINT ecom_products_category_id_2aad9a6d_fk_ecom_prod FOREIGN KEY (category_id) REFERENCES public.ecom_product_categories(categories_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ecom_products ecom_products_product_brand_id_8f30aa72_fk_sales_pro; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_products
    ADD CONSTRAINT ecom_products_product_brand_id_8f30aa72_fk_sales_pro FOREIGN KEY (product_brand_id) REFERENCES public.sales_products_brand(brand_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ecom_products ecom_products_sub_category_id_8a546a86_fk_ecom_prod; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_products
    ADD CONSTRAINT ecom_products_sub_category_id_8a546a86_fk_ecom_prod FOREIGN KEY (sub_category_id) REFERENCES public.ecom_product_sub_categories(subcategories_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ecom_user_profile ecom_user_profile_app_user_id_id_6bddadb3_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.ecom_user_profile
    ADD CONSTRAINT ecom_user_profile_app_user_id_id_6bddadb3_fk_auth_user_id FOREIGN KEY (app_user_id_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_account_type finance_account_type_account_ledger_code_9d224dcc_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_account_type
    ADD CONSTRAINT finance_account_type_account_ledger_code_9d224dcc_fk_finance_g FOREIGN KEY (account_ledger_code) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_account_type finance_account_type_expense_ledger_6ca248c7_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_account_type
    ADD CONSTRAINT finance_account_type_expense_ledger_6ca248c7_fk_finance_g FOREIGN KEY (expense_ledger) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_account_type finance_account_type_income_ledger_574c346a_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_account_type
    ADD CONSTRAINT finance_account_type_income_ledger_574c346a_fk_finance_g FOREIGN KEY (income_ledger) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_account_type finance_account_type_payable_ledger_b8c86dfb_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_account_type
    ADD CONSTRAINT finance_account_type_payable_ledger_b8c86dfb_fk_finance_g FOREIGN KEY (payable_ledger) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_account_type finance_account_type_receivable_ledger_c6c423aa_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_account_type
    ADD CONSTRAINT finance_account_type_receivable_ledger_c6c423aa_fk_finance_g FOREIGN KEY (receivable_ledger) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_accounts_balance_hist finance_accounts_bal_branch_code_14b5049b_fk_appauth_b; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_accounts_balance_hist
    ADD CONSTRAINT finance_accounts_bal_branch_code_14b5049b_fk_appauth_b FOREIGN KEY (branch_code) REFERENCES public.appauth_branch(branch_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_accounts_balmon_hist finance_accounts_bal_branch_code_99cb7f74_fk_appauth_b; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_accounts_balmon_hist
    ADD CONSTRAINT finance_accounts_bal_branch_code_99cb7f74_fk_appauth_b FOREIGN KEY (branch_code) REFERENCES public.appauth_branch(branch_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_cash_and_bank_ledger finance_cash_and_ban_branch_code_9d5fabf7_fk_appauth_b; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_cash_and_bank_ledger
    ADD CONSTRAINT finance_cash_and_ban_branch_code_9d5fabf7_fk_appauth_b FOREIGN KEY (branch_code) REFERENCES public.appauth_branch(branch_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_cash_and_bank_ledger finance_cash_and_ban_gl_code_c3ae6403_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_cash_and_bank_ledger
    ADD CONSTRAINT finance_cash_and_ban_gl_code_c3ae6403_fk_finance_g FOREIGN KEY (gl_code) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_charges finance_charges_charges_ledger_code_981244af_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_charges
    ADD CONSTRAINT finance_charges_charges_ledger_code_981244af_fk_finance_g FOREIGN KEY (charges_ledger_code) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_client_account_mapping finance_client_accou_account_type_code_7063d77a_fk_finance_a; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_client_account_mapping
    ADD CONSTRAINT finance_client_accou_account_type_code_7063d77a_fk_finance_a FOREIGN KEY (account_type_code) REFERENCES public.finance_account_type(account_type_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_client_account_mapping finance_client_accou_client_type_code_338d0742_fk_finance_c; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_client_account_mapping
    ADD CONSTRAINT finance_client_accou_client_type_code_338d0742_fk_finance_c FOREIGN KEY (client_type_code) REFERENCES public.finance_client_type(client_type_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_general_ledger finance_general_ledg_parent_code_f053aacb_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_general_ledger
    ADD CONSTRAINT finance_general_ledg_parent_code_f053aacb_fk_finance_g FOREIGN KEY (parent_code) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_ledger_balance finance_ledger_balan_gl_code_e3cac0f2_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_balance
    ADD CONSTRAINT finance_ledger_balan_gl_code_e3cac0f2_fk_finance_g FOREIGN KEY (gl_code) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_ledger_transaction_type finance_ledger_trans_gl_code_cf88ecd1_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_transaction_type
    ADD CONSTRAINT finance_ledger_trans_gl_code_cf88ecd1_fk_finance_g FOREIGN KEY (gl_code) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_ledger_transaction_type finance_ledger_trans_tran_type_id_48d5a37c_fk_finance_t; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_ledger_transaction_type
    ADD CONSTRAINT finance_ledger_trans_tran_type_id_48d5a37c_fk_finance_t FOREIGN KEY (tran_type_id) REFERENCES public.finance_transaction_type(tran_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_transaction_type finance_transaction__credit_gl_code_fa25fb08_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_type
    ADD CONSTRAINT finance_transaction__credit_gl_code_fa25fb08_fk_finance_g FOREIGN KEY (credit_gl_code) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_transaction_type finance_transaction__debit_gl_code_37fb82e2_fk_finance_g; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_type
    ADD CONSTRAINT finance_transaction__debit_gl_code_37fb82e2_fk_finance_g FOREIGN KEY (debit_gl_code) REFERENCES public.finance_general_ledger(gl_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_transaction_type finance_transaction__tran_account_type_e07bfe26_fk_finance_a; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_type
    ADD CONSTRAINT finance_transaction__tran_account_type_e07bfe26_fk_finance_a FOREIGN KEY (tran_account_type) REFERENCES public.finance_account_type(account_type_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_transaction_type finance_transaction__tran_debit_account_t_8e709b03_fk_finance_a; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_type
    ADD CONSTRAINT finance_transaction__tran_debit_account_t_8e709b03_fk_finance_a FOREIGN KEY (tran_debit_account_type) REFERENCES public.finance_account_type(account_type_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: finance_transaction_type finance_transaction__transaction_client_t_edf6c214_fk_finance_c; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.finance_transaction_type
    ADD CONSTRAINT finance_transaction__transaction_client_t_edf6c214_fk_finance_c FOREIGN KEY (transaction_client_type) REFERENCES public.finance_client_type(client_type_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_advance_salary hrm_advance_salary_employee_id_id_ce80740d_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_advance_salary
    ADD CONSTRAINT hrm_advance_salary_employee_id_id_ce80740d_fk_hrm_emplo FOREIGN KEY (employee_id_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_allowance_payment hrm_allowance_paymen_allowance_id_id_ef9e2265_fk_hrm_extra; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_allowance_payment
    ADD CONSTRAINT hrm_allowance_paymen_allowance_id_id_ef9e2265_fk_hrm_extra FOREIGN KEY (allowance_id_id) REFERENCES public.hrm_extra_allowance(allowance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_allowance_payment hrm_allowance_paymen_employee_id_id_66ea71dc_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_allowance_payment
    ADD CONSTRAINT hrm_allowance_paymen_employee_id_id_66ea71dc_fk_hrm_emplo FOREIGN KEY (employee_id_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_attendance_card_log hrm_attendance_card__employee_id_589d8fe5_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_card_log
    ADD CONSTRAINT hrm_attendance_card__employee_id_589d8fe5_fk_hrm_emplo FOREIGN KEY (employee_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_attendance_card_log hrm_attendance_card__shift_id_5f4b9478_fk_hrm_shift; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_card_log
    ADD CONSTRAINT hrm_attendance_card__shift_id_5f4b9478_fk_hrm_shift FOREIGN KEY (shift_id) REFERENCES public.hrm_shift_info(shift_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_attendance_log hrm_attendance_log_early_exit_approve_29dd429e_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_log
    ADD CONSTRAINT hrm_attendance_log_early_exit_approve_29dd429e_fk_hrm_emplo FOREIGN KEY (early_exit_approve) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_attendance_log hrm_attendance_log_employee_id_d64c4560_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_log
    ADD CONSTRAINT hrm_attendance_log_employee_id_d64c4560_fk_hrm_emplo FOREIGN KEY (employee_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_attendance_log hrm_attendance_log_late_entry_approve_4075b4bf_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_log
    ADD CONSTRAINT hrm_attendance_log_late_entry_approve_4075b4bf_fk_hrm_emplo FOREIGN KEY (late_entry_approve) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_attendance_log hrm_attendance_log_shift_id_4394e5f9_fk_hrm_shift_info_shift_id; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_log
    ADD CONSTRAINT hrm_attendance_log_shift_id_4394e5f9_fk_hrm_shift_info_shift_id FOREIGN KEY (shift_id) REFERENCES public.hrm_shift_info(shift_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_attendance_schedule hrm_attendance_sched_employee_id_77cdaa2b_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_schedule
    ADD CONSTRAINT hrm_attendance_sched_employee_id_77cdaa2b_fk_hrm_emplo FOREIGN KEY (employee_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_attendance_schedule hrm_attendance_sched_shift_id_697a135e_fk_hrm_shift; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_attendance_schedule
    ADD CONSTRAINT hrm_attendance_sched_shift_id_697a135e_fk_hrm_shift FOREIGN KEY (shift_id) REFERENCES public.hrm_shift_info(shift_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_company_information hrm_company_informat_country_id_3151c044_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_company_information
    ADD CONSTRAINT hrm_company_informat_country_id_3151c044_fk_appauth_l FOREIGN KEY (country_id) REFERENCES public.appauth_loc_country(country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_company_information hrm_company_informat_district_id_3caa4a24_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_company_information
    ADD CONSTRAINT hrm_company_informat_district_id_3caa4a24_fk_appauth_l FOREIGN KEY (district_id) REFERENCES public.appauth_loc_district(district_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_company_information hrm_company_informat_division_id_671b3455_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_company_information
    ADD CONSTRAINT hrm_company_informat_division_id_671b3455_fk_appauth_l FOREIGN KEY (division_id) REFERENCES public.appauth_loc_division(division_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_company_information hrm_company_informat_upozila_id_6483b444_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_company_information
    ADD CONSTRAINT hrm_company_informat_upozila_id_6483b444_fk_appauth_l FOREIGN KEY (upozila_id) REFERENCES public.appauth_loc_upazila(upozila_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_company_office hrm_company_office_country_id_0593a831_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_company_office
    ADD CONSTRAINT hrm_company_office_country_id_0593a831_fk_appauth_l FOREIGN KEY (country_id) REFERENCES public.appauth_loc_country(country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_company_office hrm_company_office_district_id_e41c0c48_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_company_office
    ADD CONSTRAINT hrm_company_office_district_id_e41c0c48_fk_appauth_l FOREIGN KEY (district_id) REFERENCES public.appauth_loc_district(district_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_company_office hrm_company_office_division_id_b392e776_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_company_office
    ADD CONSTRAINT hrm_company_office_division_id_b392e776_fk_appauth_l FOREIGN KEY (division_id) REFERENCES public.appauth_loc_division(division_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_company_office hrm_company_office_upozila_id_23b98cc3_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_company_office
    ADD CONSTRAINT hrm_company_office_upozila_id_23b98cc3_fk_appauth_l FOREIGN KEY (upozila_id) REFERENCES public.appauth_loc_upazila(upozila_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_business_unit_id_5538533d_fk_hrm_busin; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_business_unit_id_5538533d_fk_hrm_busin FOREIGN KEY (business_unit_id) REFERENCES public.hrm_business_unit(bunit_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_country_id_7b2fc6f0_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_country_id_7b2fc6f0_fk_appauth_l FOREIGN KEY (country_id) REFERENCES public.appauth_loc_country(country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_current_shift_c8424269_fk_hrm_shift; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_current_shift_c8424269_fk_hrm_shift FOREIGN KEY (current_shift) REFERENCES public.hrm_shift_info(shift_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_department_id_id_93dbfd0f_fk_hrm_depar; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_department_id_id_93dbfd0f_fk_hrm_depar FOREIGN KEY (department_id_id) REFERENCES public.hrm_department_info(department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_designation_id_96fea5a5_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_designation_id_96fea5a5_fk_hrm_emplo FOREIGN KEY (designation_id) REFERENCES public.hrm_employee_designation(desig_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_district_id_f5db7e7c_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_district_id_f5db7e7c_fk_appauth_l FOREIGN KEY (district_id) REFERENCES public.appauth_loc_district(district_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_division_id_3309c6b7_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_division_id_3309c6b7_fk_appauth_l FOREIGN KEY (division_id) REFERENCES public.appauth_loc_division(division_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_emptype_id_5ab23ff1_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_emptype_id_5ab23ff1_fk_hrm_emplo FOREIGN KEY (emptype_id) REFERENCES public.hrm_employment_type(emptype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_office_location_b64b9ffe_fk_hrm_compa; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_office_location_b64b9ffe_fk_hrm_compa FOREIGN KEY (office_location) REFERENCES public.hrm_company_office(office_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_salary_bank_ed639bb0_fk_hrm_bank_; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_salary_bank_ed639bb0_fk_hrm_bank_ FOREIGN KEY (salary_bank) REFERENCES public.hrm_bank_info(bank_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_salscale_id_b262b68b_fk_hrm_salar; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_salscale_id_b262b68b_fk_hrm_salar FOREIGN KEY (salscale_id) REFERENCES public.hrm_salary_scale(salscale_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_details hrm_employee_details_upozila_id_3127e7fc_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_details
    ADD CONSTRAINT hrm_employee_details_upozila_id_3127e7fc_fk_appauth_l FOREIGN KEY (upozila_id) REFERENCES public.appauth_loc_upazila(upozila_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_document hrm_employee_documen_document_type_705e8488_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_document
    ADD CONSTRAINT hrm_employee_documen_document_type_705e8488_fk_hrm_emplo FOREIGN KEY (document_type) REFERENCES public.hrm_employee_document_type(document_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_document hrm_employee_documen_employee_id_e3cceaca_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_document
    ADD CONSTRAINT hrm_employee_documen_employee_id_e3cceaca_fk_hrm_emplo FOREIGN KEY (employee_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_experience hrm_employee_experie_employee_id_82fe434c_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_experience
    ADD CONSTRAINT hrm_employee_experie_employee_id_82fe434c_fk_hrm_emplo FOREIGN KEY (employee_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_holyday hrm_employee_holyday_employee_id_id_702dd733_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_holyday
    ADD CONSTRAINT hrm_employee_holyday_employee_id_id_702dd733_fk_hrm_emplo FOREIGN KEY (employee_id_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_holyday hrm_employee_holyday_holiday_type_id_a20c99b1_fk_hrm_holyd; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_holyday
    ADD CONSTRAINT hrm_employee_holyday_holiday_type_id_a20c99b1_fk_hrm_holyd FOREIGN KEY (holiday_type_id) REFERENCES public.hrm_holyday_type(holiday_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_nominee hrm_employee_nominee_employee_id_f9330948_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_nominee
    ADD CONSTRAINT hrm_employee_nominee_employee_id_f9330948_fk_hrm_emplo FOREIGN KEY (employee_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_training hrm_employee_trainin_employee_id_e764c871_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_training
    ADD CONSTRAINT hrm_employee_trainin_employee_id_e764c871_fk_hrm_emplo FOREIGN KEY (employee_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_employee_training hrm_employee_trainin_schedule_id_b953b2b8_fk_hrm_atten; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_employee_training
    ADD CONSTRAINT hrm_employee_trainin_schedule_id_b953b2b8_fk_hrm_atten FOREIGN KEY (schedule_id) REFERENCES public.hrm_attendance_schedule(schedule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_holyday_info hrm_holyday_info_holiday_type_id_d4cc0e11_fk_hrm_holyd; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_holyday_info
    ADD CONSTRAINT hrm_holyday_info_holiday_type_id_d4cc0e11_fk_hrm_holyd FOREIGN KEY (holiday_type_id) REFERENCES public.hrm_holyday_type(holiday_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_leave_application hrm_leave_applicatio_application_to_90058102_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_leave_application
    ADD CONSTRAINT hrm_leave_applicatio_application_to_90058102_fk_hrm_emplo FOREIGN KEY (application_to) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_leave_application hrm_leave_applicatio_approve_by_72b17e88_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_leave_application
    ADD CONSTRAINT hrm_leave_applicatio_approve_by_72b17e88_fk_hrm_emplo FOREIGN KEY (approve_by) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_leave_application hrm_leave_applicatio_employee_id_1a228630_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_leave_application
    ADD CONSTRAINT hrm_leave_applicatio_employee_id_1a228630_fk_hrm_emplo FOREIGN KEY (employee_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_leave_application hrm_leave_applicatio_leave_id_d1e12a3a_fk_hrm_leave; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_leave_application
    ADD CONSTRAINT hrm_leave_applicatio_leave_id_d1e12a3a_fk_hrm_leave FOREIGN KEY (leave_id) REFERENCES public.hrm_leave_info(leave_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_others_deduction hrm_others_deduction_employee_id_id_8f15b14d_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_others_deduction
    ADD CONSTRAINT hrm_others_deduction_employee_id_id_8f15b14d_fk_hrm_emplo FOREIGN KEY (employee_id_id) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_pay_bill hrm_pay_bill_approve_by_d42d4002_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_pay_bill
    ADD CONSTRAINT hrm_pay_bill_approve_by_d42d4002_fk_hrm_emplo FOREIGN KEY (approve_by) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_pay_bill hrm_pay_bill_checked_by_634e9140_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_pay_bill
    ADD CONSTRAINT hrm_pay_bill_checked_by_634e9140_fk_hrm_emplo FOREIGN KEY (checked_by) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_pay_bill hrm_pay_bill_prepare_by_2c8863a3_fk_hrm_emplo; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_pay_bill
    ADD CONSTRAINT hrm_pay_bill_prepare_by_2c8863a3_fk_hrm_emplo FOREIGN KEY (prepare_by) REFERENCES public.hrm_employee_details(employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_salary_scale_bonous hrm_salary_scale_bon_salscale_id_378a5def_fk_hrm_salar; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_salary_scale_bonous
    ADD CONSTRAINT hrm_salary_scale_bon_salscale_id_378a5def_fk_hrm_salar FOREIGN KEY (salscale_id) REFERENCES public.hrm_salary_scale(salscale_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_salary_scale_details hrm_salary_scale_det_salscale_id_1055e585_fk_hrm_salar; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_salary_scale_details
    ADD CONSTRAINT hrm_salary_scale_det_salscale_id_1055e585_fk_hrm_salar FOREIGN KEY (salscale_id) REFERENCES public.hrm_salary_scale(salscale_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_shift_info_hist hrm_shift_info_hist_shift_id_58f9c026_fk_hrm_shift; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_shift_info_hist
    ADD CONSTRAINT hrm_shift_info_hist_shift_id_58f9c026_fk_hrm_shift FOREIGN KEY (shift_id) REFERENCES public.hrm_shift_info(shift_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hrm_shift_info hrm_shift_info_office_id_30e29744_fk_hrm_compa; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.hrm_shift_info
    ADD CONSTRAINT hrm_shift_info_office_id_30e29744_fk_hrm_compa FOREIGN KEY (office_id) REFERENCES public.hrm_company_office(office_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_client_photo_sign sales_client_photo_s_client_id_b3f3c6cb_fk_sales_cli; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_photo_sign
    ADD CONSTRAINT sales_client_photo_s_client_id_b3f3c6cb_fk_sales_cli FOREIGN KEY (client_id) REFERENCES public.sales_clients(client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_client_profit_history sales_client_profit__client_id_81e0bed2_fk_sales_cli; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_client_profit_history
    ADD CONSTRAINT sales_client_profit__client_id_81e0bed2_fk_sales_cli FOREIGN KEY (client_id) REFERENCES public.sales_clients(client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_clients sales_clients_district_id_2e9e190f_fk_appauth_l; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_clients
    ADD CONSTRAINT sales_clients_district_id_2e9e190f_fk_appauth_l FOREIGN KEY (district_id) REFERENCES public.appauth_loc_district(district_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_delar_security_info sales_delar_security_client_id_ef9c765b_fk_sales_cli; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_delar_security_info
    ADD CONSTRAINT sales_delar_security_client_id_ef9c765b_fk_sales_cli FOREIGN KEY (client_id) REFERENCES public.sales_clients(client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_nominee_information sales_nominee_inform_client_id_cd706bed_fk_sales_cli; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_nominee_information
    ADD CONSTRAINT sales_nominee_inform_client_id_cd706bed_fk_sales_cli FOREIGN KEY (client_id) REFERENCES public.sales_clients(client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_products sales_products_brand_id_93365e90_fk_sales_pro; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_products
    ADD CONSTRAINT sales_products_brand_id_93365e90_fk_sales_pro FOREIGN KEY (brand_id) REFERENCES public.sales_products_brand(brand_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_products sales_products_product_group_f3356370_fk_sales_pro; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_products
    ADD CONSTRAINT sales_products_product_group_f3356370_fk_sales_pro FOREIGN KEY (product_group) REFERENCES public.sales_products_group(group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_purchase_order_dtl_temp sales_purchase_order_product_id_a4071450_fk_sales_pro; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_purchase_order_dtl_temp
    ADD CONSTRAINT sales_purchase_order_product_id_a4071450_fk_sales_pro FOREIGN KEY (product_id) REFERENCES public.sales_products(product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_stock_quantity_transfer sales_stock_quantity_from_branch_code_5805824c_fk_appauth_b; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stock_quantity_transfer
    ADD CONSTRAINT sales_stock_quantity_from_branch_code_5805824c_fk_appauth_b FOREIGN KEY (from_branch_code) REFERENCES public.appauth_branch(branch_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_stock_quantity_transfer sales_stock_quantity_product_id_7f97c70d_fk_sales_pro; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stock_quantity_transfer
    ADD CONSTRAINT sales_stock_quantity_product_id_7f97c70d_fk_sales_pro FOREIGN KEY (product_id) REFERENCES public.sales_products(product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_stock_quantity_transfer sales_stock_quantity_to_branch_code_7290ffa3_fk_appauth_b; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stock_quantity_transfer
    ADD CONSTRAINT sales_stock_quantity_to_branch_code_7290ffa3_fk_appauth_b FOREIGN KEY (to_branch_code) REFERENCES public.appauth_branch(branch_code) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sales_stockdetailstemp sales_stockdetailste_product_id_77aac8c2_fk_sales_pro; Type: FK CONSTRAINT; Schema: public; Owner: delarship
--

ALTER TABLE ONLY public.sales_stockdetailstemp
    ADD CONSTRAINT sales_stockdetailste_product_id_77aac8c2_fk_sales_pro FOREIGN KEY (product_id) REFERENCES public.sales_products(product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

